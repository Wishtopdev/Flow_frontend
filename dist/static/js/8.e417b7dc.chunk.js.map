{"version":3,"sources":["app/modules/GoogleMaterialExamples/inputs/ButtonsExamplesPage.js","app/modules/GoogleMaterialExamples/inputs/CheckboxesExamplesPage.js","app/modules/GoogleMaterialExamples/inputs/PickersExamplesPage.js","app/modules/GoogleMaterialExamples/inputs/RadioButtonsExamplesPage.js","app/modules/GoogleMaterialExamples/inputs/SelectsExamplesPage.js","app/modules/GoogleMaterialExamples/inputs/SwitchesExamplesPage.js","app/modules/GoogleMaterialExamples/inputs/TextFieldsExamplesPage.js","app/modules/GoogleMaterialExamples/inputs/TransferListExamplesPage.js","app/modules/GoogleMaterialExamples/inputs/AutocompleteExamplesPage.js","app/modules/GoogleMaterialExamples/inputs/InputsPage.js","app/modules/GoogleMaterialExamples/data-displays/AvatarsExamplesPage.js","app/modules/GoogleMaterialExamples/data-displays/BadgesExamplesPage.js","app/modules/GoogleMaterialExamples/data-displays/ChipsExamplesPage.js","app/modules/GoogleMaterialExamples/data-displays/DividersExamplesPage.js","app/modules/GoogleMaterialExamples/data-displays/IconsExamplesPage.js","app/modules/GoogleMaterialExamples/data-displays/ListsExamplesPage.js","app/modules/GoogleMaterialExamples/data-displays/TablesExamplesPage.js","app/modules/GoogleMaterialExamples/data-displays/TooltipsExamplesPage.js","app/modules/GoogleMaterialExamples/data-displays/TypographyExamplesPage.js","app/modules/GoogleMaterialExamples/data-displays/DataDisplaysPage.js","app/modules/GoogleMaterialExamples/feedback/ProgressExamplesPage.js","app/modules/GoogleMaterialExamples/feedback/DialogsExamplesPage.js","app/modules/GoogleMaterialExamples/feedback/SnackbarsExamplesPage.js","app/modules/GoogleMaterialExamples/feedback/FeedbacksPage.js","app/modules/GoogleMaterialExamples/labs/SliderExamplesPage.js","app/modules/GoogleMaterialExamples/labs/SpeedDialExamplesPage.js","app/modules/GoogleMaterialExamples/labs/ToggleButtonExamplesPage.js","app/modules/GoogleMaterialExamples/labs/LabsPage.js","app/modules/GoogleMaterialExamples/navigation/BreadcrumbsExamplesPage.js","app/modules/GoogleMaterialExamples/navigation/DrawerExamplesPage.js","app/modules/GoogleMaterialExamples/navigation/LinksExamplesPage.js","app/modules/GoogleMaterialExamples/navigation/MenusExamplesPage.js","app/modules/GoogleMaterialExamples/navigation/SteppersExamplesPage.js","app/modules/GoogleMaterialExamples/navigation/TabsExamplesPage.js","app/modules/GoogleMaterialExamples/navigation/BottomNavigationExamplesPage.js","app/modules/GoogleMaterialExamples/navigation/NavigationPage.js","app/modules/GoogleMaterialExamples/layout/BoxExamplesPage.js","app/modules/GoogleMaterialExamples/layout/ContainerExamplesPage.js","app/modules/GoogleMaterialExamples/layout/GridExamplesPage.js","app/modules/GoogleMaterialExamples/layout/GridListExamplesPage.js","app/modules/GoogleMaterialExamples/layout/HiddenExamplesPage.js","app/modules/GoogleMaterialExamples/layout/LayoutPage.js","app/modules/GoogleMaterialExamples/surfaces/AppBarExamplesPage.js","app/modules/GoogleMaterialExamples/surfaces/PaperExamplesPage.js","app/modules/GoogleMaterialExamples/surfaces/CardsExamplesPage.js","app/modules/GoogleMaterialExamples/surfaces/ExpansionPanelsExamplesPage.js","app/modules/GoogleMaterialExamples/surfaces/SurfacesPage.js","app/modules/GoogleMaterialExamples/utils/ClickAwayListenerExamplesPage.js","app/modules/GoogleMaterialExamples/utils/ModalExamplesPage.js","app/modules/GoogleMaterialExamples/utils/NoSSRExamplesPage.js","app/modules/GoogleMaterialExamples/utils/PopoverExamplesPage.js","app/modules/GoogleMaterialExamples/utils/PopperExamplesPage.js","app/modules/GoogleMaterialExamples/utils/PortalExamplesPage.js","app/modules/GoogleMaterialExamples/utils/TransitionsExamplesPage.js","app/modules/GoogleMaterialExamples/utils/UseMediaQueryExamplesPage.js","app/modules/GoogleMaterialExamples/utils/UtilsPage.js","app/modules/GoogleMaterialExamples/GoogleMaterialPage.js"],"names":["BootstrapButton","withStyles","root","boxShadow","textTransform","fontSize","padding","border","lineHeight","backgroundColor","borderColor","fontFamily","join","Button","ColorButton","theme","color","palette","getContrastText","purple","useStyles","makeStyles","margin","spacing","createMuiTheme","primary","green","AdapterLink","React","forwardRef","props","ref","innerRef","CollisionLink","to","useStyles1","button","input","display","useStyles2","fab","extendedIcon","marginRight","useStyles3","leftIcon","rightIcon","marginLeft","iconSmall","useStyles4","useStyles5","flexWrap","minWidth","width","image","position","height","breakpoints","down","zIndex","opacity","focusVisible","imageButton","left","right","top","bottom","alignItems","justifyContent","common","white","imageSrc","backgroundSize","backgroundPosition","imageBackdrop","black","transition","transitions","create","imageTitle","imageMarked","images","url","title","ButtonsExamplesPage","classes1","classes2","classes3","classes4","classes5","icon","target","className","rel","href","jsCode","jsCode1","beforeCodeTitle","codeBlockHeight","variant","disabled","accept","id","multiple","type","htmlFor","component","jsCode3","jsCode12","jsCode7","size","Fab","aria-label","IconButton","jsCode9","jsCode2","jsCode4","Grid","container","item","xs","md","direction","ButtonGroup","fullWidth","jsCode6","jsCode8","clsx","jsCode10","ThemeProvider","disableRipple","jsCode11","map","ButtonBase","focusRipple","key","focusVisibleClassName","style","backgroundImage","Typography","GreenCheckbox","checked","Checkbox","CheckboxesExamplesPage","useState","checkedA","checkedB","checkedF","checkedG","gilad","jason","antoine","state","setState","handleChange","name","event","classes","formControl","handleChange3","error","filter","v","length","value","onChange","inputProps","indeterminate","defaultChecked","FormControl","FormLabel","FormGroup","FormControlLabel","control","label","FormHelperText","required","row","checkedIcon","labelPlacement","textField","grid","PickersExamplesPage","Date","selectedDate","setSelectedDate","handleDateChange","date","noValidate","TextField","defaultValue","InputLabelProps","shrink","step","utils","DateFnsUtils","justify","KeyboardButtonProps","group","GreenRadio","Radio","RadioButtonsExamplesPage","setValue","selectedValue","setSelectedValue","handleChange2","RadioGroup","selectEmpty","marginTop","BootstrapInput","borderRadius","background","paper","InputBase","maxWidth","chips","chip","noLabel","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","names","getStyles","personName","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","useStyles6","SelectsExamplesPage","age","values","setValues","inputLabel","useRef","labelWidth","setLabelWidth","oldValues","useEffect","current","offsetWidth","setAge","useTheme","setPersonName","handleChange4","open","setOpen","handleOpen","classes6","state6","setState6","handleChange6","Number","handleClose6","autoComplete","InputLabel","Select","MenuItem","Input","displayEmpty","renderValue","readOnly","autoWidth","OutlinedInput","FilledInput","NativeSelect","jsCode5","onClick","onClose","onOpen","native","selected","ListItemText","Chip","options","i","l","push","Dialog","disableBackdropClick","disableEscapeKeyDown","DialogTitle","DialogContent","DialogActions","PurpleSwitch","switchBase","track","Switch","IOSSwitch","transform","thumb","grey","AntSwitch","main","SwitchesExamplesPage","state2","setState2","state3","setState3","checkedC","state4","setState4","dense","menu","currencies","CssTextField","borderBottomColor","fade","useStylesReddit","overflow","focused","RedditTextField","InputProps","disableUnderline","useStyles7","theme7","useStyles8","flex","iconButton","divider","ranges","useStyles9","withoutLabel","flexBasis","useStyles10","useStyles11","useStyles12","TextFieldsExamplesPage","multiline","currency","values2","setValues2","values3","setValues3","labelWidth4","setLabelWidth4","name4","setName4","labelRef4","classes7","classes8","classes9","amount","password","weight","weightRange","showPassword","values9","setValues9","handleChange9","prop","classes10","classes11","values11","setValues11","handleChange11","classes12","values12","setValues12","handleChange12","rowsMax","rows","helperText","placeholder","select","SelectProps","option","startAdornment","InputAdornment","endAdornment","aria-describedby","edge","Paper","Divider","not","a","b","intersection","cardHeader","list","not2","intersection2","TransferListExamplesPage","setChecked","setLeft","setRight","leftChecked","rightChecked","handleToggle","currentIndex","newChecked","splice","customList","items","List","role","labelId","ListItem","ListItemIcon","tabIndex","checked2","setChecked2","left2","setLeft2","right2","setRight2","leftChecked2","rightChecked2","handleToggle2","currentIndex2","newChecked2","numberOfChecked2","handleToggleAll2","customList2","Card","CardHeader","avatar","subheader","concat","suggestions","renderInput","other","inputRef","inputRoot","inputInput","renderSuggestion","suggestionProps","suggestion","index","itemProps","isHighlighted","highlightedIndex","isSelected","selectedItem","getSuggestions","showEmpty","inputValue","deburr","trim","toLowerCase","inputLength","count","keep","slice","DownshiftMultiple","setInputValue","setSelectedItem","handleKeyDown","handleDelete","newSelectedItem","getInputProps","getItemProps","getLabelProps","isOpen","inputValue2","selectedItem2","onKeyDown","onBlur","onFocus","onDelete","handleInputChange","square","popperNode","flexGrow","valueContainer","chipFocused","emphasize","noOptionsMessage","singleValue","inputComponent","components","Control","children","innerProps","selectProps","TextFieldProps","Menu","MultiValue","isFocused","removeProps","deleteIcon","NoOptionsMessage","Option","Placeholder","SingleValue","ValueContainer","AutocompleteExamplesPage","single","setSingle","multi","setMulti","selectStyles","base","text","font","getMenuProps","node","Popper","anchorEl","suppressRefError","clientWidth","undefined","clearSelection","openMenu","NoSsr","styles","inputId","isMulti","InputsPage","exact","from","path","bigAvatar","orangeAvatar","deepOrange","purpleAvatar","deepPurple","pinkAvatar","pink","greenAvatar","AvatarsExamplesPage","Avatar","alt","src","flexDirection","StyledBadge","badge","Badge","BadgesExamplesPage","invisible4","setInvisible4","badgeContent","AppBar","Tabs","Tab","Fragment","max","invisible","showZero","ChipsExamplesPage","handleDelete1","alert","handleClick1","handleDelete2","handleClick2","chipData3","setChipData3","handleDelete4","handleClick4","handleDelete5","handleClick5","clickable","data","chipToDelete","dividerFullWidth","dividerInset","section1","section2","section3","DividersExamplesPage","light","secondary","ListItemAvatar","gutterBottom","iconHover","red","HomeIcon1","SvgIcon","d","IconsExamplesPage","loadCSS","document","querySelector","svgProps","offset","stopColor","blue","cloneElement","fill","ListItemLink1","nested","paddingLeft","demo","generate","element","inline","listSection","ul","Row12","ListsExamplesPage","open2","setOpen2","dense4","setDense4","secondary4","setSecondary4","selectedIndex5","setSelectedIndex5","handleListItemClick5","checked7","setChecked7","handleToggle7","checked8","setChecked8","handleToggle8","checked9","setChecked9","handleToggle9","ListItemSecondaryAction","ListSubheader","inset","aria-labelledby","Collapse","in","timeout","unmountOnExit","disablePadding","sectionId","itemSize","itemCount","overflowX","table","createData","calories","fat","carbs","protein","marginBottom","desc3","orderBy","headRows3","numeric","EnhancedTableHead3","onSelectAllClick","order","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","align","sortDirection","TableSortLabel","active","property","useToolbarStyles3","paddingRight","highlight","lighten","dark","spacer","actions","EnhancedTableToolbar3","Toolbar","Tooltip","tableWrapper","StyledTableCell4","head","body","StyledTableRow4","default","useStyles52","useStyles51","flexShrink","TablePaginationActions5","page","rowsPerPage","onChangePage","Math","ceil","createData5","rows5","sort","ccyFormat6","num","toFixed","createRow6","desc","qty","unit","price","priceRow6","rows6","invoiceSubtotal6","reduce","sum","invoiceTaxes6","invoiceTotal6","TablesExamplesPage","order3","setOrder3","orderBy3","setOrderBy3","selected3","setSelected3","page3","setPage3","dense3","setDense3","rowsPerPage3","setRowsPerPage3","emptyRows3","min","page5","setPage5","rowsPerPage5","setRowsPerPage5","emptyRows5","Table","TableBody","scope","newSelecteds","n","array","cmp","stabilizedThis","el","stableSort3","isItemSelected","hover","selectedIndex","newSelected","handleClick3","aria-checked","colSpan","TablePagination","rowsPerPageOptions","backIconButtonProps","nextIconButtonProps","newPage","onChangeRowsPerPage","TableFooter","parseInt","ActionsComponent","rowSpan","absolute","arrowGenerator3","borderWidth","LightTooltip3","tooltip","shadows","useStylesArrow3","arrow","content","borderStyle","popper","ArrowTooltip3","arrowRef","setArrowRef","PopperProps","popperOptions","modifiers","enabled","Boolean","useStylesBootstrap3","tooltipPlacementLeft","tooltipPlacementRight","tooltipPlacementTop","tooltipPlacementBottom","BootstrapTooltip3","HtmlTooltip3","pxToRem","customWidth","noMaxWidth","longText6","TooltipsExamplesPage","open4","setOpen4","handleTooltipClose4","open5","setOpen5","interactive","TransitionComponent","Fade","TransitionProps","Zoom","placement","disableFocusListener","disableHoverListener","disableTouchListener","ClickAwayListener","onClickAway","disablePortal","enterDelay","leaveDelay","TypographyExamplesPage","DataDisplaysPage","progress","wrapper","buttonSuccess","fabProgress","buttonProgress","ColorCircularProgress9","CircularProgress","ColorLinearProgress9","colorPrimary","barColorPrimary","LinearProgress","BorderLinearProgress9","bar","useStylesFacebook9","animationDuration","FacebookProgress9","thickness","disableShrink","ProgressExamplesPage","loading2","setLoading2","success2","setSuccess2","timer2","buttonClassname2","handleButtonClick2","setTimeout","clearTimeout","progress3","setProgress3","timer3","setInterval","oldProgress","clearInterval","completed4","setCompleted4","timer4","prevCompleted","completed6","setCompleted6","timer6","oldCompleted","diff","random","completed7","setCompleted7","buffer7","setBuffer7","diff2","timer7","loading10","setLoading10","query10","setQuery10","timerRef10","valueBuffer","transitionDelay","prevLoading","emails","SimpleDialog","handleListItemClick","email","Transition3","Slide","DialogTitle5","closeButton","disableTypography","DialogContent5","DialogActions5","appBar","Transition6","form","formControlLabel","options9","ConfirmationDialogRaw9","valueProp","radioGroupRef","onEntering","focus","dividers","newValue","PaperComponent11","cancel","DialogsExamplesPage","handleClose2","open3","setOpen3","handleClose3","handleClose4","handleClose5","open6","setOpen6","open7","setOpen7","fullWidth7","setFullWidth7","maxWidth7","setMaxWidth7","handleClose7","open8","setOpen8","theme8","fullScreen8","useMediaQuery","handleClose8","open9","setOpen9","value9","setValue9","open10","setOpen10","scroll10","setScroll10","handleClickOpen10","scrollType","handleClose10","open11","setOpen11","handleClose11","keepMounted","DialogContentText","aria-haspopup","aria-controls","autoFocus","fullScreen","scroll","Array","PaperComponent","cursor","close","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","useStyles21","amber","iconVariant","message","MySnackbarContentWrapper2","Icon","SnackbarContent","action","useStyles22","action4","snackbar","SlideTransition7","GrowTransition7","Grow","TransitionLeft","TransitionUp","TransitionRight","TransitionDown","SnackbarsExamplesPage","open1","setOpen1","handleClose1","reason","vertical","horizontal","handleClick","newState","Transition7","state7","setState7","handleClick7","Transition","state8","setState8","handleClick8","Snackbar","anchorOrigin","autoHideDuration","ContentProps","FeedbackPage","marks2","valuetext2","valueLabelFormat2","findIndex","mark","valuetext3","ValueLabelComponent4","popperRef","update","enterTouchDelay","iOSBoxShadow4","marks4","IOSSlider4","valueLabel","rail","markActive","Slider","PrettoSlider4","AirbnbSlider4","AirbnbThumbComponent4","valuetext6","marks6","SliderExamplesPage","value1","setValue1","value3","setValue3","value5","setValue5","getAriaValueText","valueLabelDisplay","marks","valueLabelFormat","ValueLabelComponent","ThumbComponent","orientation","controls","exampleWrapper","radioGroup","speedDial","directionUp","directionRight","directionDown","directionLeft","handleClose","direction1","hidden","speedDialClassName1","capitalize","SpeedDial","ariaLabel","SpeedDialIcon","onMouseEnter","onMouseLeave","SpeedDialAction","tooltipTitle","toggleContainer","ToggleButtonExamplesPage","alignment1","setAlignment1","formats1","setFormats1","alignment2","setAlignment2","newAlignment","children2","ToggleButton","sm","ToggleButtonGroup","exclusive","newFormats","LabsPage","SpeedDialExamplesPage","preventDefault","link","StyledBreadcrumb","BreadcrumbsExamplesPage","elevation","Breadcrumbs","Link","aria-current","separator","maxItems","fullList","DrawerExamplesPage","state1","setState1","toggleDrawer1","side","sideList1","fullList1","toggleDrawer2","sideList2","fullList2","Drawer","anchor","SwipeableDrawer","LinksExamplesPage","RouterLink","StyledMenu4","getContentAnchorEl","transformOrigin","StyledMenuItem4","options5","MenusExamplesPage","anchorEl1","setAnchorEl1","anchorEl2","setAnchorEl2","selectedIndex2","setSelectedIndex2","anchorRef3","contains","anchorEl4","setAnchorEl4","anchorEl5","setAnchorEl5","anchorEl7","setAnchorEl7","currentTarget","MenuList","prevOpen3","handleMenuItemClick2","noWrap","instructions","completed","backButton","actionsContainer","resetContainer","connectorActive","connectorCompleted","connectorDisabled","connectorLine","AutoPlaySwipeableViews9","autoPlay","SwipeableViews","tutorialSteps9","imgPath","header","img","SteppersExamplesPage","activeStep1","setActiveStep1","Set","skipped1","setSkipped1","steps1","isStepOptional1","isStepSkipped1","has","activeStep2","setActiveStep2","completed2","setCompleted2","steps2","totalSteps2","completedSteps2","Object","keys","allStepsCompleted2","handleNext2","newActiveStep","activeStep3","setActiveStep3","steps3","activeStep4","setActiveStep4","skipped4","setSkipped4","steps4","totalSteps4","isStepOptional4","skippedSteps4","completedSteps4","allStepsCompleted4","handleNext4","handleStep4","isStepComplete4","activeStep5","setActiveStep5","skipped5","setSkipped5","steps5","isStepOptional5","isStepSkipped5","activeStep6","setActiveStep6","steps6","handleNext6","prevActiveStep","handleBack6","activeStep7","setActiveStep7","steps7","connector7","StepConnector","line","theme9","activeStep9","setActiveStep9","maxSteps9","theme10","activeStep10","setActiveStep10","theme11","activeStep11","setActiveStep11","Stepper","activeStep","stepProps1","labelProps1","optional","Step","StepLabel","getStepContent1","Error","prevSkipped","newSkipped","add","delete","alternativeLabel","stepIndex","getStepContent3","stepProps","labelProps","getStepContent5","connector","getStepContent7","MobileStepper","steps","nextButton","nonLinear","StepButton","getStepContent2","newCompleted2","buttonProps","getStepContent4","newCompleted","StepContent","getStepContent6","axis","onChangeIndex","enableMouseEvents","abs","TabContainer1","TabContainer2","TabContainer4","dir","TabContainer6","TabContainer7","TabContainer8","AntTabs9","borderBottom","indicator","AntTab9","StyledTabs9","TabIndicatorProps","StyledTab9","demo1","demo2","TabContainer10","LinkTab10","TabsExamplesPage","value2","setValue2","theme4","value4","setValue4","value6","setValue6","value7","setValue7","value8","setValue8","value10","setValue10","value11","setValue11","wrapped","indicatorColor","textColor","scrollButtons","centered","BottomNavigationExamplesPage","BottomNavigation","showLabels","BottomNavigationAction","NavigationPage","BoxExamplesPage","Box","m","ContainerExamplesPage","Container","fixed","textAlign","gridTemplateColumns","gridGap","whiteSpace","GridExamplesPage","setSpacing","FormRow","toString","wrap","zeroMinWidth","gridColumnEnd","tileData","author","cols","featured","gridList","titleBar","GridListExamplesPage","GridList","cellHeight","tile","GridListTile","GridListTileBar","subtitle","actionIcon","titlePosition","actionPosition","HiddenExamplesPage","Hidden","xsUp","smUp","mdUp","lgUp","xlUp","only","xsDown","smDown","mdDown","lgDown","xlDown","LayoutPage","menuButton","grow","up","search","shape","searchIcon","pointerEvents","sectionDesktop","sectionMobile","AppBarExamplesPage","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","isMobileMenuOpen","handleProfileMenuOpen","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","renderMobileMenu","auth4","setAuth4","PaperExamplesPage","card","bullet","pos","media","paddingTop","expand","duration","shortest","expandOpen","details","cover","paddingBottom","playIcon","CardsExamplesPage","bull1","expanded2","setExpanded2","CardContent","CardActions","CardActionArea","CardMedia","disableSpacing","aria-expanded","paragraph","heading","secondaryHeading","verticalAlign","column","helper","borderLeft","textDecoration","ExpansionPanel4","expanded","ExpansionPanel","ExpansionPanelSummary4","minHeight","ExpansionPanelSummary","ExpansionPanelDetails4","ExpansionPanelDetails","ExpansionPanelsExamplesPage","panel","isExpanded","expanded4","setExpanded4","newExpanded","expandIcon","defaultExpanded","ExpansionPanelActions","SurfacesPage","fake","ClickAwayListenerExamplesPage","prev","rand","round","getModalStyle","outline","SimpleModal","modalStyle","Modal","ModalExamplesPage","wordBreak","LargeTree","_","defer","popover","PopoverExamplesPage","handlePopoverClose2","Popover","aria-owns","disableRestoreFocus","popupId","popupState","bindTrigger","bindPopover","PopperExamplesPage","id1","id2","anchorEl3","setAnchorEl3","placement3","setPlacement3","newPlacement","id4","id5","onMouseUp","selection","window","getSelection","anchorOffset","focusOffset","getBoundingClientRect","getRangeAt","clientHeight","bindToggle","bindPopper","PortalExamplesPage","show","setShow","Portal","svg","polygon","stroke","strokeWidth","TranstitionsExamplesPage","checked1","setChecked1","checked3","setChecked3","checked4","setChecked4","checked5","setChecked5","points","collapsedHeight","mountOnEnter","MyComponent4","matches","useMediaQueryTheme","MyComponent5","width5","theme5","reverse","output","useWidth5","UseMediaQueryExamplesPage","matches1","theme2","matches2","matches3","json2mq","MuiUseMediaQuery","ssrMatchMedia4","query","matches4","mediaQuery","match","UtilsPage","NoSSRExamplesPage","TransitionsExamplesPage","GoogleMaterialPage"],"mappings":"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","file":"static/js/8.e417b7dc.chunk.js","sourcesContent":["/* eslint-disable no-restricted-imports */\r\n/* eslint-disable no-unused-vars */\r\nimport React from \"react\";\r\nimport {createMuiTheme, withStyles, makeStyles} from \"@material-ui/core\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  ButtonGroup,\r\n  Fab,\r\n  Icon,\r\n  IconButton\r\n} from \"@material-ui/core\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport clsx from \"clsx\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport KeyboardVoiceIcon from \"@material-ui/icons/KeyboardVoice\";\r\nimport AddShoppingCartIcon from \"@material-ui/icons/AddShoppingCart\";\r\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\r\nimport {ThemeProvider} from \"@material-ui/styles\";\r\nimport {green, purple} from \"@material-ui/core/colors\";\r\nimport {ButtonBase, Typography} from \"@material-ui/core\";\r\nimport {MemoryRouter as Router} from \"react-router\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\nconst BootstrapButton = withStyles({\r\n  root: {\r\n    boxShadow: \"none\",\r\n    textTransform: \"none\",\r\n    fontSize: 16,\r\n    padding: \"6px 12px\",\r\n    border: \"1px solid\",\r\n    lineHeight: 1.5,\r\n    backgroundColor: \"#007bff\",\r\n    borderColor: \"#007bff\",\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"'\r\n    ].join(\",\"),\r\n    \"&:hover\": {\r\n      backgroundColor: \"#0069d9\",\r\n      borderColor: \"#0062cc\"\r\n    },\r\n    \"&:active\": {\r\n      boxShadow: \"none\",\r\n      backgroundColor: \"#0062cc\",\r\n      borderColor: \"#005cbf\"\r\n    },\r\n    \"&:focus\": {\r\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.5)\"\r\n    }\r\n  }\r\n})(Button);\r\n\r\nconst ColorButton = withStyles(theme => ({\r\n  root: {\r\n    color: theme.palette.getContrastText(purple[500]),\r\n    backgroundColor: purple[500],\r\n    \"&:hover\": {\r\n      backgroundColor: purple[700]\r\n    }\r\n  }\r\n}))(Button);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  margin: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: green\r\n  }\r\n});\r\n\r\nconst AdapterLink = React.forwardRef((props, ref) => (\r\n  <Link innerRef={ref} {...props} />\r\n));\r\n\r\nconst CollisionLink = React.forwardRef((props, ref) => (\r\n  <Link innerRef={ref} to=\"/getting-started/installation/\" {...props} />\r\n));\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  input: {\r\n    display: \"none\"\r\n  }\r\n}));\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  fab: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst useStyles3 = makeStyles(theme => ({\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1)\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20\r\n  }\r\n}));\r\n\r\nconst useStyles4 = makeStyles(theme => ({\r\n  margin: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst useStyles5 = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    minWidth: 300,\r\n    width: \"100%\"\r\n  },\r\n  image: {\r\n    position: \"relative\",\r\n    height: 200,\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"100% !important\", // Overrides inline-style\r\n      height: 100\r\n    },\r\n    \"&:hover, &$focusVisible\": {\r\n      zIndex: 1,\r\n      \"& $imageBackdrop\": {\r\n        opacity: 0.15\r\n      },\r\n      \"& $imageMarked\": {\r\n        opacity: 0\r\n      },\r\n      \"& $imageTitle\": {\r\n        border: \"4px solid currentColor\"\r\n      }\r\n    }\r\n  },\r\n  focusVisible: {},\r\n  imageButton: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    color: theme.palette.common.white\r\n  },\r\n  imageSrc: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center 40%\"\r\n  },\r\n  imageBackdrop: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    backgroundColor: theme.palette.common.black,\r\n    opacity: 0.4,\r\n    transition: theme.transitions.create(\"opacity\")\r\n  },\r\n  imageTitle: {\r\n    position: \"relative\",\r\n    padding: `${theme.spacing(2)}px ${theme.spacing(4)}px ${theme.spacing(1) +\r\n      6}px`\r\n  },\r\n  imageMarked: {\r\n    height: 3,\r\n    width: 18,\r\n    backgroundColor: theme.palette.common.white,\r\n    position: \"absolute\",\r\n    bottom: -2,\r\n    left: \"calc(50% - 9px)\",\r\n    transition: theme.transitions.create(\"opacity\")\r\n  }\r\n}));\r\n\r\nconst images = [\r\n  {\r\n    url: \"https://material-ui.com/static/images/grid-list/breakfast.jpg\",\r\n    title: \"Breakfast\",\r\n    width: \"40%\"\r\n  },\r\n  {\r\n    url: \"https://material-ui.com/static/images/grid-list/burgers.jpg\",\r\n    title: \"Burgers\",\r\n    width: \"30%\"\r\n  },\r\n  {\r\n    url: \"https://material-ui.com/static/images/grid-list/camera.jpg\",\r\n    title: \"Camera\",\r\n    width: \"30%\"\r\n  }\r\n];\r\n\r\nconst options = [\r\n  \"Create a merge commit\",\r\n  \"Squash and merge\",\r\n  \"Rebase and merge\"\r\n];\r\n\r\nexport default function ButtonsExamplesPage() {\r\n  const classes1 = useStyles1();\r\n  const classes2 = useStyles2();\r\n  const classes3 = useStyles3();\r\n  const classes4 = useStyles4();\r\n  const classes5 = useStyles5();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          Buttons allow users to take actions, and make choices, with a single\r\n          tap.\r\n        </span>{\" \"}\r\n        <span>\r\n          <code>Buttons</code> communicate actions that users can take.\r\n        </span>\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/buttons/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-6\">\r\n          <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Contained Buttons\" codeBlockHeight=\"400px\">\r\n            <div>\r\n              <code>Contained</code> buttons are high-emphasis, distinguished by\r\n              their use of elevation and fill. They contain actions that are\r\n              primary to your app. The last example of this demo show how to use\r\n              an upload button.\r\n            </div>\r\n            <div className=\"separator separator-dashed my-7\" />\r\n\r\n            <div>\r\n              <Button variant=\"contained\" className={classes1.button}>\r\n                Default\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes1.button}\r\n              >\r\n                Primary\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className={classes1.button}\r\n              >\r\n                Secondary\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                disabled\r\n                className={classes1.button}\r\n              >\r\n                Disabled\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                href=\"#contained-buttons\"\r\n                className={classes1.button}\r\n              >\r\n                Link\r\n              </Button>\r\n              <input\r\n                accept=\"image/*\"\r\n                className={classes1.input}\r\n                id=\"contained-button-file\"\r\n                multiple\r\n                type=\"file\"\r\n              />\r\n              <label htmlFor=\"contained-button-file\">\r\n                <Button\r\n                  variant=\"contained\"\r\n                  component=\"span\"\r\n                  className={classes1.button}\r\n                >\r\n                  Upload\r\n                </Button>\r\n              </label>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode3} beforeCodeTitle=\"Outlined Buttons\" codeBlockHeight=\"400px\">\r\n            <span>\r\n              <code>Outlined buttons</code> are medium-emphasis buttons. They\r\n              contain actions that are important, but aren’t the primary action\r\n              in an app.\r\n            </span>\r\n            <div className=\"gutter-t\">\r\n              Outlined buttons are also a lower emphasis alternative to\r\n              contained buttons, or a higher emphasis alternative to text\r\n              buttons.\r\n            </div>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <Button variant=\"outlined\" className={classes1.button}>\r\n                Default\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                className={classes1.button}\r\n              >\r\n                Primary\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                className={classes1.button}\r\n              >\r\n                Secondary\r\n              </Button>\r\n              <Button variant=\"outlined\" disabled className={classes1.button}>\r\n                Disabled\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                href=\"#outlined-buttons\"\r\n                className={classes1.button}\r\n              >\r\n                Link\r\n              </Button>\r\n              <input\r\n                accept=\"image/*\"\r\n                className={classes1.input}\r\n                id=\"outlined-button-file\"\r\n                multiple\r\n                type=\"file\"\r\n              />\r\n              <label htmlFor=\"outlined-button-file\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  component=\"span\"\r\n                  className={classes1.button}\r\n                >\r\n                  Upload\r\n                </Button>\r\n              </label>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"inherit\"\r\n                className={classes1.button}\r\n              >\r\n                Inherit\r\n              </Button>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode12}\r\n            beforeCodeTitle=\"Third-party routing library\"\r\n          >\r\n            <span>\r\n              One common use case is to use the button to trigger a navigation\r\n              to a new page. The <code>ButtonBase</code> component provides a\r\n              property to handle this use case: <code>component</code>. However\r\n              for certain focus polyfills <code>ButtonBase</code> requires the\r\n              DOM node of the provided component. This is achieved by attaching\r\n              a ref to the component and expecting that the component forwards\r\n              this ref to the underlying DOM node. Given that a lot of our\r\n              interactive components rely on ButtonBase, you should be able to\r\n              take advantage of it everywhere:\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <Router>\r\n              <Button color=\"primary\" component={AdapterLink} to=\"/\">\r\n                Simple case\r\n              </Button>\r\n              <Button component={CollisionLink}>Avoids props collision</Button>\r\n            </Router>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode7} beforeCodeTitle=\"Sizes\" codeBlockHeight=\"400px\">\r\n            <span>\r\n              Fancy larger or smaller buttons? Use the <code>size</code>{\" \"}\r\n              property.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\" />\r\n\r\n            <div className=\"pb-3\">\r\n              <span className=\"pr-3\">\r\n                <Button size=\"small\" className={classes2.margin}>\r\n                  Small\r\n                </Button>\r\n              </span>\r\n              <span className=\"pr-3\">\r\n                <Button size=\"medium\" className={classes2.margin}>\r\n                  Medium\r\n                </Button>\r\n              </span>\r\n              <span className=\"pr-3\">\r\n                <Button size=\"large\" className={classes2.margin}>\r\n                  Large\r\n                </Button>\r\n              </span>\r\n            </div>\r\n            <div className=\"pb-3\">\r\n              <span className=\"pr-3\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  color=\"primary\"\r\n                  className={classes2.margin}\r\n                >\r\n                  Small\r\n                </Button>\r\n              </span>\r\n              <span className=\"pr-3\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  size=\"medium\"\r\n                  color=\"primary\"\r\n                  className={classes2.margin}\r\n                >\r\n                  Medium\r\n                </Button>\r\n              </span>\r\n              <span className=\"pr-3\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  size=\"large\"\r\n                  color=\"primary\"\r\n                  className={classes2.margin}\r\n                >\r\n                  Large\r\n                </Button>\r\n              </span>\r\n            </div>\r\n            <div className=\"pb-3\">\r\n              <span className=\"pr-3\">\r\n                <Button\r\n                  variant=\"contained\"\r\n                  size=\"small\"\r\n                  color=\"primary\"\r\n                  className={classes2.margin}\r\n                >\r\n                  Small\r\n                </Button>\r\n              </span>\r\n              <span className=\"pr-3\">\r\n                <Button\r\n                  variant=\"contained\"\r\n                  size=\"medium\"\r\n                  color=\"primary\"\r\n                  className={classes2.margin}\r\n                >\r\n                  Medium\r\n                </Button>\r\n              </span>\r\n              <span className=\"pr-3\">\r\n                <Button\r\n                  variant=\"contained\"\r\n                  size=\"large\"\r\n                  color=\"primary\"\r\n                  className={classes2.margin}\r\n                >\r\n                  Large\r\n                </Button>\r\n              </span>\r\n            </div>\r\n            <div className=\"pb-3\">\r\n              <span className=\"pr-3\">\r\n                <Fab\r\n                  size=\"small\"\r\n                  color=\"secondary\"\r\n                  aria-label=\"Add\"\r\n                  className={classes2.margin}\r\n                >\r\n                  <AddIcon />\r\n                </Fab>\r\n              </span>\r\n              <span className=\"pr-3\">\r\n                <Fab\r\n                  size=\"medium\"\r\n                  color=\"secondary\"\r\n                  aria-label=\"Add\"\r\n                  className={classes2.margin}\r\n                >\r\n                  <AddIcon />\r\n                </Fab>\r\n              </span>\r\n              <span className=\"pr-3\">\r\n                <Fab\r\n                  color=\"secondary\"\r\n                  aria-label=\"Add\"\r\n                  className={classes2.margin}\r\n                >\r\n                  <AddIcon />\r\n                </Fab>\r\n              </span>\r\n            </div>\r\n            <div className=\"pb-3\">\r\n              <span className=\"pr-3\">\r\n                <Fab\r\n                  variant=\"extended\"\r\n                  size=\"small\"\r\n                  color=\"primary\"\r\n                  aria-label=\"Add\"\r\n                  className={classes2.margin}\r\n                >\r\n                  <NavigationIcon className={classes2.extendedIcon} />\r\n                  Extended\r\n                </Fab>\r\n              </span>\r\n              <span className=\"pr-3\">\r\n                <Fab\r\n                  variant=\"extended\"\r\n                  size=\"medium\"\r\n                  color=\"primary\"\r\n                  aria-label=\"Add\"\r\n                  className={classes2.margin}\r\n                >\r\n                  <NavigationIcon className={classes2.extendedIcon} />\r\n                  Extended\r\n                </Fab>\r\n              </span>\r\n              <span className=\"pr-3\">\r\n                <Fab\r\n                  variant=\"extended\"\r\n                  color=\"primary\"\r\n                  aria-label=\"Add\"\r\n                  className={classes2.margin}\r\n                >\r\n                  <NavigationIcon className={classes2.extendedIcon} />\r\n                  Extended\r\n                </Fab>\r\n              </span>\r\n            </div>\r\n            <div>\r\n              <span className=\"pr-3\">\r\n                <IconButton\r\n                  aria-label=\"Delete\"\r\n                  className={classes2.margin}\r\n                  size=\"small\"\r\n                >\r\n                  <ArrowDownwardIcon fontSize=\"inherit\" />\r\n                </IconButton>\r\n              </span>\r\n              <span className=\"pr-3\">\r\n                <IconButton aria-label=\"Delete\" className={classes2.margin}>\r\n                  <DeleteIcon fontSize=\"small\" />\r\n                </IconButton>\r\n              </span>\r\n              <span className=\"pr-3\">\r\n                <IconButton aria-label=\"Delete\" className={classes2.margin}>\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </span>\r\n              <span className=\"pr-3\">\r\n                <IconButton aria-label=\"Delete\" className={classes2.margin}>\r\n                  <DeleteIcon fontSize=\"large\" />\r\n                </IconButton>\r\n              </span>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode9} beforeCodeTitle=\"Icon Buttons\">\r\n            <span>\r\n              Icon buttons are commonly found in app bars and toolbars.\r\n            </span>\r\n            <div className=\"pt-3\">\r\n              Icons are also appropriate for toggle buttons that allow a single\r\n              choice to be selected or deselected, such as adding or removing a\r\n              star to an item.\r\n            </div>\r\n            <div className=\"separator separator-dashed my-7\" />\r\n            <div>\r\n              <IconButton className={classes1.button} aria-label=\"Delete\">\r\n                <DeleteIcon />\r\n              </IconButton>\r\n              <IconButton\r\n                className={classes1.button}\r\n                aria-label=\"Delete\"\r\n                disabled\r\n                color=\"primary\"\r\n              >\r\n                <DeleteIcon />\r\n              </IconButton>\r\n              <IconButton\r\n                color=\"secondary\"\r\n                className={classes1.button}\r\n                aria-label=\"Add an alarm\"\r\n              >\r\n                <Icon>alarm</Icon>\r\n              </IconButton>\r\n              <IconButton\r\n                color=\"primary\"\r\n                className={classes1.button}\r\n                aria-label=\"Add to shopping cart\"\r\n              >\r\n                <AddShoppingCartIcon />\r\n              </IconButton>\r\n              <input\r\n                accept=\"image/*\"\r\n                className={classes1.input}\r\n                id=\"icon-button-file\"\r\n                type=\"file\"\r\n              />\r\n              <label htmlFor=\"icon-button-file\">\r\n                <IconButton\r\n                  color=\"primary\"\r\n                  className={classes1.button}\r\n                  aria-label=\"Upload picture\"\r\n                  component=\"span\"\r\n                >\r\n                  <PhotoCamera />\r\n                </IconButton>\r\n              </label>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-lg-6\">\r\n          <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"Text Buttons\" codeBlockHeight=\"400px\">\r\n            <span>\r\n              <code>Text buttons</code> are typically used for less-pronounced\r\n              actions. In cards, text buttons help maintain an emphasis on card\r\n              content.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\" />\r\n            <div>\r\n              <Button className={classes1.button}>Default</Button>\r\n              <Button color=\"primary\" className={classes1.button}>\r\n                Primary\r\n              </Button>\r\n              <Button color=\"secondary\" className={classes1.button}>\r\n                Secondary\r\n              </Button>\r\n              <Button disabled className={classes1.button}>\r\n                Disabled\r\n              </Button>\r\n              <Button href=\"#text-buttons\" className={classes1.button}>\r\n                Link\r\n              </Button>\r\n              <input\r\n                accept=\"image/*\"\r\n                className={classes1.input}\r\n                id=\"text-button-file\"\r\n                multiple\r\n                type=\"file\"\r\n              />\r\n              <label htmlFor=\"text-button-file\">\r\n                <Button component=\"span\" className={classes1.button}>\r\n                  Upload\r\n                </Button>\r\n              </label>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode4} beforeCodeTitle=\"Grouped Buttons\" codeBlockHeight=\"400px\">\r\n            <span>\r\n              The ButtonGroup component can be used to group outlined (the\r\n              default) or contained buttons.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\" />\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} md={6}>\r\n                <Grid\r\n                  container\r\n                  spacing={1}\r\n                  direction=\"column\"\r\n                  alignItems=\"center\"\r\n                >\r\n                  <Grid item>\r\n                    <ButtonGroup\r\n                      size=\"small\"\r\n                      aria-label=\"Small outlined button group\"\r\n                    >\r\n                      <Button>One</Button>\r\n                      <Button>Two</Button>\r\n                      <Button>Three</Button>\r\n                    </ButtonGroup>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <ButtonGroup\r\n                      color=\"primary\"\r\n                      aria-label=\"Outlined primary button group\"\r\n                    >\r\n                      <Button>One</Button>\r\n                      <Button>Two</Button>\r\n                      <Button>Three</Button>\r\n                    </ButtonGroup>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <ButtonGroup\r\n                      color=\"secondary\"\r\n                      size=\"large\"\r\n                      aria-label=\"Large outlined secondary button group\"\r\n                    >\r\n                      <Button>One</Button>\r\n                      <Button>Two</Button>\r\n                      <Button>Three</Button>\r\n                    </ButtonGroup>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <Grid\r\n                  container\r\n                  spacing={1}\r\n                  direction=\"column\"\r\n                  alignItems=\"center\"\r\n                >\r\n                  <Grid item>\r\n                    <ButtonGroup\r\n                      variant=\"contained\"\r\n                      size=\"small\"\r\n                      aria-label=\"Small contained button group\"\r\n                    >\r\n                      <Button>One</Button>\r\n                      <Button>Two</Button>\r\n                      <Button>Three</Button>\r\n                    </ButtonGroup>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <ButtonGroup\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      aria-label=\"Full-width contained primary button group\"\r\n                    >\r\n                      <Button>One</Button>\r\n                      <Button>Two</Button>\r\n                      <Button>Three</Button>\r\n                    </ButtonGroup>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <ButtonGroup\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      size=\"large\"\r\n                      aria-label=\"Large contained secondary button group\"\r\n                    >\r\n                      <Button>One</Button>\r\n                      <Button>Two</Button>\r\n                      <Button>Three</Button>\r\n                    </ButtonGroup>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <ButtonGroup\r\n                  fullWidth\r\n                  aria-label=\"Full width outlined button group\"\r\n                >\r\n                  <Button>Full</Button>\r\n                  <Button>width</Button>\r\n                  <Button>ButtonGroup</Button>\r\n                </ButtonGroup>\r\n              </Grid>\r\n            </Grid>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode6}\r\n            beforeCodeTitle=\"Floating Action Buttons\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              A floating action button (FAB) performs the primary, or most\r\n              common, action on a screen. FABs come in two types: regular, and\r\n              extended.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\" />\r\n            <div>\r\n              <Fab color=\"primary\" aria-label=\"Add\" className={classes2.fab}>\r\n                <AddIcon />\r\n              </Fab>\r\n              <Fab color=\"secondary\" aria-label=\"Edit\" className={classes2.fab}>\r\n                <Icon>edit_icon</Icon>\r\n              </Fab>\r\n              <Fab\r\n                variant=\"extended\"\r\n                aria-label=\"Delete\"\r\n                className={classes2.fab}\r\n              >\r\n                <NavigationIcon className={classes2.extendedIcon} />\r\n                Extended\r\n              </Fab>\r\n              <Fab disabled aria-label=\"Delete\" className={classes2.fab}>\r\n                <DeleteIcon />\r\n              </Fab>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode8}\r\n            beforeCodeTitle=\"Buttons with icons and label\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              Sometimes you might want to have icons for certain button to\r\n              enhance the UX of the application as we recognize logos more\r\n              easily than plain text. For example, if you have a delete button\r\n              you can label it with a dustbin icon.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\" />\r\n            <div>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className={classes3.button}\r\n              >\r\n                Delete\r\n                <DeleteIcon className={classes3.rightIcon} />\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes3.button}\r\n              >\r\n                Send\r\n                <Icon className={classes3.rightIcon}>send</Icon>\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"default\"\r\n                className={classes3.button}\r\n              >\r\n                Upload\r\n                <CloudUploadIcon className={classes3.rightIcon} />\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                disabled\r\n                color=\"secondary\"\r\n                className={classes3.button}\r\n              >\r\n                <KeyboardVoiceIcon className={classes3.leftIcon} />\r\n                Talk\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"small\"\r\n                className={classes3.button}\r\n              >\r\n                <SaveIcon\r\n                  className={clsx(classes3.leftIcon, classes3.iconSmall)}\r\n                />\r\n                Save\r\n              </Button>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode10} beforeCodeTitle=\"Customized buttons\">\r\n            <span>\r\n              Here are some examples of customizing the component. You can learn\r\n              more about this in the overrides documentation page.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\" />\r\n            <div>\r\n              <ColorButton\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes4.margin}\r\n              >\r\n                Custom CSS\r\n              </ColorButton>\r\n              <ThemeProvider theme={theme}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes4.margin}\r\n                >\r\n                  Theme Provider\r\n                </Button>\r\n              </ThemeProvider>\r\n              <BootstrapButton\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                disableRipple\r\n                className={classes4.margin}\r\n              >\r\n                Bootstrap\r\n              </BootstrapButton>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode11} beforeCodeTitle=\"Complex Buttons\" codeBlockHeight=\"400px\">\r\n            <span>\r\n              The Text Buttons, Contained Buttons, Floating Action Buttons and\r\n              Icon Buttons are built on top of the same component: the{\" \"}\r\n              <code>ButtonBase</code>. You can take advantage of this lower\r\n              level component to build custom interactions.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\" />\r\n            <div className={classes5.root}>\r\n              {images.map(image => (\r\n                <ButtonBase\r\n                  focusRipple\r\n                  key={image.title}\r\n                  className={classes5.image}\r\n                  focusVisibleClassName={classes5.focusVisible}\r\n                  style={{\r\n                    width: image.width\r\n                  }}\r\n                >\r\n                  <span\r\n                    className={classes5.imageSrc}\r\n                    style={{\r\n                      backgroundImage: `url(${image.url})`\r\n                    }}\r\n                  />\r\n                  <span className={classes5.imageBackdrop} />\r\n                  <span className={classes5.imageButton}>\r\n                    <Typography\r\n                      component=\"span\"\r\n                      variant=\"subtitle1\"\r\n                      color=\"inherit\"\r\n                      className={classes5.imageTitle}\r\n                    >\r\n                      {image.title}\r\n                      <span className={classes5.imageMarked} />\r\n                    </Typography>\r\n                  </span>\r\n                </ButtonBase>\r\n              ))}\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n}));\r\n\r\nexport default function ContainedButtons() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"contained\" className={classes.button}>\r\n        Default\r\n      </Button>\r\n      <Button variant=\"contained\" color=\"primary\" className={classes.button}>\r\n        Primary\r\n      </Button>\r\n      <Button variant=\"contained\" color=\"secondary\" className={classes.button}>\r\n        Secondary\r\n      </Button>\r\n      <Button variant=\"contained\" color=\"secondary\" disabled className={classes.button}>\r\n        Disabled\r\n      </Button>\r\n      <Button variant=\"contained\" href=\"#contained-buttons\" className={classes.button}>\r\n        Link\r\n      </Button>\r\n      <input\r\n        accept=\"image/*\"\r\n        className={classes.input}\r\n        id=\"contained-button-file\"\r\n        multiple\r\n        type=\"file\"\r\n      />\r\n      <label htmlFor=\"contained-button-file\">\r\n        <Button variant=\"contained\" component=\"span\" className={classes.button}>\r\n          Upload\r\n        </Button>\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n}));\r\n\r\nexport default function TextButtons() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Button className={classes.button}>Default</Button>\r\n      <Button color=\"primary\" className={classes.button}>\r\n        Primary\r\n      </Button>\r\n      <Button color=\"secondary\" className={classes.button}>\r\n        Secondary\r\n      </Button>\r\n      <Button disabled className={classes.button}>\r\n        Disabled\r\n      </Button>\r\n      <Button href=\"#text-buttons\" className={classes.button}>\r\n        Link\r\n      </Button>\r\n      <input\r\n        accept=\"image/*\"\r\n        className={classes.input}\r\n        id=\"text-button-file\"\r\n        multiple\r\n        type=\"file\"\r\n      />\r\n      <label htmlFor=\"text-button-file\">\r\n        <Button component=\"span\" className={classes.button}>\r\n          Upload\r\n        </Button>\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n}));\r\n\r\nexport default function OutlinedButtons() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" className={classes.button}>\r\n        Default\r\n      </Button>\r\n      <Button variant=\"outlined\" color=\"primary\" className={classes.button}>\r\n        Primary\r\n      </Button>\r\n      <Button variant=\"outlined\" color=\"secondary\" className={classes.button}>\r\n        Secondary\r\n      </Button>\r\n      <Button variant=\"outlined\" disabled className={classes.button}>\r\n        Disabled\r\n      </Button>\r\n      <Button variant=\"outlined\" href=\"#outlined-buttons\" className={classes.button}>\r\n        Link\r\n      </Button>\r\n      <input\r\n        accept=\"image/*\"\r\n        className={classes.input}\r\n        id=\"outlined-button-file\"\r\n        multiple\r\n        type=\"file\"\r\n      />\r\n      <label htmlFor=\"outlined-button-file\">\r\n        <Button variant=\"outlined\" component=\"span\" className={classes.button}>\r\n          Upload\r\n        </Button>\r\n      </label>\r\n      <Button variant=\"outlined\" color=\"inherit\" className={classes.button}>\r\n        Inherit\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode4 = `\r\nimport React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\nexport default function GroupedButtons() {\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12} md={6}>\r\n        <Grid container spacing={1} direction=\"column\" alignItems=\"center\">\r\n          <Grid item>\r\n            <ButtonGroup size=\"small\" aria-label=\"Small outlined button group\">\r\n              <Button>One</Button>\r\n              <Button>Two</Button>\r\n              <Button>Three</Button>\r\n            </ButtonGroup>\r\n          </Grid>\r\n          <Grid item>\r\n            <ButtonGroup color=\"primary\" aria-label=\"Outlined primary button group\">\r\n              <Button>One</Button>\r\n              <Button>Two</Button>\r\n              <Button>Three</Button>\r\n            </ButtonGroup>\r\n          </Grid>\r\n          <Grid item>\r\n            <ButtonGroup\r\n              color=\"secondary\"\r\n              size=\"large\"\r\n              aria-label=\"Large outlined secondary button group\"\r\n            >\r\n              <Button>One</Button>\r\n              <Button>Two</Button>\r\n              <Button>Three</Button>\r\n            </ButtonGroup>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12} md={6}>\r\n        <Grid container spacing={1} direction=\"column\" alignItems=\"center\">\r\n          <Grid item>\r\n            <ButtonGroup variant=\"contained\" size=\"small\" aria-label=\"Small contained button group\">\r\n              <Button>One</Button>\r\n              <Button>Two</Button>\r\n              <Button>Three</Button>\r\n            </ButtonGroup>\r\n          </Grid>\r\n          <Grid item>\r\n            <ButtonGroup\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              aria-label=\"Full-width contained primary button group\"\r\n            >\r\n              <Button>One</Button>\r\n              <Button>Two</Button>\r\n              <Button>Three</Button>\r\n            </ButtonGroup>\r\n          </Grid>\r\n          <Grid item>\r\n            <ButtonGroup\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              size=\"large\"\r\n              aria-label=\"Large contained secondary button group\"\r\n            >\r\n              <Button>One</Button>\r\n              <Button>Two</Button>\r\n              <Button>Three</Button>\r\n            </ButtonGroup>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <ButtonGroup fullWidth aria-label=\"Full width outlined button group\">\r\n          <Button>Full</Button>\r\n          <Button>width</Button>\r\n          <Button>ButtonGroup</Button>\r\n        </ButtonGroup>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n`;\r\nconst jsCode5 = `\r\nimport React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\n\r\nconst options = ['Create a merge commit', 'Squash and merge', 'Rebase and merge'];\r\n\r\nexport default function SplitButton() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\r\n\r\n  function handleClick() {\r\n    alert(\\`You clicked \\${options[selectedIndex]}\\`);\r\n  }\r\n\r\n  function handleMenuItemClick(event, index) {\r\n    setSelectedIndex(index);\r\n    setOpen(false);\r\n  }\r\n\r\n  function handleToggle() {\r\n    setOpen(prevOpen => !prevOpen);\r\n  }\r\n\r\n  function handleClose(event) {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12} align=\"center\">\r\n        <ButtonGroup variant=\"contained\" color=\"primary\" ref={anchorRef} aria-label=\"Split button\">\r\n          <Button onClick={handleClick}>{options[selectedIndex]}</Button>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            aria-owns={open ? 'menu-list-grow' : undefined}\r\n            aria-haspopup=\"true\"\r\n            onClick={handleToggle}\r\n          >\r\n            <ArrowDropDownIcon />\r\n          </Button>\r\n        </ButtonGroup>\r\n        <Popper open={open} anchorEl={anchorRef.current} transition disablePortal>\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{\r\n                transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\r\n              }}\r\n            >\r\n              <Paper id=\"menu-list-grow\">\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                  <MenuList>\r\n                    {options.map((option, index) => (\r\n                      <MenuItem\r\n                        key={option}\r\n                        disabled={index === 2}\r\n                        selected={index === selectedIndex}\r\n                        onClick={event => handleMenuItemClick(event, index)}\r\n                      >\r\n                        {option}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n`;\r\nconst jsCode6 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport NavigationIcon from '@material-ui/icons/Navigation';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  fab: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function FloatingActionButtons() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Fab color=\"primary\" aria-label=\"Add\" className={classes.fab}>\r\n        <AddIcon />\r\n      </Fab>\r\n      <Fab color=\"secondary\" aria-label=\"Edit\" className={classes.fab}>\r\n        <Icon>edit_icon</Icon>\r\n      </Fab>\r\n      <Fab variant=\"extended\" aria-label=\"Delete\" className={classes.fab}>\r\n        <NavigationIcon className={classes.extendedIcon} />\r\n        Extended\r\n      </Fab>\r\n      <Fab disabled aria-label=\"Delete\" className={classes.fab}>\r\n        <DeleteIcon />\r\n      </Fab>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode7 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport NavigationIcon from '@material-ui/icons/Navigation';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function ButtonSizes() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Button size=\"small\" className={classes.margin}>\r\n          Small\r\n        </Button>\r\n        <Button size=\"medium\" className={classes.margin}>\r\n          Medium\r\n        </Button>\r\n        <Button size=\"large\" className={classes.margin}>\r\n          Large\r\n        </Button>\r\n      </div>\r\n      <div>\r\n        <Button variant=\"outlined\" size=\"small\" color=\"primary\" className={classes.margin}>\r\n          Small\r\n        </Button>\r\n        <Button variant=\"outlined\" size=\"medium\" color=\"primary\" className={classes.margin}>\r\n          Medium\r\n        </Button>\r\n        <Button variant=\"outlined\" size=\"large\" color=\"primary\" className={classes.margin}>\r\n          Large\r\n        </Button>\r\n      </div>\r\n      <div>\r\n        <Button variant=\"contained\" size=\"small\" color=\"primary\" className={classes.margin}>\r\n          Small\r\n        </Button>\r\n        <Button variant=\"contained\" size=\"medium\" color=\"primary\" className={classes.margin}>\r\n          Medium\r\n        </Button>\r\n        <Button variant=\"contained\" size=\"large\" color=\"primary\" className={classes.margin}>\r\n          Large\r\n        </Button>\r\n      </div>\r\n      <div>\r\n        <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" className={classes.margin}>\r\n          <AddIcon />\r\n        </Fab>\r\n        <Fab size=\"medium\" color=\"secondary\" aria-label=\"Add\" className={classes.margin}>\r\n          <AddIcon />\r\n        </Fab>\r\n        <Fab color=\"secondary\" aria-label=\"Add\" className={classes.margin}>\r\n          <AddIcon />\r\n        </Fab>\r\n      </div>\r\n      <div>\r\n        <Fab\r\n          variant=\"extended\"\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          aria-label=\"Add\"\r\n          className={classes.margin}\r\n        >\r\n          <NavigationIcon className={classes.extendedIcon} />\r\n          Extended\r\n        </Fab>\r\n        <Fab\r\n          variant=\"extended\"\r\n          size=\"medium\"\r\n          color=\"primary\"\r\n          aria-label=\"Add\"\r\n          className={classes.margin}\r\n        >\r\n          <NavigationIcon className={classes.extendedIcon} />\r\n          Extended\r\n        </Fab>\r\n        <Fab variant=\"extended\" color=\"primary\" aria-label=\"Add\" className={classes.margin}>\r\n          <NavigationIcon className={classes.extendedIcon} />\r\n          Extended\r\n        </Fab>\r\n      </div>\r\n      <div>\r\n        <IconButton aria-label=\"Delete\" className={classes.margin} size=\"small\">\r\n          <ArrowDownwardIcon fontSize=\"inherit\" />\r\n        </IconButton>\r\n        <IconButton aria-label=\"Delete\" className={classes.margin}>\r\n          <DeleteIcon fontSize=\"small\" />\r\n        </IconButton>\r\n        <IconButton aria-label=\"Delete\" className={classes.margin}>\r\n          <DeleteIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"Delete\" className={classes.margin}>\r\n          <DeleteIcon fontSize=\"large\" />\r\n        </IconButton>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode8 = `\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport KeyboardVoiceIcon from '@material-ui/icons/KeyboardVoice';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n}));\r\n\r\nexport default function IconLabelButtons() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"contained\" color=\"secondary\" className={classes.button}>\r\n        Delete\r\n        <DeleteIcon className={classes.rightIcon} />\r\n      </Button>\r\n      <Button variant=\"contained\" color=\"primary\" className={classes.button}>\r\n        Send\r\n        {/* This Button uses a Font Icon, see the installation instructions in the docs. */}\r\n        <Icon className={classes.rightIcon}>send</Icon>\r\n      </Button>\r\n      <Button variant=\"contained\" color=\"default\" className={classes.button}>\r\n        Upload\r\n        <CloudUploadIcon className={classes.rightIcon} />\r\n      </Button>\r\n      <Button variant=\"contained\" disabled color=\"secondary\" className={classes.button}>\r\n        <KeyboardVoiceIcon className={classes.leftIcon} />\r\n        Talk\r\n      </Button>\r\n      <Button variant=\"contained\" size=\"small\" className={classes.button}>\r\n        <SaveIcon className={clsx(classes.leftIcon, classes.iconSmall)} />\r\n        Save\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode9 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n}));\r\n\r\nexport default function IconButtons() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <IconButton className={classes.button} aria-label=\"Delete\">\r\n        <DeleteIcon />\r\n      </IconButton>\r\n      <IconButton className={classes.button} aria-label=\"Delete\" disabled color=\"primary\">\r\n        <DeleteIcon />\r\n      </IconButton>\r\n      <IconButton color=\"secondary\" className={classes.button} aria-label=\"Add an alarm\">\r\n        <Icon>alarm</Icon>\r\n      </IconButton>\r\n      <IconButton color=\"primary\" className={classes.button} aria-label=\"Add to shopping cart\">\r\n        <AddShoppingCartIcon />\r\n      </IconButton>\r\n      <input accept=\"image/*\" className={classes.input} id=\"icon-button-file\" type=\"file\" />\r\n      <label htmlFor=\"icon-button-file\">\r\n        <IconButton\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          aria-label=\"Upload picture\"\r\n          component=\"span\"\r\n        >\r\n          <PhotoCamera />\r\n        </IconButton>\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode10 = `\r\nimport React from 'react';\r\nimport { createMuiTheme, withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { green, purple } from '@material-ui/core/colors';\r\n\r\nconst BootstrapButton = withStyles({\r\n  root: {\r\n    boxShadow: 'none',\r\n    textTransform: 'none',\r\n    fontSize: 16,\r\n    padding: '6px 12px',\r\n    border: '1px solid',\r\n    lineHeight: 1.5,\r\n    backgroundColor: '#007bff',\r\n    borderColor: '#007bff',\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:hover': {\r\n      backgroundColor: '#0069d9',\r\n      borderColor: '#0062cc',\r\n    },\r\n    '&:active': {\r\n      boxShadow: 'none',\r\n      backgroundColor: '#0062cc',\r\n      borderColor: '#005cbf',\r\n    },\r\n    '&:focus': {\r\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\r\n    },\r\n  },\r\n})(Button);\r\n\r\nconst ColorButton = withStyles(theme => ({\r\n  root: {\r\n    color: theme.palette.getContrastText(purple[500]),\r\n    backgroundColor: purple[500],\r\n    '&:hover': {\r\n      backgroundColor: purple[700],\r\n    },\r\n  },\r\n}))(Button);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: green,\r\n  },\r\n});\r\n\r\nexport default function CustomizedButtons() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <ColorButton variant=\"contained\" color=\"primary\" className={classes.margin}>\r\n        Custom CSS\r\n      </ColorButton>\r\n      <ThemeProvider theme={theme}>\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.margin}>\r\n          Theme Provider\r\n        </Button>\r\n      </ThemeProvider>\r\n      <BootstrapButton variant=\"contained\" color=\"primary\" disableRipple className={classes.margin}>\r\n        Bootstrap\r\n      </BootstrapButton>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode11 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst images = [\r\n  {\r\n    url: '/static/images/grid-list/breakfast.jpg',\r\n    title: 'Breakfast',\r\n    width: '40%',\r\n  },\r\n  {\r\n    url: '/static/images/grid-list/burgers.jpg',\r\n    title: 'Burgers',\r\n    width: '30%',\r\n  },\r\n  {\r\n    url: '/static/images/grid-list/camera.jpg',\r\n    title: 'Camera',\r\n    width: '30%',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    minWidth: 300,\r\n    width: '100%',\r\n  },\r\n  image: {\r\n    position: 'relative',\r\n    height: 200,\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '100% !important', // Overrides inline-style\r\n      height: 100,\r\n    },\r\n    '&:hover, &$focusVisible': {\r\n      zIndex: 1,\r\n      '& $imageBackdrop': {\r\n        opacity: 0.15,\r\n      },\r\n      '& $imageMarked': {\r\n        opacity: 0,\r\n      },\r\n      '& $imageTitle': {\r\n        border: '4px solid currentColor',\r\n      },\r\n    },\r\n  },\r\n  focusVisible: {},\r\n  imageButton: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color: theme.palette.common.white,\r\n  },\r\n  imageSrc: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center 40%',\r\n  },\r\n  imageBackdrop: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    backgroundColor: theme.palette.common.black,\r\n    opacity: 0.4,\r\n    transition: theme.transitions.create('opacity'),\r\n  },\r\n  imageTitle: {\r\n    position: 'relative',\r\n    padding: \\`\\${theme.spacing(2)}px \\${theme.spacing(4)}px \\${theme.spacing(1) + 6}px\\`,\r\n  },\r\n  imageMarked: {\r\n    height: 3,\r\n    width: 18,\r\n    backgroundColor: theme.palette.common.white,\r\n    position: 'absolute',\r\n    bottom: -2,\r\n    left: 'calc(50% - 9px)',\r\n    transition: theme.transitions.create('opacity'),\r\n  },\r\n}));\r\n\r\nexport default function ButtonBases() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {images.map(image => (\r\n        <ButtonBase\r\n          focusRipple\r\n          key={image.title}\r\n          className={classes.image}\r\n          focusVisibleClassName={classes.focusVisible}\r\n          style={{\r\n            width: image.width,\r\n          }}\r\n        >\r\n          <span\r\n            className={classes.imageSrc}\r\n            style={{\r\n              backgroundImage: \\`url(\\${image.url})\\`,\r\n            }}\r\n          />\r\n          <span className={classes.imageBackdrop} />\r\n          <span className={classes.imageButton}>\r\n            <Typography\r\n              component=\"span\"\r\n              variant=\"subtitle1\"\r\n              color=\"inherit\"\r\n              className={classes.imageTitle}\r\n            >\r\n              {image.title}\r\n              <span className={classes.imageMarked} />\r\n            </Typography>\r\n          </span>\r\n        </ButtonBase>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode12 = `\r\nimport React from 'react';\r\nimport { MemoryRouter as Router } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// The usage of React.forwardRef will no longer be required for react-router-dom v6.\r\n// see https://github.com/ReactTraining/react-router/issues/6056\r\nconst AdapterLink = React.forwardRef((props, ref) => <Link innerRef={ref} {...props} />);\r\n\r\nconst CollisionLink = React.forwardRef((props, ref) => (\r\n  <Link innerRef={ref} to=\"/getting-started/installation/\" {...props} />\r\n));\r\n\r\nexport default function ButtonRouter() {\r\n  return (\r\n    <KtContentRouter>\r\n      <Button color=\"primary\" component={AdapterLink} to=\"/\">\r\n        Simple case\r\n      </Button>\r\n      <Button component={CollisionLink}>Avoids props collision</Button>\r\n    </Router>\r\n  );\r\n}\r\n`;\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport {\r\n  Checkbox,\r\n  FormControlLabel,\r\n  FormControl,\r\n  FormLabel,\r\n  FormGroup,\r\n  FormHelperText\r\n} from \"@material-ui/core\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\nimport Favorite from \"@material-ui/icons/Favorite\";\r\nimport FavoriteBorder from \"@material-ui/icons/FavoriteBorder\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport {green} from \"@material-ui/core/colors\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n// Example 2\r\nconst GreenCheckbox = withStyles({\r\n  root: {\r\n    color: green[400],\r\n    \"&$checked\": {\r\n      color: green[600]\r\n    }\r\n  },\r\n  checked: {}\r\n})(props => <Checkbox color=\"default\" {...props} />);\r\n\r\nexport default function CheckboxesExamplesPage() {\r\n  const [state, setState] = React.useState({\r\n    checkedA: true,\r\n    checkedB: true,\r\n    checkedF: true,\r\n    checkedG: true,\r\n    gilad: true,\r\n    jason: false,\r\n    antoine: false\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setState({ ...state, [name]: event.target.checked });\r\n  };\r\n\r\n  // Example 3\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      display: \"flex\"\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(3)\r\n    }\r\n  }));\r\n\r\n  const classes = useStyles();\r\n  const handleChange3 = name => event => {\r\n    setState({ ...state, [name]: event.target.checked });\r\n  };\r\n  const { gilad, jason, antoine } = state;\r\n  const error = [gilad, jason, antoine].filter(v => v).length !== 2;\r\n\r\n  // Example 4\r\n  const [value, setValue] = React.useState(\"female\");\r\n\r\n  function handleChange4(event) {\r\n    setValue(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          Checkboxes allow the user to select one or more items from a set.\r\n        </span>{\" \"}\r\n        <code>Checkboxes</code> can be used to turn an option on or off.{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/checkboxes/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode3}\r\n            beforeCodeTitle=\"Checkboxes\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              If you have multiple options appearing in a list, you can preserve\r\n              space by using checkboxes instead of on/off switches. If you have\r\n              a single option, avoid using a checkbox and use an on/off switch\r\n              instead.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\" />\r\n            <div>\r\n              <Checkbox\r\n                checked={state.checkedA}\r\n                onChange={handleChange(\"checkedA\")}\r\n                value=\"checkedA\"\r\n                inputProps={{\r\n                  \"aria-label\": \"primary checkbox\"\r\n                }}\r\n              />\r\n              <Checkbox\r\n                checked={state.checkedB}\r\n                onChange={handleChange(\"checkedB\")}\r\n                value=\"checkedB\"\r\n                color=\"primary\"\r\n                inputProps={{\r\n                  \"aria-label\": \"secondary checkbox\"\r\n                }}\r\n              />\r\n              <Checkbox\r\n                value=\"checkedC\"\r\n                inputProps={{\r\n                  \"aria-label\": \"uncontrolled-checkbox\"\r\n                }}\r\n              />\r\n              <Checkbox\r\n                disabled\r\n                value=\"checkedD\"\r\n                inputProps={{\r\n                  \"aria-label\": \"disabled checkbox\"\r\n                }}\r\n              />\r\n              <Checkbox\r\n                disabled\r\n                checked\r\n                value=\"checkedE\"\r\n                inputProps={{\r\n                  \"aria-label\": \"disabled checked checkbox\"\r\n                }}\r\n              />\r\n              <Checkbox\r\n                checked={state.checkedF}\r\n                onChange={handleChange(\"checkedF\")}\r\n                value=\"checkedF\"\r\n                indeterminate\r\n                inputProps={{\r\n                  \"aria-label\": \"indeterminate checkbox\"\r\n                }}\r\n              />\r\n              <Checkbox\r\n                defaultChecked\r\n                color=\"default\"\r\n                value=\"checkedG\"\r\n                inputProps={{\r\n                  \"aria-label\": \"checkbox with default color\"\r\n                }}\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode1}\r\n            beforeCodeTitle=\"Checkboxes with FormGroup\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              <code>FormGroup</code> is a helpful wrapper used to group\r\n              selection controls components that provides an easier API.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\" />\r\n            <div className={classes.root}>\r\n              <FormControl component=\"fieldset\" className={classes.formControl}>\r\n                <FormLabel component=\"legend\">Assign responsibility</FormLabel>\r\n                <FormGroup>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        checked={gilad}\r\n                        onChange={handleChange3(\"gilad\")}\r\n                        value=\"gilad\"\r\n                      />\r\n                    }\r\n                    label=\"Gilad Gray\"\r\n                  />\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        checked={jason}\r\n                        onChange={handleChange3(\"jason\")}\r\n                        value=\"jason\"\r\n                      />\r\n                    }\r\n                    label=\"Jason Killian\"\r\n                  />\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        checked={antoine}\r\n                        onChange={handleChange3(\"antoine\")}\r\n                        value=\"antoine\"\r\n                      />\r\n                    }\r\n                    label=\"Antoine Llorca\"\r\n                  />\r\n                </FormGroup>\r\n                <FormHelperText>Be careful</FormHelperText>\r\n              </FormControl>\r\n              <FormControl\r\n                required\r\n                error={error}\r\n                component=\"fieldset\"\r\n                className={classes.formControl}\r\n              >\r\n                <FormLabel component=\"legend\">Pick two</FormLabel>\r\n                <FormGroup>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        checked={gilad}\r\n                        onChange={handleChange3(\"gilad\")}\r\n                        value=\"gilad\"\r\n                      />\r\n                    }\r\n                    label=\"Gilad Gray\"\r\n                  />\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        checked={jason}\r\n                        onChange={handleChange3(\"jason\")}\r\n                        value=\"jason\"\r\n                      />\r\n                    }\r\n                    label=\"Jason Killian\"\r\n                  />\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        checked={antoine}\r\n                        onChange={handleChange3(\"antoine\")}\r\n                        value=\"antoine\"\r\n                      />\r\n                    }\r\n                    label=\"Antoine Lorca\"\r\n                  />\r\n                </FormGroup>\r\n                <FormHelperText>You can display an error</FormHelperText>\r\n              </FormControl>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode4}\r\n            beforeCodeTitle=\"Form Control Label\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              <code>Checkbox</code> can also be used with a label description\r\n              thanks to the <code>FormControlLabel</code> component.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\" />\r\n            <FormGroup row>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={state.checkedA}\r\n                    onChange={handleChange(\"checkedA\")}\r\n                    value=\"checkedA\"\r\n                  />\r\n                }\r\n                label=\"Secondary\"\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={state.checkedB}\r\n                    onChange={handleChange(\"checkedB\")}\r\n                    value=\"checkedB\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"Primary\"\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"checkedC\" />}\r\n                label=\"Uncontrolled\"\r\n              />\r\n              <FormControlLabel\r\n                disabled\r\n                control={<Checkbox value=\"checkedD\" />}\r\n                label=\"Disabled\"\r\n              />\r\n              <FormControlLabel\r\n                disabled\r\n                control={<Checkbox checked value=\"checkedE\" />}\r\n                label=\"Disabled\"\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={state.checkedF}\r\n                    onChange={handleChange(\"checkedF\")}\r\n                    value=\"checkedF\"\r\n                    indeterminate\r\n                  />\r\n                }\r\n                label=\"Indeterminate\"\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <GreenCheckbox\r\n                    checked={state.checkedG}\r\n                    onChange={handleChange(\"checkedG\")}\r\n                    value=\"checkedG\"\r\n                  />\r\n                }\r\n                label=\"Custom color\"\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    icon={<FavoriteBorder />}\r\n                    checkedIcon={<Favorite />}\r\n                    value=\"checkedH\"\r\n                  />\r\n                }\r\n                label=\"Custom icon\"\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\r\n                    checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\r\n                    value=\"checkedI\"\r\n                  />\r\n                }\r\n                label=\"Custom size\"\r\n              />\r\n            </FormGroup>\r\n          </KTCodeExample>\r\n          <KTCodeExample\r\n            jsCode={jsCode2}\r\n            beforeCodeTitle=\"Label placement\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>You can change the placement of the label:</span>\r\n            <div className=\"separator separator-dashed my-7\" />\r\n            <FormControl component=\"fieldset\">\r\n              <FormLabel component=\"legend\">labelPlacement</FormLabel>\r\n              <FormGroup\r\n                aria-label=\"position\"\r\n                name=\"position\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                row\r\n              >\r\n                <FormControlLabel\r\n                  value=\"top\"\r\n                  control={<Checkbox color=\"primary\" />}\r\n                  label=\"Top\"\r\n                  labelPlacement=\"top\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"start\"\r\n                  control={<Checkbox color=\"primary\" />}\r\n                  label=\"Start\"\r\n                  labelPlacement=\"start\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"bottom\"\r\n                  control={<Checkbox color=\"primary\" />}\r\n                  label=\"Bottom\"\r\n                  labelPlacement=\"bottom\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"end\"\r\n                  control={<Checkbox color=\"primary\" />}\r\n                  label=\"End\"\r\n                  labelPlacement=\"end\"\r\n                />\r\n              </FormGroup>\r\n            </FormControl>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function CheckboxesGroup() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    gilad: true,\r\n    jason: false,\r\n    antoine: false,\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setState({ ...state, [name]: event.target.checked });\r\n  };\r\n\r\n  const { gilad, jason, antoine } = state;\r\n  const error = [gilad, jason, antoine].filter(v => v).length !== 2;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormControl component=\"fieldset\" className={classes.formControl}>\r\n        <FormLabel component=\"legend\">Assign responsibility</FormLabel>\r\n        <FormGroup>\r\n          <FormControlLabel\r\n            control={<Checkbox checked={gilad} onChange={handleChange('gilad')} value=\"gilad\" />}\r\n            label=\"Gilad Gray\"\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox checked={jason} onChange={handleChange('jason')} value=\"jason\" />}\r\n            label=\"Jason Killian\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox checked={antoine} onChange={handleChange('antoine')} value=\"antoine\" />\r\n            }\r\n            label=\"Antoine Llorca\"\r\n          />\r\n        </FormGroup>\r\n        <FormHelperText>Be careful</FormHelperText>\r\n      </FormControl>\r\n      <FormControl required error={error} component=\"fieldset\" className={classes.formControl}>\r\n        <FormLabel component=\"legend\">Pick two</FormLabel>\r\n        <FormGroup>\r\n          <FormControlLabel\r\n            control={<Checkbox checked={gilad} onChange={handleChange('gilad')} value=\"gilad\" />}\r\n            label=\"Gilad Gray\"\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox checked={jason} onChange={handleChange('jason')} value=\"jason\" />}\r\n            label=\"Jason Killian\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox checked={antoine} onChange={handleChange('antoine')} value=\"antoine\" />\r\n            }\r\n            label=\"Antoine Llorca\"\r\n          />\r\n        </FormGroup>\r\n        <FormHelperText>You can display an error</FormHelperText>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nfunction FormControlLabelPosition() {\r\n  const [value, setValue] = React.useState('female');\r\n\r\n  function handleChange(event) {\r\n    setValue(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <FormLabel component=\"legend\">labelPlacement</FormLabel>\r\n      <FormGroup aria-label=\"position\" name=\"position\" value={value} onChange={handleChange} row>\r\n        <FormControlLabel\r\n          value=\"top\"\r\n          control={<Checkbox color=\"primary\" />}\r\n          label=\"Top\"\r\n          labelPlacement=\"top\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"start\"\r\n          control={<Checkbox color=\"primary\" />}\r\n          label=\"Start\"\r\n          labelPlacement=\"start\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"bottom\"\r\n          control={<Checkbox color=\"primary\" />}\r\n          label=\"Bottom\"\r\n          labelPlacement=\"bottom\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"end\"\r\n          control={<Checkbox color=\"primary\" />}\r\n          label=\"End\"\r\n          labelPlacement=\"end\"\r\n        />\r\n      </FormGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nexport default FormControlLabelPosition;\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nexport default function Checkboxes() {\r\n  const [state, setState] = React.useState({\r\n    checkedA: true,\r\n    checkedB: true,\r\n    checkedF: true,\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setState({ ...state, [name]: event.target.checked });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Checkbox\r\n        checked={state.checkedA}\r\n        onChange={handleChange('checkedA')}\r\n        value=\"checkedA\"\r\n        inputProps={{\r\n          'aria-label': 'primary checkbox',\r\n        }}\r\n      />\r\n      <Checkbox\r\n        checked={state.checkedB}\r\n        onChange={handleChange('checkedB')}\r\n        value=\"checkedB\"\r\n        color=\"primary\"\r\n        inputProps={{\r\n          'aria-label': 'secondary checkbox',\r\n        }}\r\n      />\r\n      <Checkbox\r\n        value=\"checkedC\"\r\n        inputProps={{\r\n          'aria-label': 'uncontrolled-checkbox',\r\n        }}\r\n      />\r\n      <Checkbox\r\n        disabled\r\n        value=\"checkedD\"\r\n        inputProps={{\r\n          'aria-label': 'disabled checkbox',\r\n        }}\r\n      />\r\n      <Checkbox\r\n        disabled\r\n        checked\r\n        value=\"checkedE\"\r\n        inputProps={{\r\n          'aria-label': 'disabled checked checkbox',\r\n        }}\r\n      />\r\n      <Checkbox\r\n        checked={state.checkedF}\r\n        onChange={handleChange('checkedF')}\r\n        value=\"checkedF\"\r\n        indeterminate\r\n        inputProps={{\r\n          'aria-label': 'indeterminate checkbox',\r\n        }}\r\n      />\r\n      <Checkbox\r\n        defaultChecked\r\n        color=\"default\"\r\n        value=\"checkedG\"\r\n        inputProps={{\r\n          'aria-label': 'checkbox with default color',\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode4 = `\r\nimport React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { green } from '@material-ui/core/colors';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport Favorite from '@material-ui/icons/Favorite';\r\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\r\n\r\nconst GreenCheckbox = withStyles({\r\n  root: {\r\n    color: green[400],\r\n    '&$checked': {\r\n      color: green[600],\r\n    },\r\n  },\r\n  checked: {},\r\n})(props => <Checkbox color=\"default\" {...props} />);\r\n\r\nexport default function CheckboxLabels() {\r\n  const [state, setState] = React.useState({\r\n    checkedA: true,\r\n    checkedB: true,\r\n    checkedF: true,\r\n    checkedG: true,\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setState({ ...state, [name]: event.target.checked });\r\n  };\r\n\r\n  return (\r\n    <FormGroup row>\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox checked={state.checkedA} onChange={handleChange('checkedA')} value=\"checkedA\" />\r\n        }\r\n        label=\"Secondary\"\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={state.checkedB}\r\n            onChange={handleChange('checkedB')}\r\n            value=\"checkedB\"\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"Primary\"\r\n      />\r\n      <FormControlLabel control={<Checkbox value=\"checkedC\" />} label=\"Uncontrolled\" />\r\n      <FormControlLabel disabled control={<Checkbox value=\"checkedD\" />} label=\"Disabled\" />\r\n      <FormControlLabel disabled control={<Checkbox checked value=\"checkedE\" />} label=\"Disabled\" />\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={state.checkedF}\r\n            onChange={handleChange('checkedF')}\r\n            value=\"checkedF\"\r\n            indeterminate\r\n          />\r\n        }\r\n        label=\"Indeterminate\"\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <GreenCheckbox\r\n            checked={state.checkedG}\r\n            onChange={handleChange('checkedG')}\r\n            value=\"checkedG\"\r\n          />\r\n        }\r\n        label=\"Custom color\"\r\n      />\r\n      <FormControlLabel\r\n        control={<Checkbox icon={<FavoriteBorder />} checkedIcon={<Favorite />} value=\"checkedH\" />}\r\n        label=\"Custom icon\"\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\r\n            checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\r\n            value=\"checkedI\"\r\n          />\r\n        }\r\n        label=\"Custom size\"\r\n      />\r\n    </FormGroup>\r\n  );\r\n}\r\n`;\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport \"date-fns\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker\r\n} from \"@material-ui/pickers\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n// Example 1\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200\r\n  }\r\n}));\r\n\r\n// Example 2\r\nconst useStyles2 = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200\r\n  }\r\n}));\r\n\r\n// Example 3\r\nconst useStyles3 = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200\r\n  }\r\n}));\r\n\r\n// Example 4\r\nconst useStyles4 = makeStyles({\r\n  grid: {\r\n    width: \"60%\"\r\n  }\r\n});\r\n\r\nexport default function PickersExamplesPage() {\r\n  const classes = useStyles();\r\n  const classes2 = useStyles2();\r\n  const classes3 = useStyles3();\r\n  // The first commit of Material-UI\r\n  const [selectedDate, setSelectedDate] = React.useState(\r\n    new Date(\"2014-08-18T21:11:54\")\r\n  );\r\n\r\n  const classes4 = useStyles4();\r\n\r\n  function handleDateChange(date) {\r\n    setSelectedDate(date);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          Pickers provide a simple way to select a single value from a\r\n          pre-determined set.\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/pickers/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode1}\r\n            beforeCodeTitle=\"Date pickers\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              A native date picker example with <code>type=\"date\"</code>.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <form className={classes.container} noValidate>\r\n              <TextField\r\n                id=\"date\"\r\n                label=\"Birthday\"\r\n                type=\"date\"\r\n                defaultValue=\"2017-05-24\"\r\n                className={classes.textField}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n              />\r\n            </form>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode3}\r\n            beforeCodeTitle=\"Time pickers\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              A native time picker example with <code>type=\"time\"</code>.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <form className={classes3.container} noValidate>\r\n              <TextField\r\n                id=\"time\"\r\n                label=\"Alarm clock\"\r\n                type=\"time\"\r\n                defaultValue=\"07:30\"\r\n                className={classes3.textField}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                inputProps={{\r\n                  step: 300 // 5 min\r\n                }}\r\n              />\r\n            </form>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode2}\r\n            beforeCodeTitle=\"Date & Time pickers\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              A native date & time picker example with{\" \"}\r\n              <code>type=\"datetime-local\"</code>.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <form className={classes2.container} noValidate>\r\n              <TextField\r\n                id=\"datetime-local\"\r\n                label=\"Next appointment\"\r\n                type=\"datetime-local\"\r\n                defaultValue=\"2017-05-24T10:30\"\r\n                className={classes2.textField}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n              />\r\n            </form>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode4}\r\n            beforeCodeTitle=\"@material-ui/pickers\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              <a href=\"https://material-ui-pickers.dev/\">\r\n                <code>@material-ui/pickers</code>\r\n              </a>{\" \"}\r\n              provides date and time controls that follow the Material Design\r\n              spec.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <Grid container className={classes.grid} justify=\"space-around\">\r\n                <KeyboardDatePicker\r\n                  margin=\"normal\"\r\n                  id=\"mui-pickers-date\"\r\n                  label=\"Date picker\"\r\n                  value={selectedDate}\r\n                  onChange={handleDateChange}\r\n                  KeyboardButtonProps={{\r\n                    \"aria-label\": \"change date\"\r\n                  }}\r\n                />\r\n                <KeyboardTimePicker\r\n                  margin=\"normal\"\r\n                  id=\"mui-pickers-time\"\r\n                  label=\"Time picker\"\r\n                  value={selectedDate}\r\n                  onChange={handleDateChange}\r\n                  KeyboardButtonProps={{\r\n                    \"aria-label\": \"change time\"\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </MuiPickersUtilsProvider>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n}));\r\n\r\nexport default function DatePickers() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form className={classes.container} noValidate>\r\n      <TextField\r\n        id=\"date\"\r\n        label=\"Birthday\"\r\n        type=\"date\"\r\n        defaultValue=\"2017-05-24\"\r\n        className={classes.textField}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n}));\r\n\r\nexport default function DateAndTimePickers() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form className={classes.container} noValidate>\r\n      <TextField\r\n        id=\"datetime-local\"\r\n        label=\"Next appointment\"\r\n        type=\"datetime-local\"\r\n        defaultValue=\"2017-05-24T10:30\"\r\n        className={classes.textField}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n}));\r\n\r\nexport default function TimePickers() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form className={classes.container} noValidate>\r\n      <TextField\r\n        id=\"time\"\r\n        label=\"Alarm clock\"\r\n        type=\"time\"\r\n        defaultValue=\"07:30\"\r\n        className={classes.textField}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        inputProps={{\r\n          step: 300, // 5 min\r\n        }}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n`;\r\nconst jsCode4 = `\r\nimport 'date-fns';\r\nimport React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nconst useStyles = makeStyles({\r\n  grid: {\r\n    width: '60%',\r\n  },\r\n});\r\n\r\nexport default function MaterialUIPickers() {\r\n  // The first commit of Material-UI\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date('2014-08-18T21:11:54'));\r\n\r\n  const classes = useStyles();\r\n\r\n  function handleDateChange(date) {\r\n    setSelectedDate(date);\r\n  }\r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <Grid container className={classes.grid} justify=\"space-around\">\r\n        <KeyboardDatePicker\r\n          margin=\"normal\"\r\n          id=\"mui-pickers-date\"\r\n          label=\"Date picker\"\r\n          value={selectedDate}\r\n          onChange={handleDateChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n        <KeyboardTimePicker\r\n          margin=\"normal\"\r\n          id=\"mui-pickers-time\"\r\n          label=\"Time picker\"\r\n          value={selectedDate}\r\n          onChange={handleDateChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change time',\r\n          }}\r\n        />\r\n      </Grid>\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n}\r\n`;\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport {makeStyles, withStyles} from \"@material-ui/core/styles\";\r\nimport {\r\n  Radio,\r\n  RadioGroup,\r\n  FormHelperText,\r\n  FormControlLabel,\r\n  FormControl,\r\n  FormLabel\r\n} from \"@material-ui/core\";\r\nimport {green} from \"@material-ui/core/colors\";\r\nimport RadioButtonUncheckedIcon from \"@material-ui/icons/RadioButtonUnchecked\";\r\nimport RadioButtonCheckedIcon from \"@material-ui/icons/RadioButtonChecked\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n// Example 1\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(3)\r\n  },\r\n  group: {\r\n    margin: theme.spacing(1, 0)\r\n  }\r\n}));\r\n\r\n// Example 2\r\nconst GreenRadio = withStyles({\r\n  root: {\r\n    color: green[400],\r\n    \"&$checked\": {\r\n      color: green[600]\r\n    }\r\n  },\r\n  checked: {}\r\n})(props => <Radio color=\"default\" {...props} />);\r\n\r\nexport default function RadioButtonsExamplesPage() {\r\n  // Example 1\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(\"female\");\r\n\r\n  function handleChange(event) {\r\n    setValue(event.target.value);\r\n  }\r\n\r\n  // Example 2\r\n  const [selectedValue, setSelectedValue] = React.useState(\"a\");\r\n  function handleChange2(event) {\r\n    setSelectedValue(event.target.value);\r\n  }\r\n\r\n  // Example 3\r\n  function handleChange3(event) {\r\n    setValue(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          Radio buttons allow the user to select one option from a set.\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/radio-buttons/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode1}\r\n            beforeCodeTitle=\"Radio Group\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            {\" \"}\r\n            <span>\r\n              <code>RadioGroup</code> is a helpful wrapper used to group{\" \"}\r\n              <code>Radio</code> components that provides an easier API, and\r\n              proper keyboard accessibility to the group.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\" />\r\n            <div className={classes.root}>\r\n              <div className=\"width-full\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-2\" />\r\n                  <div className=\"col-md-3\">\r\n                    <FormControl\r\n                      component=\"fieldset\"\r\n                      className={classes.formControl}\r\n                    >\r\n                      <FormLabel component=\"legend\">Gender</FormLabel>\r\n                      <RadioGroup\r\n                        aria-label=\"Gender\"\r\n                        name=\"gender1\"\r\n                        className={classes.group}\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                      >\r\n                        <FormControlLabel\r\n                          value=\"female\"\r\n                          control={<Radio />}\r\n                          label=\"Female\"\r\n                        />\r\n                        <FormControlLabel\r\n                          value=\"male\"\r\n                          control={<Radio />}\r\n                          label=\"Male\"\r\n                        />\r\n                        <FormControlLabel\r\n                          value=\"other\"\r\n                          control={<Radio />}\r\n                          label=\"Other\"\r\n                        />\r\n                        <FormControlLabel\r\n                          value=\"disabled\"\r\n                          disabled\r\n                          control={<Radio />}\r\n                          label=\"(Disabled option)\"\r\n                        />\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                  </div>\r\n                  <div className=\"col-md-1\" />\r\n                  <div className=\"col-md-3\">\r\n                    <FormControl\r\n                      component=\"fieldset\"\r\n                      className={classes.formControl}\r\n                    >\r\n                      <FormLabel component=\"legend\">Gender</FormLabel>\r\n                      <RadioGroup\r\n                        aria-label=\"gender\"\r\n                        name=\"gender2\"\r\n                        className={classes.group}\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                      >\r\n                        <FormControlLabel\r\n                          value=\"female\"\r\n                          control={<Radio color=\"primary\" />}\r\n                          label=\"Female\"\r\n                          labelPlacement=\"start\"\r\n                        />\r\n                        <FormControlLabel\r\n                          value=\"male\"\r\n                          control={<Radio color=\"primary\" />}\r\n                          label=\"Male\"\r\n                          labelPlacement=\"start\"\r\n                        />\r\n                        <FormControlLabel\r\n                          value=\"other\"\r\n                          control={<Radio color=\"primary\" />}\r\n                          label=\"Other\"\r\n                          labelPlacement=\"start\"\r\n                        />\r\n                        <FormControlLabel\r\n                          value=\"disabled\"\r\n                          disabled\r\n                          control={<Radio />}\r\n                          label=\"(Disabled option)\"\r\n                          labelPlacement=\"start\"\r\n                        />\r\n                      </RadioGroup>\r\n                      {/*<FormHelperText>labelPlacement start</FormHelperText>*/}\r\n                    </FormControl>\r\n                  </div>\r\n                  <div className=\"col-md-3\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode2}\r\n            beforeCodeTitle=\"Standalone Radio Buttons\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              <code>Radio</code> can also be used standalone, without the\r\n              wrapper.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\" />\r\n            <div className=\"d-flex justify-content-center width-full\">\r\n              <div>\r\n                <Radio\r\n                  checked={selectedValue === \"a\"}\r\n                  onChange={handleChange2}\r\n                  value=\"a\"\r\n                  name=\"radio-button-demo\"\r\n                  inputProps={{ \"aria-label\": \"A\" }}\r\n                />\r\n                <Radio\r\n                  checked={selectedValue === \"b\"}\r\n                  onChange={handleChange2}\r\n                  value=\"b\"\r\n                  name=\"radio-button-demo\"\r\n                  inputProps={{ \"aria-label\": \"B\" }}\r\n                />\r\n                <GreenRadio\r\n                  checked={selectedValue === \"c\"}\r\n                  onChange={handleChange2}\r\n                  value=\"c\"\r\n                  name=\"radio-button-demo\"\r\n                  inputProps={{ \"aria-label\": \"C\" }}\r\n                />\r\n                <Radio\r\n                  checked={selectedValue === \"d\"}\r\n                  onChange={handleChange2}\r\n                  value=\"d\"\r\n                  color=\"default\"\r\n                  name=\"radio-button-demo\"\r\n                  inputProps={{ \"aria-label\": \"D\" }}\r\n                />\r\n                <Radio\r\n                  checked={selectedValue === \"e\"}\r\n                  onChange={handleChange2}\r\n                  value=\"e\"\r\n                  color=\"default\"\r\n                  name=\"radio-button-demo\"\r\n                  inputProps={{ \"aria-label\": \"E\" }}\r\n                  icon={<RadioButtonUncheckedIcon fontSize=\"small\" />}\r\n                  checkedIcon={<RadioButtonCheckedIcon fontSize=\"small\" />}\r\n                />\r\n              </div>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode3}\r\n            beforeCodeTitle=\"Label placement\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>You can change the placement of the label:</span>\r\n            <div className=\"separator separator-dashed my-7\" />\r\n            <div className=\"d-flex justify-content-center width-full\">\r\n              <div>\r\n                <FormControl component=\"fieldset\">\r\n                  {/*<FormLabel component=\"legend\">labelPlacement</FormLabel>*/}\r\n                  <RadioGroup\r\n                    aria-label=\"position\"\r\n                    name=\"position\"\r\n                    value={value}\r\n                    onChange={handleChange3}\r\n                    row\r\n                  >\r\n                    <FormControlLabel\r\n                      value=\"top\"\r\n                      control={<Radio color=\"primary\" />}\r\n                      label=\"Top\"\r\n                      labelPlacement=\"top\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"start\"\r\n                      control={<Radio color=\"primary\" />}\r\n                      label=\"Start\"\r\n                      labelPlacement=\"start\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"bottom\"\r\n                      control={<Radio color=\"primary\" />}\r\n                      label=\"Bottom\"\r\n                      labelPlacement=\"bottom\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"end\"\r\n                      control={<Radio color=\"primary\" />}\r\n                      label=\"End\"\r\n                      labelPlacement=\"end\"\r\n                    />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n              </div>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(3),\r\n  },\r\n  group: {\r\n    margin: theme.spacing(1, 0),\r\n  },\r\n}));\r\n\r\nexport default function RadioButtonsGroup() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState('female');\r\n\r\n  function handleChange(event) {\r\n    setValue(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormControl component=\"fieldset\" className={classes.formControl}>\r\n        <FormLabel component=\"legend\">Gender</FormLabel>\r\n        <RadioGroup\r\n          aria-label=\"Gender\"\r\n          name=\"gender1\"\r\n          className={classes.group}\r\n          value={value}\r\n          onChange={handleChange}\r\n        >\r\n          <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\r\n          <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\r\n          <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" />\r\n          <FormControlLabel\r\n            value=\"disabled\"\r\n            disabled\r\n            control={<Radio />}\r\n            label=\"(Disabled option)\"\r\n          />\r\n        </RadioGroup>\r\n      </FormControl>\r\n      <FormControl component=\"fieldset\" className={classes.formControl}>\r\n        <FormLabel component=\"legend\">Gender</FormLabel>\r\n        <RadioGroup\r\n          aria-label=\"gender\"\r\n          name=\"gender2\"\r\n          className={classes.group}\r\n          value={value}\r\n          onChange={handleChange}\r\n        >\r\n          <FormControlLabel\r\n            value=\"female\"\r\n            control={<Radio color=\"primary\" />}\r\n            label=\"Female\"\r\n            labelPlacement=\"start\"\r\n          />\r\n          <FormControlLabel\r\n            value=\"male\"\r\n            control={<Radio color=\"primary\" />}\r\n            label=\"Male\"\r\n            labelPlacement=\"start\"\r\n          />\r\n          <FormControlLabel\r\n            value=\"other\"\r\n            control={<Radio color=\"primary\" />}\r\n            label=\"Other\"\r\n            labelPlacement=\"start\"\r\n          />\r\n          <FormControlLabel\r\n            value=\"disabled\"\r\n            disabled\r\n            control={<Radio />}\r\n            label=\"(Disabled option)\"\r\n            labelPlacement=\"start\"\r\n          />\r\n        </RadioGroup>\r\n        <FormHelperText>labelPlacement start</FormHelperText>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { green } from '@material-ui/core/colors';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\r\n\r\nconst GreenRadio = withStyles({\r\n  root: {\r\n    color: green[400],\r\n    '&$checked': {\r\n      color: green[600],\r\n    },\r\n  },\r\n  checked: {},\r\n})(props => <Radio color=\"default\" {...props} />);\r\n\r\nexport default function RadioButtons() {\r\n  const [selectedValue, setSelectedValue] = React.useState('a');\r\n\r\n  function handleChange(event) {\r\n    setSelectedValue(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Radio\r\n        checked={selectedValue === 'a'}\r\n        onChange={handleChange}\r\n        value=\"a\"\r\n        name=\"radio-button-demo\"\r\n        inputProps={{ 'aria-label': 'A' }}\r\n      />\r\n      <Radio\r\n        checked={selectedValue === 'b'}\r\n        onChange={handleChange}\r\n        value=\"b\"\r\n        name=\"radio-button-demo\"\r\n        inputProps={{ 'aria-label': 'B' }}\r\n      />\r\n      <GreenRadio\r\n        checked={selectedValue === 'c'}\r\n        onChange={handleChange}\r\n        value=\"c\"\r\n        name=\"radio-button-demo\"\r\n        inputProps={{ 'aria-label': 'C' }}\r\n      />\r\n      <Radio\r\n        checked={selectedValue === 'd'}\r\n        onChange={handleChange}\r\n        value=\"d\"\r\n        color=\"default\"\r\n        name=\"radio-button-demo\"\r\n        inputProps={{ 'aria-label': 'D' }}\r\n      />\r\n      <Radio\r\n        checked={selectedValue === 'e'}\r\n        onChange={handleChange}\r\n        value=\"e\"\r\n        color=\"default\"\r\n        name=\"radio-button-demo\"\r\n        inputProps={{ 'aria-label': 'E' }}\r\n        icon={<RadioButtonUncheckedIcon fontSize=\"small\" />}\r\n        checkedIcon={<RadioButtonCheckedIcon fontSize=\"small\" />}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nexport default function FormControlLabelPosition() {\r\n  const [value, setValue] = React.useState('female');\r\n\r\n  function handleChange(event) {\r\n    setValue(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <FormLabel component=\"legend\">labelPlacement</FormLabel>\r\n      <RadioGroup aria-label=\"position\" name=\"position\" value={value} onChange={handleChange} row>\r\n        <FormControlLabel\r\n          value=\"top\"\r\n          control={<Radio color=\"primary\" />}\r\n          label=\"Top\"\r\n          labelPlacement=\"top\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"start\"\r\n          control={<Radio color=\"primary\" />}\r\n          label=\"Start\"\r\n          labelPlacement=\"start\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"bottom\"\r\n          control={<Radio color=\"primary\" />}\r\n          label=\"Bottom\"\r\n          labelPlacement=\"bottom\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"end\"\r\n          control={<Radio color=\"primary\" />}\r\n          label=\"End\"\r\n          labelPlacement=\"end\"\r\n        />\r\n      </RadioGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n`;\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport {makeStyles, withStyles, useTheme} from \"@material-ui/core/styles\";\r\nimport {\r\n  Input,\r\n  OutlinedInput,\r\n  FilledInput,\r\n  InputLabel,\r\n  MenuItem,\r\n  FormHelperText,\r\n  FormControl,\r\n  Select,\r\n  NativeSelect,\r\n  InputBase,\r\n  Checkbox,\r\n  ListItemText,\r\n  Chip,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle\r\n} from \"@material-ui/core\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n// Example 1\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2)\r\n  }\r\n}));\r\n\r\n// Example 3\r\nconst BootstrapInput = withStyles(theme => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3)\r\n    }\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    padding: \"10px 26px 10px 12px\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"'\r\n    ].join(\",\"),\r\n    \"&:focus\": {\r\n      borderRadius: 4,\r\n      borderColor: \"#80bdff\",\r\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\"\r\n    }\r\n  }\r\n}))(InputBase);\r\n\r\nconst useStyles3 = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\n// Example 4\r\nconst useStyles4 = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n    maxWidth: 300\r\n  },\r\n  chips: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  chip: {\r\n    margin: 2\r\n  },\r\n  noLabel: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250\r\n    }\r\n  }\r\n};\r\n\r\nconst names = [\r\n  \"Oliver Hansen\",\r\n  \"Van Henry\",\r\n  \"April Tucker\",\r\n  \"Ralph Hubbard\",\r\n  \"Omar Alexander\",\r\n  \"Carlos Abbott\",\r\n  \"Miriam Wagner\",\r\n  \"Bradley Wilkerson\",\r\n  \"Virginia Andrews\",\r\n  \"Kelly Snyder\"\r\n];\r\n\r\nfunction getStyles(name, personName, theme) {\r\n  return {\r\n    fontWeight:\r\n      personName.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium\r\n  };\r\n}\r\n\r\n// Example 5\r\nconst useStyles5 = makeStyles(theme => ({\r\n  button: {\r\n    display: \"block\",\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120\r\n  }\r\n}));\r\n\r\n// Example 6\r\nconst useStyles6 = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120\r\n  }\r\n}));\r\n\r\nexport default function SelectsExamplesPage() {\r\n  // Example 1\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    age: \"\",\r\n    name: \"hai\"\r\n  });\r\n\r\n  // Example 2\r\n  const [state, setState] = React.useState({\r\n    age: \"\",\r\n    name: \"hai\"\r\n  });\r\n\r\n  const inputLabel = React.useRef(null);\r\n  const [labelWidth, setLabelWidth] = React.useState(0);\r\n  React.useEffect(() => {\r\n    setLabelWidth(inputLabel.current.offsetWidth);\r\n  }, []);\r\n\r\n  function handleChange(event) {\r\n    setValues(oldValues => ({\r\n      ...oldValues,\r\n      [event.target.name]: event.target.value\r\n    }));\r\n  }\r\n\r\n  const handleChange2 = name => event => {\r\n    setState({\r\n      ...state,\r\n      [name]: event.target.value\r\n    });\r\n  };\r\n\r\n  // Example 3\r\n  const classes3 = useStyles3();\r\n  const [age, setAge] = React.useState(\"\");\r\n  const handleChange3 = event => {\r\n    setAge(event.target.value);\r\n  };\r\n\r\n  // Exmaple 4\r\n  const classes4 = useStyles4();\r\n  const theme = useTheme();\r\n  const [personName, setPersonName] = React.useState([]);\r\n\r\n  function handleChange4(event) {\r\n    setPersonName(event.target.value);\r\n  }\r\n\r\n  function handleChangeMultiple(event) {\r\n    const { options } = event.target;\r\n    const value = [];\r\n    for (let i = 0, l = options.length; i < l; i += 1) {\r\n      if (options[i].selected) {\r\n        value.push(options[i].value);\r\n      }\r\n    }\r\n    setPersonName(value);\r\n  }\r\n\r\n  // Example 5\r\n  const classes5 = useStyles();\r\n  const [age2, setAge2] = React.useState(\"\");\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleChange5(event) {\r\n    setAge(event.target.value);\r\n  }\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  function handleOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  // Example 6\r\n  const classes6 = useStyles6();\r\n  const [state6, setState6] = React.useState({\r\n    open: false,\r\n    age: \"\"\r\n  });\r\n\r\n  const handleChange6 = name => event => {\r\n    setState6({ ...state6, [name]: Number(event.target.value) });\r\n  };\r\n\r\n  function handleClickOpen6() {\r\n    setState6({ ...state6, open: true });\r\n  }\r\n\r\n  function handleClose6() {\r\n    setState6({ ...state6, open: false });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          Select components are used for collecting user provided information\r\n          from a list of options.\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/selects/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode1}\r\n            beforeCodeTitle=\"Simple Select\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              Menus are positioned over their emitting elements such that the\r\n              currently selected menu item appears on top of the emitting\r\n              element.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n\r\n            <form className={classes.root} autoComplete=\"off\">\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-simple\">Age</InputLabel>\r\n                <Select\r\n                  value={values.age}\r\n                  onChange={handleChange}\r\n                  inputProps={{\r\n                    name: \"age\",\r\n                    id: \"age-simple\"\r\n                  }}\r\n                >\r\n                  <MenuItem value={10}>Ten</MenuItem>\r\n                  <MenuItem value={20}>Twenty</MenuItem>\r\n                  <MenuItem value={30}>Thirty</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-helper\">Age</InputLabel>\r\n                <Select\r\n                  value={values.age}\r\n                  onChange={handleChange}\r\n                  input={<Input name=\"age\" id=\"age-helper\" />}\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  <MenuItem value={10}>Ten</MenuItem>\r\n                  <MenuItem value={20}>Twenty</MenuItem>\r\n                  <MenuItem value={30}>Thirty</MenuItem>\r\n                </Select>\r\n                <FormHelperText>Some important helper text</FormHelperText>\r\n              </FormControl>\r\n              <FormControl className={classes.formControl}>\r\n                <Select\r\n                  value={values.age}\r\n                  onChange={handleChange}\r\n                  displayEmpty\r\n                  name=\"age\"\r\n                  className={classes.selectEmpty}\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  <MenuItem value={10}>Ten</MenuItem>\r\n                  <MenuItem value={20}>Twenty</MenuItem>\r\n                  <MenuItem value={30}>Thirty</MenuItem>\r\n                </Select>\r\n                <FormHelperText>Without label</FormHelperText>\r\n              </FormControl>\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel shrink htmlFor=\"age-label-placeholder\">\r\n                  Age\r\n                </InputLabel>\r\n                <Select\r\n                  value={values.age}\r\n                  onChange={handleChange}\r\n                  input={<Input name=\"age\" id=\"age-label-placeholder\" />}\r\n                  displayEmpty\r\n                  name=\"age\"\r\n                  className={classes.selectEmpty}\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  <MenuItem value={10}>Ten</MenuItem>\r\n                  <MenuItem value={20}>Twenty</MenuItem>\r\n                  <MenuItem value={30}>Thirty</MenuItem>\r\n                </Select>\r\n                <FormHelperText>Label + placeholder</FormHelperText>\r\n              </FormControl>\r\n              <FormControl className={classes.formControl} disabled>\r\n                <InputLabel htmlFor=\"name-disabled\">Name</InputLabel>\r\n                <Select\r\n                  value={values.name}\r\n                  onChange={handleChange}\r\n                  input={<Input name=\"name\" id=\"name-disabled\" />}\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  <MenuItem value=\"hai\">Hai</MenuItem>\r\n                  <MenuItem value=\"olivier\">Olivier</MenuItem>\r\n                  <MenuItem value=\"kevin\">Kevin</MenuItem>\r\n                </Select>\r\n                <FormHelperText>Disabled</FormHelperText>\r\n              </FormControl>\r\n              <FormControl className={classes.formControl} error>\r\n                <InputLabel htmlFor=\"name-error\">Name</InputLabel>\r\n                <Select\r\n                  value={values.name}\r\n                  onChange={handleChange}\r\n                  name=\"name\"\r\n                  renderValue={value => `! - ${value}`}\r\n                  input={<Input id=\"name-error\" />}\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  <MenuItem value=\"hai\">Hai</MenuItem>\r\n                  <MenuItem value=\"olivier\">Olivier</MenuItem>\r\n                  <MenuItem value=\"kevin\">Kevin</MenuItem>\r\n                </Select>\r\n                <FormHelperText>Error</FormHelperText>\r\n              </FormControl>\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel htmlFor=\"name-readonly\">Name</InputLabel>\r\n                <Select\r\n                  value={values.name}\r\n                  onChange={handleChange}\r\n                  input={<Input name=\"name\" id=\"name-readonly\" readOnly />}\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  <MenuItem value=\"hai\">Hai</MenuItem>\r\n                  <MenuItem value=\"olivier\">Olivier</MenuItem>\r\n                  <MenuItem value=\"kevin\">Kevin</MenuItem>\r\n                </Select>\r\n                <FormHelperText>Read only</FormHelperText>\r\n              </FormControl>\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-auto-width\">Age</InputLabel>\r\n                <Select\r\n                  value={values.age}\r\n                  onChange={handleChange}\r\n                  input={<Input name=\"age\" id=\"age-auto-width\" />}\r\n                  autoWidth\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  <MenuItem value={10}>Ten</MenuItem>\r\n                  <MenuItem value={20}>Twenty</MenuItem>\r\n                  <MenuItem value={30}>Thirty</MenuItem>\r\n                </Select>\r\n                <FormHelperText>Auto width</FormHelperText>\r\n              </FormControl>\r\n              <FormControl className={classes.formControl}>\r\n                <Select\r\n                  value={values.age}\r\n                  onChange={handleChange}\r\n                  name=\"age\"\r\n                  displayEmpty\r\n                  className={classes.selectEmpty}\r\n                >\r\n                  <MenuItem value=\"\" disabled>\r\n                    Placeholder\r\n                  </MenuItem>\r\n                  <MenuItem value={10}>Ten</MenuItem>\r\n                  <MenuItem value={20}>Twenty</MenuItem>\r\n                  <MenuItem value={30}>Thirty</MenuItem>\r\n                </Select>\r\n                <FormHelperText>Placeholder</FormHelperText>\r\n              </FormControl>\r\n              <FormControl required className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-required\">Age</InputLabel>\r\n                <Select\r\n                  value={values.age}\r\n                  onChange={handleChange}\r\n                  name=\"age\"\r\n                  inputProps={{\r\n                    id: \"age-required\"\r\n                  }}\r\n                  className={classes.selectEmpty}\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  <MenuItem value={10}>Ten</MenuItem>\r\n                  <MenuItem value={20}>Twenty</MenuItem>\r\n                  <MenuItem value={30}>Thirty</MenuItem>\r\n                </Select>\r\n                <FormHelperText>Required</FormHelperText>\r\n              </FormControl>\r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel ref={inputLabel} htmlFor=\"outlined-age-simple\">\r\n                  Age\r\n                </InputLabel>\r\n                <Select\r\n                  value={values.age}\r\n                  onChange={handleChange}\r\n                  input={\r\n                    <OutlinedInput\r\n                      labelWidth={labelWidth}\r\n                      name=\"age\"\r\n                      id=\"outlined-age-simple\"\r\n                    />\r\n                  }\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  <MenuItem value={10}>Ten</MenuItem>\r\n                  <MenuItem value={20}>Twenty</MenuItem>\r\n                  <MenuItem value={30}>Thirty</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              <FormControl variant=\"filled\" className={classes.formControl}>\r\n                <InputLabel htmlFor=\"filled-age-simple\">Age</InputLabel>\r\n                <Select\r\n                  value={values.age}\r\n                  onChange={handleChange}\r\n                  input={<FilledInput name=\"age\" id=\"filled-age-simple\" />}\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  <MenuItem value={10}>Ten</MenuItem>\r\n                  <MenuItem value={20}>Twenty</MenuItem>\r\n                  <MenuItem value={30}>Thirty</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </form>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode3}\r\n            beforeCodeTitle=\"Customized selects\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <div className=\"section\">\r\n              <span className=\"section-sub\">\r\n                The first step is to style the <code>InputBase</code> component.\r\n                Once it's styled, you can either use it directly as a text field\r\n                or provide it to the select <code>input</code> property to have\r\n                a <code>select</code> field.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <div className=\"section-content\">\r\n                <form className={classes3.root} autoComplete=\"off\">\r\n                  <div className=\"d-flex justify-content-center width-full\">\r\n                    <div>\r\n                      <FormControl className={classes3.margin}>\r\n                        <InputLabel htmlFor=\"age-customized-input\">\r\n                          Age\r\n                        </InputLabel>\r\n                        <BootstrapInput id=\"age-customized-input\" />\r\n                      </FormControl>\r\n                      <FormControl className={classes3.margin}>\r\n                        <InputLabel htmlFor=\"age-customized-select\">\r\n                          Age\r\n                        </InputLabel>\r\n                        <Select\r\n                          value={age}\r\n                          onChange={handleChange3}\r\n                          input={\r\n                            <BootstrapInput\r\n                              name=\"age\"\r\n                              id=\"age-customized-select\"\r\n                              className=\"select_input-h\"\r\n                            />\r\n                          }\r\n                        >\r\n                          <MenuItem value=\"\">\r\n                            <em>None</em>\r\n                          </MenuItem>\r\n                          <MenuItem value={10}>Ten</MenuItem>\r\n                          <MenuItem value={20}>Twenty</MenuItem>\r\n                          <MenuItem value={30}>Thirty</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                      <FormControl className={classes3.margin}>\r\n                        <InputLabel htmlFor=\"age-customized-native-simple\">\r\n                          Age\r\n                        </InputLabel>\r\n                        <NativeSelect\r\n                          value={age}\r\n                          onChange={handleChange3}\r\n                          input={\r\n                            <BootstrapInput\r\n                              name=\"age\"\r\n                              id=\"age-customized-native-simple\"\r\n                            />\r\n                          }\r\n                        >\r\n                          <option value=\"\" />\r\n                          <option value={10}>Ten</option>\r\n                          <option value={20}>Twenty</option>\r\n                          <option value={30}>Thirty</option>\r\n                        </NativeSelect>\r\n                      </FormControl>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </KTCodeExample>\r\n          <KTCodeExample\r\n            jsCode={jsCode5}\r\n            beforeCodeTitle=\"Controlled Open Select\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <form autoComplete=\"off\">\r\n              <Button className={classes5.button} onClick={handleOpen}>\r\n                Open the select\r\n              </Button>\r\n              <div className=\"d-flex justify-content-center width-full\">\r\n                <div>\r\n                  <FormControl className={classes5.formControl}>\r\n                    <InputLabel htmlFor=\"demo-controlled-open-select\">\r\n                      Age\r\n                    </InputLabel>\r\n                    <Select\r\n                      open={open}\r\n                      onClose={handleClose}\r\n                      onOpen={handleOpen}\r\n                      value={age}\r\n                      onChange={handleChange5}\r\n                      inputProps={{\r\n                        name: \"age\",\r\n                        id: \"demo-controlled-open-select\"\r\n                      }}\r\n                    >\r\n                      <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                      </MenuItem>\r\n                      <MenuItem value={10}>Ten</MenuItem>\r\n                      <MenuItem value={20}>Twenty</MenuItem>\r\n                      <MenuItem value={30}>Thirty</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode2}\r\n            beforeCodeTitle=\"Native Select\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              As the user experience can be improved on mobile using the native\r\n              select of the platform, we allow such pattern.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes.root}>\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-native-simple\">Age</InputLabel>\r\n                <Select\r\n                  native\r\n                  value={state.age}\r\n                  onChange={handleChange2(\"age\")}\r\n                  inputProps={{\r\n                    name: \"age\",\r\n                    id: \"age-native-simple\"\r\n                  }}\r\n                >\r\n                  <option value=\"\" />\r\n                  <option value={10}>Ten</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </Select>\r\n              </FormControl>\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-native-helper\">Age</InputLabel>\r\n                <NativeSelect\r\n                  value={state.age}\r\n                  onChange={handleChange2(\"age\")}\r\n                  input={<Input name=\"age\" id=\"age-native-helper\" />}\r\n                >\r\n                  <option value=\"\" />\r\n                  <option value={10}>Ten</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </NativeSelect>\r\n                <FormHelperText>Some important helper text</FormHelperText>\r\n              </FormControl>\r\n              <FormControl className={classes.formControl}>\r\n                <NativeSelect\r\n                  value={state.age}\r\n                  onChange={handleChange2(\"age\")}\r\n                  name=\"age\"\r\n                  className={classes.selectEmpty}\r\n                  inputProps={{ \"aria-label\": \"age\" }}\r\n                >\r\n                  <option value=\"\">None</option>\r\n                  <option value={10}>Ten</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </NativeSelect>\r\n                <FormHelperText>With visually hidden label</FormHelperText>\r\n              </FormControl>\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel shrink htmlFor=\"age-native-label-placeholder\">\r\n                  Age\r\n                </InputLabel>\r\n                <NativeSelect\r\n                  value={state.age}\r\n                  onChange={handleChange2(\"age\")}\r\n                  input={<Input name=\"age\" id=\"age-native-label-placeholder\" />}\r\n                >\r\n                  <option value=\"\">None</option>\r\n                  <option value={10}>Ten</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </NativeSelect>\r\n                <FormHelperText>Label + placeholder</FormHelperText>\r\n              </FormControl>\r\n              <FormControl className={classes.formControl} disabled>\r\n                <InputLabel htmlFor=\"name-native-disabled\">Name</InputLabel>\r\n                <NativeSelect\r\n                  value={state.name}\r\n                  onChange={handleChange2(\"name\")}\r\n                  input={<Input name=\"name\" id=\"name-native-disabled\" />}\r\n                >\r\n                  <option value=\"\" />\r\n                  <optgroup label=\"Author\">\r\n                    <option value=\"hai\">Hai</option>\r\n                  </optgroup>\r\n                  <optgroup label=\"Contributors\">\r\n                    <option value=\"olivier\">Olivier</option>\r\n                    <option value=\"kevin\">Kevin</option>\r\n                  </optgroup>\r\n                </NativeSelect>\r\n                <FormHelperText>Disabled</FormHelperText>\r\n              </FormControl>\r\n              <FormControl className={classes.formControl} error>\r\n                <InputLabel htmlFor=\"name-native-error\">Name</InputLabel>\r\n                <NativeSelect\r\n                  value={state.name}\r\n                  onChange={handleChange2(\"name\")}\r\n                  name=\"name\"\r\n                  input={<Input id=\"name-native-error\" />}\r\n                >\r\n                  <option value=\"\" />\r\n                  <optgroup label=\"Author\">\r\n                    <option value=\"hai\">Hai</option>\r\n                  </optgroup>\r\n                  <optgroup label=\"Contributors\">\r\n                    <option value=\"olivier\">Olivier</option>\r\n                    <option value=\"kevin\">Kevin</option>\r\n                  </optgroup>\r\n                </NativeSelect>\r\n                <FormHelperText>Error</FormHelperText>\r\n              </FormControl>\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel htmlFor=\"uncontrolled-native\">Name</InputLabel>\r\n                <NativeSelect\r\n                  defaultValue={30}\r\n                  input={<Input name=\"name\" id=\"uncontrolled-native\" />}\r\n                >\r\n                  <option value=\"\" />\r\n                  <option value={10}>Ten</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </NativeSelect>\r\n                <FormHelperText>Uncontrolled</FormHelperText>\r\n              </FormControl>\r\n              <FormControl className={classes.formControl}>\r\n                <NativeSelect\r\n                  className={classes.selectEmpty}\r\n                  value={state.age}\r\n                  name=\"age\"\r\n                  onChange={handleChange2(\"age\")}\r\n                  inputProps={{ \"aria-label\": \"age\" }}\r\n                >\r\n                  <option value=\"\" disabled>\r\n                    Placeholder\r\n                  </option>\r\n                  <option value={10}>Ten</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </NativeSelect>\r\n                <FormHelperText>Placeholder</FormHelperText>\r\n              </FormControl>\r\n              <FormControl required className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-native-required\">Age</InputLabel>\r\n                <Select\r\n                  native\r\n                  value={state.age}\r\n                  onChange={handleChange2(\"age\")}\r\n                  name=\"age\"\r\n                  inputProps={{\r\n                    id: \"age-native-required\"\r\n                  }}\r\n                >\r\n                  <option value=\"\" />\r\n                  <option value={10}>Ten</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </Select>\r\n                <FormHelperText>Required</FormHelperText>\r\n              </FormControl>\r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel\r\n                  ref={inputLabel}\r\n                  htmlFor=\"outlined-age-native-simple\"\r\n                >\r\n                  Age\r\n                </InputLabel>\r\n                <Select\r\n                  native\r\n                  value={state.age}\r\n                  onChange={handleChange2(\"age\")}\r\n                  input={\r\n                    <OutlinedInput\r\n                      name=\"age\"\r\n                      labelWidth={labelWidth}\r\n                      id=\"outlined-age-native-simple\"\r\n                    />\r\n                  }\r\n                >\r\n                  <option value=\"\" />\r\n                  <option value={10}>Ten</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </Select>\r\n              </FormControl>\r\n              <FormControl variant=\"filled\" className={classes.formControl}>\r\n                <InputLabel htmlFor=\"filled-age-native-simple\">Age</InputLabel>\r\n                <Select\r\n                  native\r\n                  value={state.age}\r\n                  onChange={handleChange2(\"age\")}\r\n                  input={\r\n                    <FilledInput name=\"age\" id=\"filled-age-native-simple\" />\r\n                  }\r\n                >\r\n                  <option value=\"\" />\r\n                  <option value={10}>Ten</option>\r\n                  <option value={20}>Twenty</option>\r\n                  <option value={30}>Thirty</option>\r\n                </Select>\r\n              </FormControl>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode4}\r\n            beforeCodeTitle=\"Multiple Select\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span className=\"pb-3\">\r\n              The <code>Select</code> component can handle multiple selections.\r\n              It's enabled with the <code>multiple</code> property.\r\n            </span>\r\n            <div>\r\n              Like with the single selection, you can pull out the new value by\r\n              accessing <code>event.target.value</code> in the{\" \"}\r\n              <code>onChange</code> callback. It's always an array.\r\n            </div>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes4.root}>\r\n              <div className=\"d-flex justify-content-center width-full\">\r\n                <div>\r\n                  <FormControl className={classes4.formControl}>\r\n                    <InputLabel htmlFor=\"select-multiple\">Name</InputLabel>\r\n                    <Select\r\n                      multiple\r\n                      value={personName}\r\n                      onChange={handleChange4}\r\n                      input={<Input id=\"select-multiple\" />}\r\n                      MenuProps={MenuProps}\r\n                    >\r\n                      {names.map(name => (\r\n                        <MenuItem\r\n                          key={name}\r\n                          value={name}\r\n                          style={getStyles(name, personName, theme)}\r\n                        >\r\n                          {name}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                  <FormControl className={classes4.formControl}>\r\n                    <InputLabel htmlFor=\"select-multiple-checkbox\">\r\n                      Tag\r\n                    </InputLabel>\r\n                    <Select\r\n                      multiple\r\n                      value={personName}\r\n                      onChange={handleChange4}\r\n                      input={<Input id=\"select-multiple-checkbox\" />}\r\n                      renderValue={selected => selected.join(\", \")}\r\n                      MenuProps={MenuProps}\r\n                    >\r\n                      {names.map(name => (\r\n                        <MenuItem key={name} value={name}>\r\n                          <Checkbox checked={personName.indexOf(name) > -1} />\r\n                          <ListItemText primary={name} />\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                  <FormControl className={classes4.formControl}>\r\n                    <InputLabel htmlFor=\"select-multiple-chip\">Chip</InputLabel>\r\n                    <Select\r\n                      multiple\r\n                      value={personName}\r\n                      onChange={handleChange4}\r\n                      input={<Input id=\"select-multiple-chip\" />}\r\n                      renderValue={selected => (\r\n                        <div className={classes4.chips}>\r\n                          {selected.map(value => (\r\n                            <Chip\r\n                              key={value}\r\n                              label={value}\r\n                              className={classes4.chip}\r\n                            />\r\n                          ))}\r\n                        </div>\r\n                      )}\r\n                      MenuProps={MenuProps}\r\n                    >\r\n                      {names.map(name => (\r\n                        <MenuItem\r\n                          key={name}\r\n                          value={name}\r\n                          style={getStyles(name, personName, theme)}\r\n                        >\r\n                          {name}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                  <FormControl\r\n                    className={clsx(classes4.formControl, classes4.noLabel)}\r\n                  >\r\n                    <Select\r\n                      multiple\r\n                      displayEmpty\r\n                      value={personName}\r\n                      onChange={handleChange4}\r\n                      input={<Input id=\"select-multiple-placeholder\" />}\r\n                      renderValue={selected => {\r\n                        if (selected.length === 0) {\r\n                          return <em>Placeholder</em>;\r\n                        }\r\n\r\n                        return selected.join(\", \");\r\n                      }}\r\n                      MenuProps={MenuProps}\r\n                    >\r\n                      <MenuItem disabled value=\"\">\r\n                        <em>Placeholder</em>\r\n                      </MenuItem>\r\n                      {names.map(name => (\r\n                        <MenuItem\r\n                          key={name}\r\n                          value={name}\r\n                          style={getStyles(name, personName, theme)}\r\n                        >\r\n                          {name}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                  <FormControl className={classes4.formControl}>\r\n                    <InputLabel shrink htmlFor=\"select-multiple-native\">\r\n                      Native\r\n                    </InputLabel>\r\n                    <Select\r\n                      multiple\r\n                      native\r\n                      value={personName}\r\n                      onChange={handleChangeMultiple}\r\n                      inputProps={{\r\n                        id: \"select-multiple-native\"\r\n                      }}\r\n                    >\r\n                      {names.map(name => (\r\n                        <option key={name} value={name}>\r\n                          {name}\r\n                        </option>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode6}\r\n            beforeCodeTitle=\"With a Dialog\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              While it's discouraged by the Material Design specification, you\r\n              can use a select inside a dialog.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className=\"d-flex justify-content-center width-full\">\r\n              <div>\r\n                <Button onClick={handleClickOpen6}>Open select dialog</Button>\r\n                <Dialog\r\n                  disableBackdropClick\r\n                  disableEscapeKeyDown\r\n                  open={state6.open}\r\n                  onClose={handleClose6}\r\n                >\r\n                  <DialogTitle>Fill the form</DialogTitle>\r\n                  <DialogContent>\r\n                    <form className={classes6.container}>\r\n                      <FormControl className={classes6.formControl}>\r\n                        <InputLabel htmlFor=\"age-native-simple\">Age</InputLabel>\r\n                        <Select\r\n                          native\r\n                          value={state6.age}\r\n                          onChange={handleChange6(\"age\")}\r\n                          input={<Input id=\"age-native-simple\" />}\r\n                        >\r\n                          <option value=\"\" />\r\n                          <option value={10}>Ten</option>\r\n                          <option value={20}>Twenty</option>\r\n                          <option value={30}>Thirty</option>\r\n                        </Select>\r\n                      </FormControl>\r\n                      <FormControl className={classes6.formControl}>\r\n                        <InputLabel htmlFor=\"age-simple\">Age</InputLabel>\r\n                        <Select\r\n                          value={state6.age}\r\n                          onChange={handleChange6(\"age\")}\r\n                          input={<Input id=\"age-simple\" />}\r\n                        >\r\n                          <MenuItem value=\"\">\r\n                            <em>None</em>\r\n                          </MenuItem>\r\n                          <MenuItem value={10}>Ten</MenuItem>\r\n                          <MenuItem value={20}>Twenty</MenuItem>\r\n                          <MenuItem value={30}>Thirty</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </form>\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button onClick={handleClose6} color=\"primary\">\r\n                      Cancel\r\n                    </Button>\r\n                    <Button onClick={handleClose6} color=\"primary\">\r\n                      Ok\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n              </div>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport FilledInput from '@material-ui/core/FilledInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function SimpleSelect() {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    age: '',\r\n    name: 'hai',\r\n  });\r\n\r\n  const inputLabel = React.useRef(null);\r\n  const [labelWidth, setLabelWidth] = React.useState(0);\r\n  React.useEffect(() => {\r\n    setLabelWidth(inputLabel.current.offsetWidth);\r\n  }, []);\r\n\r\n  function handleChange(event) {\r\n    setValues(oldValues => ({\r\n      ...oldValues,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n  }\r\n\r\n  return (\r\n    <form className={classes.root} autoComplete=\"off\">\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor=\"age-simple\">Age</InputLabel>\r\n        <Select\r\n          value={values.age}\r\n          onChange={handleChange}\r\n          inputProps={{\r\n            name: 'age',\r\n            id: 'age-simple',\r\n          }}\r\n        >\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor=\"age-helper\">Age</InputLabel>\r\n        <Select\r\n          value={values.age}\r\n          onChange={handleChange}\r\n          input={<Input name=\"age\" id=\"age-helper\" />}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Some important helper text</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <Select\r\n          value={values.age}\r\n          onChange={handleChange}\r\n          displayEmpty\r\n          name=\"age\"\r\n          className={classes.selectEmpty}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Without label</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel shrink htmlFor=\"age-label-placeholder\">\r\n          Age\r\n        </InputLabel>\r\n        <Select\r\n          value={values.age}\r\n          onChange={handleChange}\r\n          input={<Input name=\"age\" id=\"age-label-placeholder\" />}\r\n          displayEmpty\r\n          name=\"age\"\r\n          className={classes.selectEmpty}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Label + placeholder</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl} disabled>\r\n        <InputLabel htmlFor=\"name-disabled\">Name</InputLabel>\r\n        <Select\r\n          value={values.name}\r\n          onChange={handleChange}\r\n          input={<Input name=\"name\" id=\"name-disabled\" />}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value=\"hai\">Hai</MenuItem>\r\n          <MenuItem value=\"olivier\">Olivier</MenuItem>\r\n          <MenuItem value=\"kevin\">Kevin</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Disabled</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl} error>\r\n        <InputLabel htmlFor=\"name-error\">Name</InputLabel>\r\n        <Select\r\n          value={values.name}\r\n          onChange={handleChange}\r\n          name=\"name\"\r\n          renderValue={value => \\`⚠️  - \\${value}\\`}\r\n          input={<Input id=\"name-error\" />}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value=\"hai\">Hai</MenuItem>\r\n          <MenuItem value=\"olivier\">Olivier</MenuItem>\r\n          <MenuItem value=\"kevin\">Kevin</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Error</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor=\"name-readonly\">Name</InputLabel>\r\n        <Select\r\n          value={values.name}\r\n          onChange={handleChange}\r\n          input={<Input name=\"name\" id=\"name-readonly\" readOnly />}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value=\"hai\">Hai</MenuItem>\r\n          <MenuItem value=\"olivier\">Olivier</MenuItem>\r\n          <MenuItem value=\"kevin\">Kevin</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Read only</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor=\"age-auto-width\">Age</InputLabel>\r\n        <Select\r\n          value={values.age}\r\n          onChange={handleChange}\r\n          input={<Input name=\"age\" id=\"age-auto-width\" />}\r\n          autoWidth\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Auto width</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <Select\r\n          value={values.age}\r\n          onChange={handleChange}\r\n          name=\"age\"\r\n          displayEmpty\r\n          className={classes.selectEmpty}\r\n        >\r\n          <MenuItem value=\"\" disabled>\r\n            Placeholder\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Placeholder</FormHelperText>\r\n      </FormControl>\r\n      <FormControl required className={classes.formControl}>\r\n        <InputLabel htmlFor=\"age-required\">Age</InputLabel>\r\n        <Select\r\n          value={values.age}\r\n          onChange={handleChange}\r\n          name=\"age\"\r\n          inputProps={{\r\n            id: 'age-required',\r\n          }}\r\n          className={classes.selectEmpty}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Required</FormHelperText>\r\n      </FormControl>\r\n      <FormControl variant=\"outlined\" className={classes.formControl}>\r\n        <InputLabel ref={inputLabel} htmlFor=\"outlined-age-simple\">\r\n          Age\r\n        </InputLabel>\r\n        <Select\r\n          value={values.age}\r\n          onChange={handleChange}\r\n          input={<OutlinedInput labelWidth={labelWidth} name=\"age\" id=\"outlined-age-simple\" />}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl variant=\"filled\" className={classes.formControl}>\r\n        <InputLabel htmlFor=\"filled-age-simple\">Age</InputLabel>\r\n        <Select\r\n          value={values.age}\r\n          onChange={handleChange}\r\n          input={<FilledInput name=\"age\" id=\"filled-age-simple\" />}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </form>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport FilledInput from '@material-ui/core/FilledInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function NativeSelects() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    age: '',\r\n    name: 'hai',\r\n  });\r\n\r\n  const inputLabel = React.useRef(null);\r\n  const [labelWidth, setLabelWidth] = React.useState(0);\r\n  React.useEffect(() => {\r\n    setLabelWidth(inputLabel.current.offsetWidth);\r\n  }, []);\r\n\r\n  const handleChange = name => event => {\r\n    setState({\r\n      ...state,\r\n      [name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor=\"age-native-simple\">Age</InputLabel>\r\n        <Select\r\n          native\r\n          value={state.age}\r\n          onChange={handleChange('age')}\r\n          inputProps={{\r\n            name: 'age',\r\n            id: 'age-native-simple',\r\n          }}\r\n        >\r\n          <option value=\"\" />\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor=\"age-native-helper\">Age</InputLabel>\r\n        <NativeSelect\r\n          value={state.age}\r\n          onChange={handleChange('age')}\r\n          input={<Input name=\"age\" id=\"age-native-helper\" />}\r\n        >\r\n          <option value=\"\" />\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </NativeSelect>\r\n        <FormHelperText>Some important helper text</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <NativeSelect\r\n          value={state.age}\r\n          onChange={handleChange('age')}\r\n          name=\"age\"\r\n          className={classes.selectEmpty}\r\n          inputProps={{ 'aria-label': 'age' }}\r\n        >\r\n          <option value=\"\">None</option>\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </NativeSelect>\r\n        <FormHelperText>With visually hidden label</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel shrink htmlFor=\"age-native-label-placeholder\">\r\n          Age\r\n        </InputLabel>\r\n        <NativeSelect\r\n          value={state.age}\r\n          onChange={handleChange('age')}\r\n          input={<Input name=\"age\" id=\"age-native-label-placeholder\" />}\r\n        >\r\n          <option value=\"\">None</option>\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </NativeSelect>\r\n        <FormHelperText>Label + placeholder</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl} disabled>\r\n        <InputLabel htmlFor=\"name-native-disabled\">Name</InputLabel>\r\n        <NativeSelect\r\n          value={state.name}\r\n          onChange={handleChange('name')}\r\n          input={<Input name=\"name\" id=\"name-native-disabled\" />}\r\n        >\r\n          <option value=\"\" />\r\n          <optgroup label=\"Author\">\r\n            <option value=\"hai\">Hai</option>\r\n          </optgroup>\r\n          <optgroup label=\"Contributors\">\r\n            <option value=\"olivier\">Olivier</option>\r\n            <option value=\"kevin\">Kevin</option>\r\n          </optgroup>\r\n        </NativeSelect>\r\n        <FormHelperText>Disabled</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl} error>\r\n        <InputLabel htmlFor=\"name-native-error\">Name</InputLabel>\r\n        <NativeSelect\r\n          value={state.name}\r\n          onChange={handleChange('name')}\r\n          name=\"name\"\r\n          input={<Input id=\"name-native-error\" />}\r\n        >\r\n          <option value=\"\" />\r\n          <optgroup label=\"Author\">\r\n            <option value=\"hai\">Hai</option>\r\n          </optgroup>\r\n          <optgroup label=\"Contributors\">\r\n            <option value=\"olivier\">Olivier</option>\r\n            <option value=\"kevin\">Kevin</option>\r\n          </optgroup>\r\n        </NativeSelect>\r\n        <FormHelperText>Error</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor=\"uncontrolled-native\">Name</InputLabel>\r\n        <NativeSelect defaultValue={30} input={<Input name=\"name\" id=\"uncontrolled-native\" />}>\r\n          <option value=\"\" />\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </NativeSelect>\r\n        <FormHelperText>Uncontrolled</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <NativeSelect\r\n          className={classes.selectEmpty}\r\n          value={state.age}\r\n          name=\"age\"\r\n          onChange={handleChange('age')}\r\n          inputProps={{ 'aria-label': 'age' }}\r\n        >\r\n          <option value=\"\" disabled>\r\n            Placeholder\r\n          </option>\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </NativeSelect>\r\n        <FormHelperText>Placeholder</FormHelperText>\r\n      </FormControl>\r\n      <FormControl required className={classes.formControl}>\r\n        <InputLabel htmlFor=\"age-native-required\">Age</InputLabel>\r\n        <Select\r\n          native\r\n          value={state.age}\r\n          onChange={handleChange('age')}\r\n          name=\"age\"\r\n          inputProps={{\r\n            id: 'age-native-required',\r\n          }}\r\n        >\r\n          <option value=\"\" />\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </Select>\r\n        <FormHelperText>Required</FormHelperText>\r\n      </FormControl>\r\n      <FormControl variant=\"outlined\" className={classes.formControl}>\r\n        <InputLabel ref={inputLabel} htmlFor=\"outlined-age-native-simple\">\r\n          Age\r\n        </InputLabel>\r\n        <Select\r\n          native\r\n          value={state.age}\r\n          onChange={handleChange('age')}\r\n          input={\r\n            <OutlinedInput name=\"age\" labelWidth={labelWidth} id=\"outlined-age-native-simple\" />\r\n          }\r\n        >\r\n          <option value=\"\" />\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl variant=\"filled\" className={classes.formControl}>\r\n        <InputLabel htmlFor=\"filled-age-native-simple\">Age</InputLabel>\r\n        <Select\r\n          native\r\n          value={state.age}\r\n          onChange={handleChange('age')}\r\n          input={<FilledInput name=\"age\" id=\"filled-age-native-simple\" />}\r\n        >\r\n          <option value=\"\" />\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\nconst BootstrapInput = withStyles(theme => ({\r\n  root: {\r\n    'label + &': {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '1px solid #ced4da',\r\n    fontSize: 16,\r\n    padding: '10px 26px 10px 12px',\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:focus': {\r\n      borderRadius: 4,\r\n      borderColor: '#80bdff',\r\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function CustomizedSelects() {\r\n  const classes = useStyles();\r\n  const [age, setAge] = React.useState('');\r\n  const handleChange = event => {\r\n    setAge(event.target.value);\r\n  };\r\n  return (\r\n    <form className={classes.root} autoComplete=\"off\">\r\n      <FormControl className={classes.margin}>\r\n        <InputLabel htmlFor=\"age-customized-input\">Age</InputLabel>\r\n        <BootstrapInput id=\"age-customized-input\" />\r\n      </FormControl>\r\n      <FormControl className={classes.margin}>\r\n        <InputLabel htmlFor=\"age-customized-select\">Age</InputLabel>\r\n        <Select\r\n          value={age}\r\n          onChange={handleChange}\r\n          input={<BootstrapInput name=\"age\" id=\"age-customized-select\" />}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.margin}>\r\n        <InputLabel htmlFor=\"age-customized-native-simple\">Age</InputLabel>\r\n        <NativeSelect\r\n          value={age}\r\n          onChange={handleChange}\r\n          input={<BootstrapInput name=\"age\" id=\"age-customized-native-simple\" />}\r\n        >\r\n          <option value=\"\" />\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </NativeSelect>\r\n      </FormControl>\r\n    </form>\r\n  );\r\n}\r\n`;\r\nconst jsCode4 = `\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n    maxWidth: 300,\r\n  },\r\n  chips: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n  },\r\n  noLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst names = [\r\n  'Oliver Hansen',\r\n  'Van Henry',\r\n  'April Tucker',\r\n  'Ralph Hubbard',\r\n  'Omar Alexander',\r\n  'Carlos Abbott',\r\n  'Miriam Wagner',\r\n  'Bradley Wilkerson',\r\n  'Virginia Andrews',\r\n  'Kelly Snyder',\r\n];\r\n\r\nfunction getStyles(name, personName, theme) {\r\n  return {\r\n    fontWeight:\r\n      personName.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\nexport default function MultipleSelect() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [personName, setPersonName] = React.useState([]);\r\n\r\n  function handleChange(event) {\r\n    setPersonName(event.target.value);\r\n  }\r\n\r\n  function handleChangeMultiple(event) {\r\n    const { options } = event.target;\r\n    const value = [];\r\n    for (let i = 0, l = options.length; i < l; i += 1) {\r\n      if (options[i].selected) {\r\n        value.push(options[i].value);\r\n      }\r\n    }\r\n    setPersonName(value);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor=\"select-multiple\">Name</InputLabel>\r\n        <Select\r\n          multiple\r\n          value={personName}\r\n          onChange={handleChange}\r\n          input={<Input id=\"select-multiple\" />}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {names.map(name => (\r\n            <MenuItem key={name} value={name} style={getStyles(name, personName, theme)}>\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor=\"select-multiple-checkbox\">Tag</InputLabel>\r\n        <Select\r\n          multiple\r\n          value={personName}\r\n          onChange={handleChange}\r\n          input={<Input id=\"select-multiple-checkbox\" />}\r\n          renderValue={selected => selected.join(', ')}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {names.map(name => (\r\n            <MenuItem key={name} value={name}>\r\n              <Checkbox checked={personName.indexOf(name) > -1} />\r\n              <ListItemText primary={name} />\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor=\"select-multiple-chip\">Chip</InputLabel>\r\n        <Select\r\n          multiple\r\n          value={personName}\r\n          onChange={handleChange}\r\n          input={<Input id=\"select-multiple-chip\" />}\r\n          renderValue={selected => (\r\n            <div className={classes.chips}>\r\n              {selected.map(value => (\r\n                <Chip key={value} label={value} className={classes.chip} />\r\n              ))}\r\n            </div>\r\n          )}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {names.map(name => (\r\n            <MenuItem key={name} value={name} style={getStyles(name, personName, theme)}>\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={clsx(classes.formControl, classes.noLabel)}>\r\n        <Select\r\n          multiple\r\n          displayEmpty\r\n          value={personName}\r\n          onChange={handleChange}\r\n          input={<Input id=\"select-multiple-placeholder\" />}\r\n          renderValue={selected => {\r\n            if (selected.length === 0) {\r\n              return <em>Placeholder</em>;\r\n            }\r\n\r\n            return selected.join(', ');\r\n          }}\r\n          MenuProps={MenuProps}\r\n        >\r\n          <MenuItem disabled value=\"\">\r\n            <em>Placeholder</em>\r\n          </MenuItem>\r\n          {names.map(name => (\r\n            <MenuItem key={name} value={name} style={getStyles(name, personName, theme)}>\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel shrink htmlFor=\"select-multiple-native\">\r\n          Native\r\n        </InputLabel>\r\n        <Select\r\n          multiple\r\n          native\r\n          value={personName}\r\n          onChange={handleChangeMultiple}\r\n          inputProps={{\r\n            id: 'select-multiple-native',\r\n          }}\r\n        >\r\n          {names.map(name => (\r\n            <option key={name} value={name}>\r\n              {name}\r\n            </option>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode5 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    display: 'block',\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n}));\r\n\r\nexport default function ControlledOpenSelect() {\r\n  const classes = useStyles();\r\n  const [age, setAge] = React.useState('');\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleChange(event) {\r\n    setAge(event.target.value);\r\n  }\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  function handleOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  return (\r\n    <form autoComplete=\"off\">\r\n      <Button className={classes.button} onClick={handleOpen}>\r\n        Open the select\r\n      </Button>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor=\"demo-controlled-open-select\">Age</InputLabel>\r\n        <Select\r\n          open={open}\r\n          onClose={handleClose}\r\n          onOpen={handleOpen}\r\n          value={age}\r\n          onChange={handleChange}\r\n          inputProps={{\r\n            name: 'age',\r\n            id: 'demo-controlled-open-select',\r\n          }}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </form>\r\n  );\r\n}\r\n`;\r\nconst jsCode6 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n}));\r\n\r\nexport default function DialogSelect() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    open: false,\r\n    age: '',\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setState({ ...state, [name]: Number(event.target.value) });\r\n  };\r\n\r\n  function handleClickOpen() {\r\n    setState({ ...state, open: true });\r\n  }\r\n\r\n  function handleClose() {\r\n    setState({ ...state, open: false });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClickOpen}>Open select dialog</Button>\r\n      <Dialog disableBackdropClick disableEscapeKeyDown open={state.open} onClose={handleClose}>\r\n        <DialogTitle>Fill the form</DialogTitle>\r\n        <DialogContent>\r\n          <form className={classes.container}>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"age-native-simple\">Age</InputLabel>\r\n              <Select\r\n                native\r\n                value={state.age}\r\n                onChange={handleChange('age')}\r\n                input={<Input id=\"age-native-simple\" />}\r\n              >\r\n                <option value=\"\" />\r\n                <option value={10}>Ten</option>\r\n                <option value={20}>Twenty</option>\r\n                <option value={30}>Thirty</option>\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"age-simple\">Age</InputLabel>\r\n              <Select\r\n                value={state.age}\r\n                onChange={handleChange('age')}\r\n                input={<Input id=\"age-simple\" />}\r\n              >\r\n                <MenuItem value=\"\">\r\n                  <em>None</em>\r\n                </MenuItem>\r\n                <MenuItem value={10}>Ten</MenuItem>\r\n                <MenuItem value={20}>Twenty</MenuItem>\r\n                <MenuItem value={30}>Thirty</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </form>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n`;\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport {\r\n  Switch,\r\n  FormGroup,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormLabel,\r\n  FormHelperText,\r\n  Grid,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport {purple} from \"@material-ui/core/colors\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n// Example 4\r\nconst PurpleSwitch = withStyles({\r\n  switchBase: {\r\n    color: purple[300],\r\n    \"&$checked\": {\r\n      color: purple[500]\r\n    },\r\n    \"&$checked + $track\": {\r\n      backgroundColor: purple[500]\r\n    }\r\n  },\r\n  checked: {},\r\n  track: {}\r\n})(Switch);\r\n\r\nconst IOSSwitch = withStyles(theme => ({\r\n  root: {\r\n    width: 42,\r\n    height: 26,\r\n    padding: 0,\r\n    margin: theme.spacing(1)\r\n  },\r\n  switchBase: {\r\n    padding: 1,\r\n    \"&$checked\": {\r\n      transform: \"translateX(16px)\",\r\n      color: theme.palette.common.white,\r\n      \"& + $track\": {\r\n        backgroundColor: \"#52d869\",\r\n        opacity: 1,\r\n        border: \"none\"\r\n      }\r\n    },\r\n    \"&$focusVisible $thumb\": {\r\n      color: \"#52d869\",\r\n      border: \"6px solid #fff\"\r\n    }\r\n  },\r\n  thumb: {\r\n    width: 24,\r\n    height: 24\r\n  },\r\n  track: {\r\n    borderRadius: 26 / 2,\r\n    border: `1px solid ${theme.palette.grey[400]}`,\r\n    backgroundColor: theme.palette.grey[50],\r\n    opacity: 1,\r\n    transition: theme.transitions.create([\"background-color\", \"border\"])\r\n  },\r\n  checked: {},\r\n  focusVisible: {}\r\n}))(({ classes, ...props }) => {\r\n  return (\r\n    <Switch\r\n      focusVisibleClassName={classes.focusVisible}\r\n      disableRipple\r\n      classes={{\r\n        root: classes.root,\r\n        switchBase: classes.switchBase,\r\n        thumb: classes.thumb,\r\n        track: classes.track,\r\n        checked: classes.checked\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\n\r\nconst AntSwitch = withStyles(theme => ({\r\n  root: {\r\n    width: 28,\r\n    height: 16,\r\n    padding: 0,\r\n    display: \"flex\"\r\n  },\r\n  switchBase: {\r\n    padding: 2,\r\n    color: theme.palette.grey[500],\r\n    \"&$checked\": {\r\n      transform: \"translateX(12px)\",\r\n      color: theme.palette.common.white,\r\n      \"& + $track\": {\r\n        opacity: 1,\r\n        backgroundColor: theme.palette.primary.main,\r\n        borderColor: theme.palette.primary.main\r\n      }\r\n    }\r\n  },\r\n  thumb: {\r\n    width: 12,\r\n    height: 12,\r\n    boxShadow: \"none\"\r\n  },\r\n  track: {\r\n    border: `1px solid ${theme.palette.grey[500]}`,\r\n    borderRadius: 16 / 2,\r\n    opacity: 1,\r\n    backgroundColor: theme.palette.common.white\r\n  },\r\n  checked: {}\r\n}))(Switch);\r\n\r\nexport default function SwitchesExamplesPage() {\r\n  // Example 1\r\n  const [state, setState] = React.useState({\r\n    checkedA: true,\r\n    checkedB: true\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setState({ ...state, [name]: event.target.checked });\r\n  };\r\n\r\n  // Example 2\r\n  const [state2, setState2] = React.useState({\r\n    checkedA: true,\r\n    checkedB: true\r\n  });\r\n\r\n  const handleChange2 = name => event => {\r\n    setState2({ ...state2, [name]: event.target.checked });\r\n  };\r\n\r\n  // Example 3\r\n  const [state3, setState3] = React.useState({\r\n    gilad: true,\r\n    jason: false,\r\n    antoine: true\r\n  });\r\n\r\n  const handleChange3 = name => event => {\r\n    setState3({ ...state3, [name]: event.target.checked });\r\n  };\r\n\r\n  // Example 4\r\n  const [state4, setState4] = React.useState({\r\n    checkedA: true,\r\n    checkedB: true,\r\n    checkedC: true\r\n  });\r\n\r\n  const handleChange4 = name => event => {\r\n    setState4({ ...state4, [name]: event.target.checked });\r\n  };\r\n\r\n  // Example 5\r\n  const [value, setValue] = React.useState(\"female\");\r\n\r\n  function handleChange5(event) {\r\n    setValue(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>Switches toggle the state of a single setting on or off.</span>\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/switches/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode1}\r\n            beforeCodeTitle=\"Swithces\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span className=\"pb-3\">\r\n              <code>Switches</code> toggle the state of a single setting on or\r\n              off.\r\n            </span>\r\n            <div>\r\n              Switches are the preferred way to adjust settings on mobile. The\r\n              option that the switch controls, as well as the state it’s in,\r\n              should be made clear from the corresponding inline label.\r\n            </div>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <Switch\r\n                checked={state.checkedA}\r\n                onChange={handleChange(\"checkedA\")}\r\n                value=\"checkedA\"\r\n                inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n              />\r\n              <Switch\r\n                checked={state.checkedB}\r\n                onChange={handleChange(\"checkedB\")}\r\n                value=\"checkedB\"\r\n                color=\"primary\"\r\n                inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n              />\r\n              <Switch\r\n                value=\"checkedC\"\r\n                inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n              />\r\n              <Switch\r\n                disabled\r\n                value=\"checkedD\"\r\n                inputProps={{ \"aria-label\": \"disabled checkbox\" }}\r\n              />\r\n              <Switch\r\n                disabled\r\n                checked\r\n                value=\"checkedE\"\r\n                inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n              />\r\n              <Switch\r\n                defaultChecked\r\n                value=\"checkedF\"\r\n                color=\"default\"\r\n                inputProps={{ \"aria-label\": \"checkbox with default color\" }}\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode2}\r\n            beforeCodeTitle=\"Switches with FormControlLabel\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              <code>Switch</code> can also be used with a label description\r\n              thanks to the <code>FormControlLabel</code> component.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <FormGroup row>\r\n              <FormControlLabel\r\n                control={\r\n                  <Switch\r\n                    checked={state2.checkedA}\r\n                    onChange={handleChange2(\"checkedA\")}\r\n                    value=\"checkedA\"\r\n                  />\r\n                }\r\n                label=\"Secondary\"\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Switch\r\n                    checked={state2.checkedB}\r\n                    onChange={handleChange2(\"checkedB\")}\r\n                    value=\"checkedB\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"Primary\"\r\n              />\r\n              <FormControlLabel\r\n                control={<Switch value=\"checkedC\" />}\r\n                label=\"Uncontrolled\"\r\n              />\r\n              <FormControlLabel\r\n                disabled\r\n                control={<Switch value=\"checkedD\" />}\r\n                label=\"Disabled\"\r\n              />\r\n              <FormControlLabel\r\n                disabled\r\n                control={<Switch checked value=\"checkedE\" />}\r\n                label=\"Disabled\"\r\n              />\r\n            </FormGroup>\r\n          </KTCodeExample>\r\n          <KTCodeExample\r\n            jsCode={jsCode4}\r\n            beforeCodeTitle=\"Customized switches\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              Here are some examples of customizing the component. You can learn\r\n              more about this in the overrides documentation page.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <FormGroup>\r\n              <FormControlLabel\r\n                control={\r\n                  <PurpleSwitch\r\n                    checked={state4.checkedA}\r\n                    onChange={handleChange4(\"checkedA\")}\r\n                    value=\"checkedA\"\r\n                  />\r\n                }\r\n                label=\"Custom color\"\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <IOSSwitch\r\n                    checked={state4.checkedB}\r\n                    onChange={handleChange4(\"checkedB\")}\r\n                    value=\"checkedB\"\r\n                  />\r\n                }\r\n                label=\"iOS style\"\r\n              />\r\n              <Typography component=\"div\">\r\n                <Grid\r\n                  component=\"label\"\r\n                  container\r\n                  alignItems=\"center\"\r\n                  spacing={1}\r\n                >\r\n                  <Grid item>Off</Grid>\r\n                  <Grid item>\r\n                    <AntSwitch\r\n                      checked={state4.checkedC}\r\n                      onChange={handleChange4(\"checkedC\")}\r\n                      value=\"checkedC\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item>On</Grid>\r\n                </Grid>\r\n              </Typography>\r\n            </FormGroup>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode3}\r\n            beforeCodeTitle=\"Switches with FormGroup\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              <code>FormGroup</code> is a helpful wrapper used to group\r\n              selection controls components that provides an easier API.\r\n              However, we encourage you to use a <code>checkbox</code> instead.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <FormControl component=\"fieldset\">\r\n              <FormLabel component=\"legend\">Assign responsibility</FormLabel>\r\n              <FormGroup>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Switch\r\n                      checked={state3.gilad}\r\n                      onChange={handleChange3(\"gilad\")}\r\n                      value=\"gilad\"\r\n                    />\r\n                  }\r\n                  label=\"Gilad Gray\"\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Switch\r\n                      checked={state3.jason}\r\n                      onChange={handleChange3(\"jason\")}\r\n                      value=\"jason\"\r\n                    />\r\n                  }\r\n                  label=\"Jason Killian\"\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Switch\r\n                      checked={state3.antoine}\r\n                      onChange={handleChange3(\"antoine\")}\r\n                      value=\"antoine\"\r\n                    />\r\n                  }\r\n                  label=\"Antoine Llorca\"\r\n                />\r\n              </FormGroup>\r\n              <FormHelperText>Be careful</FormHelperText>\r\n            </FormControl>\r\n          </KTCodeExample>\r\n          <KTCodeExample\r\n            jsCode={jsCode5}\r\n            beforeCodeTitle=\"Label placement\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>You can change the placement of the label:</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <FormControl component=\"fieldset\">\r\n              <FormLabel component=\"legend\">labelPlacement</FormLabel>\r\n              <FormGroup\r\n                aria-label=\"position\"\r\n                name=\"position\"\r\n                value={value}\r\n                onChange={handleChange5}\r\n                row\r\n              >\r\n                <FormControlLabel\r\n                  value=\"top\"\r\n                  control={<Switch color=\"primary\" />}\r\n                  label=\"Top\"\r\n                  labelPlacement=\"top\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"start\"\r\n                  control={<Switch color=\"primary\" />}\r\n                  label=\"Start\"\r\n                  labelPlacement=\"start\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"bottom\"\r\n                  control={<Switch color=\"primary\" />}\r\n                  label=\"Bottom\"\r\n                  labelPlacement=\"bottom\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"end\"\r\n                  control={<Switch color=\"primary\" />}\r\n                  label=\"End\"\r\n                  labelPlacement=\"end\"\r\n                />\r\n              </FormGroup>\r\n            </FormControl>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nexport default function Switches() {\r\n  const [state, setState] = React.useState({\r\n    checkedA: true,\r\n    checkedB: true,\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setState({ ...state, [name]: event.target.checked });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Switch\r\n        checked={state.checkedA}\r\n        onChange={handleChange('checkedA')}\r\n        value=\"checkedA\"\r\n        inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n      />\r\n      <Switch\r\n        checked={state.checkedB}\r\n        onChange={handleChange('checkedB')}\r\n        value=\"checkedB\"\r\n        color=\"primary\"\r\n        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n      />\r\n      <Switch value=\"checkedC\" inputProps={{ 'aria-label': 'primary checkbox' }} />\r\n      <Switch disabled value=\"checkedD\" inputProps={{ 'aria-label': 'disabled checkbox' }} />\r\n      <Switch disabled checked value=\"checkedE\" inputProps={{ 'aria-label': 'primary checkbox' }} />\r\n      <Switch\r\n        defaultChecked\r\n        value=\"checkedF\"\r\n        color=\"default\"\r\n        inputProps={{ 'aria-label': 'checkbox with default color' }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nexport default function SwitchLabels() {\r\n  const [state, setState] = React.useState({\r\n    checkedA: true,\r\n    checkedB: true,\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setState({ ...state, [name]: event.target.checked });\r\n  };\r\n\r\n  return (\r\n    <FormGroup row>\r\n      <FormControlLabel\r\n        control={\r\n          <Switch checked={state.checkedA} onChange={handleChange('checkedA')} value=\"checkedA\" />\r\n        }\r\n        label=\"Secondary\"\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Switch\r\n            checked={state.checkedB}\r\n            onChange={handleChange('checkedB')}\r\n            value=\"checkedB\"\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"Primary\"\r\n      />\r\n      <FormControlLabel control={<Switch value=\"checkedC\" />} label=\"Uncontrolled\" />\r\n      <FormControlLabel disabled control={<Switch value=\"checkedD\" />} label=\"Disabled\" />\r\n      <FormControlLabel disabled control={<Switch checked value=\"checkedE\" />} label=\"Disabled\" />\r\n    </FormGroup>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nexport default function SwitchesGroup() {\r\n  const [state, setState] = React.useState({\r\n    gilad: true,\r\n    jason: false,\r\n    antoine: true,\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setState({ ...state, [name]: event.target.checked });\r\n  };\r\n\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <FormLabel component=\"legend\">Assign responsibility</FormLabel>\r\n      <FormGroup>\r\n        <FormControlLabel\r\n          control={<Switch checked={state.gilad} onChange={handleChange('gilad')} value=\"gilad\" />}\r\n          label=\"Gilad Gray\"\r\n        />\r\n        <FormControlLabel\r\n          control={<Switch checked={state.jason} onChange={handleChange('jason')} value=\"jason\" />}\r\n          label=\"Jason Killian\"\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Switch checked={state.antoine} onChange={handleChange('antoine')} value=\"antoine\" />\r\n          }\r\n          label=\"Antoine Llorca\"\r\n        />\r\n      </FormGroup>\r\n      <FormHelperText>Be careful</FormHelperText>\r\n    </FormControl>\r\n  );\r\n}\r\n`;\r\nconst jsCode4 = `\r\nimport React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { purple } from '@material-ui/core/colors';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst PurpleSwitch = withStyles({\r\n  switchBase: {\r\n    color: purple[300],\r\n    '&$checked': {\r\n      color: purple[500],\r\n    },\r\n    '&$checked + $track': {\r\n      backgroundColor: purple[500],\r\n    },\r\n  },\r\n  checked: {},\r\n  track: {},\r\n})(Switch);\r\n\r\nconst IOSSwitch = withStyles(theme => ({\r\n  root: {\r\n    width: 42,\r\n    height: 26,\r\n    padding: 0,\r\n    margin: theme.spacing(1),\r\n  },\r\n  switchBase: {\r\n    padding: 1,\r\n    '&$checked': {\r\n      transform: 'translateX(16px)',\r\n      color: theme.palette.common.white,\r\n      '& + $track': {\r\n        backgroundColor: '#52d869',\r\n        opacity: 1,\r\n        border: 'none',\r\n      },\r\n    },\r\n    '&$focusVisible $thumb': {\r\n      color: '#52d869',\r\n      border: '6px solid #fff',\r\n    },\r\n  },\r\n  thumb: {\r\n    width: 24,\r\n    height: 24,\r\n  },\r\n  track: {\r\n    borderRadius: 26 / 2,\r\n    border: \\`1px solid \\${theme.palette.grey[400]}\\`,\r\n    backgroundColor: theme.palette.grey[50],\r\n    opacity: 1,\r\n    transition: theme.transitions.create(['background-color', 'border']),\r\n  },\r\n  checked: {},\r\n  focusVisible: {},\r\n}))(({ classes, ...props }) => {\r\n  return (\r\n    <Switch\r\n      focusVisibleClassName={classes.focusVisible}\r\n      disableRipple\r\n      classes={{\r\n        root: classes.root,\r\n        switchBase: classes.switchBase,\r\n        thumb: classes.thumb,\r\n        track: classes.track,\r\n        checked: classes.checked,\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\n\r\nconst AntSwitch = withStyles(theme => ({\r\n  root: {\r\n    width: 28,\r\n    height: 16,\r\n    padding: 0,\r\n    display: 'flex',\r\n  },\r\n  switchBase: {\r\n    padding: 2,\r\n    color: theme.palette.grey[500],\r\n    '&$checked': {\r\n      transform: 'translateX(12px)',\r\n      color: theme.palette.common.white,\r\n      '& + $track': {\r\n        opacity: 1,\r\n        backgroundColor: theme.palette.primary.main,\r\n        borderColor: theme.palette.primary.main,\r\n      },\r\n    },\r\n  },\r\n  thumb: {\r\n    width: 12,\r\n    height: 12,\r\n    boxShadow: 'none',\r\n  },\r\n  track: {\r\n    border: \\`1px solid \\${theme.palette.grey[500]}\\`,\r\n    borderRadius: 16 / 2,\r\n    opacity: 1,\r\n    backgroundColor: theme.palette.common.white,\r\n  },\r\n  checked: {},\r\n}))(Switch);\r\n\r\nexport default function CustomizedSwitches() {\r\n  const [state, setState] = React.useState({\r\n    checkedA: true,\r\n    checkedB: true,\r\n    checkedC: true,\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setState({ ...state, [name]: event.target.checked });\r\n  };\r\n\r\n  return (\r\n    <FormGroup>\r\n      <FormControlLabel\r\n        control={\r\n          <PurpleSwitch\r\n            checked={state.checkedA}\r\n            onChange={handleChange('checkedA')}\r\n            value=\"checkedA\"\r\n          />\r\n        }\r\n        label=\"Custom color\"\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <IOSSwitch\r\n            checked={state.checkedB}\r\n            onChange={handleChange('checkedB')}\r\n            value=\"checkedB\"\r\n          />\r\n        }\r\n        label=\"iOS style\"\r\n      />\r\n      <Typography component=\"div\">\r\n        <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\r\n          <Grid item>Off</Grid>\r\n          <Grid item>\r\n            <AntSwitch\r\n              checked={state.checkedC}\r\n              onChange={handleChange('checkedC')}\r\n              value=\"checkedC\"\r\n            />\r\n          </Grid>\r\n          <Grid item>On</Grid>\r\n        </Grid>\r\n      </Typography>\r\n    </FormGroup>\r\n  );\r\n}\r\n`;\r\nconst jsCode5 = `\r\nimport React from 'react';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nfunction FormControlLabelPosition() {\r\n  const [value, setValue] = React.useState('female');\r\n\r\n  function handleChange(event) {\r\n    setValue(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <FormLabel component=\"legend\">labelPlacement</FormLabel>\r\n      <FormGroup aria-label=\"position\" name=\"position\" value={value} onChange={handleChange} row>\r\n        <FormControlLabel\r\n          value=\"top\"\r\n          control={<Switch color=\"primary\" />}\r\n          label=\"Top\"\r\n          labelPlacement=\"top\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"start\"\r\n          control={<Switch color=\"primary\" />}\r\n          label=\"Start\"\r\n          labelPlacement=\"start\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"bottom\"\r\n          control={<Switch color=\"primary\" />}\r\n          label=\"Bottom\"\r\n          labelPlacement=\"bottom\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"end\"\r\n          control={<Switch color=\"primary\" />}\r\n          label=\"End\"\r\n          labelPlacement=\"end\"\r\n        />\r\n      </FormGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nexport default FormControlLabelPosition;\r\n`;\r\n","/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  TextField,\r\n  MenuItem,\r\n  FormControl,\r\n  Input,\r\n  InputLabel,\r\n  FormHelperText,\r\n  OutlinedInput,\r\n  FilledInput,\r\n  InputBase,\r\n  Paper,\r\n  IconButton,\r\n  Divider,\r\n  InputAdornment,\r\n  Grid\r\n} from \"@material-ui/core\";\r\nimport {green} from \"@material-ui/core/colors\";\r\nimport {\r\n  fade,\r\n  withStyles,\r\n  makeStyles,\r\n  createMuiTheme\r\n} from \"@material-ui/core/styles\";\r\nimport {ThemeProvider} from \"@material-ui/styles\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n// Example 1\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200\r\n  },\r\n  dense: {\r\n    marginTop: 19\r\n  },\r\n  menu: {\r\n    width: 200\r\n  }\r\n}));\r\n\r\nconst currencies = [\r\n  {\r\n    value: \"USD\",\r\n    label: \"$\"\r\n  },\r\n  {\r\n    value: \"EUR\",\r\n    label: \"€\"\r\n  },\r\n  {\r\n    value: \"BTC\",\r\n    label: \"฿\"\r\n  },\r\n  {\r\n    value: \"JPY\",\r\n    label: \"¥\"\r\n  }\r\n];\r\n\r\n// Example 2\r\nconst useStyles2 = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  dense: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  menu: {\r\n    width: 200\r\n  }\r\n}));\r\n\r\n// Example 3\r\nconst useStyles3 = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  dense: {\r\n    marginTop: 16\r\n  },\r\n  menu: {\r\n    width: 200\r\n  }\r\n}));\r\n\r\n// Example 4\r\nconst useStyles4 = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\n// Example 5\r\nconst useStyles5 = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  input: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\n// Example 6\r\nconst useStyles6 = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200\r\n  }\r\n}));\r\n\r\n// Example 7\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    \"& label.Mui-focused\": {\r\n      color: \"green\"\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"green\"\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"red\"\r\n      },\r\n      \"&:hover fieldset\": {\r\n        borderColor: \"yellow\"\r\n      },\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"green\"\r\n      }\r\n    }\r\n  }\r\n})(TextField);\r\n\r\nconst BootstrapInput = withStyles(theme => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3)\r\n    }\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: theme.palette.common.white,\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    width: \"auto\",\r\n    padding: \"10px 12px\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"'\r\n    ].join(\",\"),\r\n    \"&:focus\": {\r\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\r\n      borderColor: theme.palette.primary.main\r\n    }\r\n  }\r\n}))(InputBase);\r\n\r\nconst useStylesReddit = makeStyles(theme => ({\r\n  root: {\r\n    border: \"1px solid #e2e2e1\",\r\n    overflow: \"hidden\",\r\n    borderRadius: 4,\r\n    backgroundColor: \"#fcfcfb\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    \"&:hover\": {\r\n      backgroundColor: \"#fff\"\r\n    },\r\n    \"&$focused\": {\r\n      backgroundColor: \"#fff\",\r\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\r\n      borderColor: theme.palette.primary.main\r\n    }\r\n  },\r\n  focused: {}\r\n}));\r\n\r\nfunction RedditTextField(props) {\r\n  const classes = useStylesReddit();\r\n\r\n  return (\r\n    <TextField InputProps={{ classes, disableUnderline: true }} {...props} />\r\n  );\r\n}\r\n\r\nconst useStyles7 = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst theme7 = createMuiTheme({\r\n  palette: {\r\n    primary: green\r\n  }\r\n});\r\n\r\n// Example 8\r\nconst useStyles8 = makeStyles({\r\n  root: {\r\n    padding: \"2px 4px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    width: 400\r\n  },\r\n  input: {\r\n    marginLeft: 8,\r\n    flex: 1\r\n  },\r\n  iconButton: {\r\n    padding: 10\r\n  },\r\n  divider: {\r\n    width: 1,\r\n    height: 28,\r\n    margin: 4\r\n  }\r\n});\r\n\r\n// Example 9\r\nconst ranges = [\r\n  {\r\n    value: \"0-20\",\r\n    label: \"0 to 20\"\r\n  },\r\n  {\r\n    value: \"21-50\",\r\n    label: \"21 to 50\"\r\n  },\r\n  {\r\n    value: \"51-100\",\r\n    label: \"51 to 100\"\r\n  }\r\n];\r\n\r\nconst useStyles9 = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  textField: {\r\n    flexBasis: 200\r\n  }\r\n}));\r\n\r\n// Example 10\r\nconst useStyles10 = makeStyles(theme => ({\r\n  margin: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\n// Example 11\r\nconst useStyles11 = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  textField: {\r\n    flexBasis: 200\r\n  }\r\n}));\r\n\r\n// Example 12\r\nconst useStyles12 = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  textField: {\r\n    flexBasis: 200\r\n  }\r\n}));\r\n\r\nexport default function TextFieldsExamplesPage() {\r\n  // Example 1\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    name: \"Cat in the Hat\",\r\n    age: \"\",\r\n    multiline: \"Controlled\",\r\n    currency: \"EUR\"\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  // Example 2\r\n  const classes2 = useStyles2();\r\n  const [values2, setValues2] = React.useState({\r\n    name: \"Cat in the Hat\",\r\n    age: \"\",\r\n    multiline: \"Controlled\",\r\n    currency: \"EUR\"\r\n  });\r\n\r\n  const handleChange2 = name => event => {\r\n    setValues2({ ...values2, [name]: event.target.value });\r\n  };\r\n\r\n  // Example 3\r\n  const classes3 = useStyles3();\r\n  const [values3, setValues3] = React.useState({\r\n    name: \"Cat in the Hat\",\r\n    age: \"\",\r\n    multiline: \"Controlled\",\r\n    currency: \"EUR\"\r\n  });\r\n\r\n  const handleChange3 = name => event => {\r\n    setValues3({ ...values3, [name]: event.target.value });\r\n  };\r\n\r\n  // Example 4\r\n  const [labelWidth4, setLabelWidth4] = React.useState(0);\r\n  const [name4, setName4] = React.useState(\"Composed TextField\");\r\n  const labelRef4 = React.useRef(null);\r\n  const classes4 = useStyles4();\r\n\r\n  React.useEffect(() => {\r\n    setLabelWidth4(labelRef4.current.offsetWidth);\r\n  }, []);\r\n\r\n  function handleChange4(event) {\r\n    setName4(event.target.value);\r\n  }\r\n\r\n  // Example 5\r\n  const classes5 = useStyles5();\r\n\r\n  // Example 6\r\n  const classes6 = useStyles6();\r\n\r\n  // Example 7\r\n  const classes7 = useStyles7();\r\n\r\n  // Example 8\r\n  const classes8 = useStyles8();\r\n\r\n  // Example 9\r\n  const classes9 = useStyles9();\r\n  const [values9, setValues9] = React.useState({\r\n    amount: \"\",\r\n    password: \"\",\r\n    weight: \"\",\r\n    weightRange: \"\",\r\n    showPassword: false\r\n  });\r\n\r\n  const handleChange9 = prop => event => {\r\n    setValues9({ ...values9, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword9 = () => {\r\n    setValues9({ ...values9, showPassword: !values9.showPassword });\r\n  };\r\n\r\n  // Example 10\r\n  const classes10 = useStyles10();\r\n\r\n  // Example 11\r\n  const classes11 = useStyles11();\r\n  const [values11, setValues11] = React.useState({\r\n    amount: \"\",\r\n    password: \"\",\r\n    weight: \"\",\r\n    weightRange: \"\",\r\n    showPassword: false\r\n  });\r\n\r\n  const handleChange11 = prop => event => {\r\n    setValues11({ ...values11, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword11 = () => {\r\n    setValues11({ ...values11, showPassword: !values11.showPassword });\r\n  };\r\n\r\n  // Example 12\r\n  const classes12 = useStyles12();\r\n  const [values12, setValues12] = React.useState({\r\n    amount: \"\",\r\n    password: \"\",\r\n    weight: \"\",\r\n    weightRange: \"\",\r\n    showPassword: false\r\n  });\r\n\r\n  const handleChange12 = prop => event => {\r\n    setValues12({ ...values12, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword12 = () => {\r\n    setValues({ ...values12, showPassword: !values12.showPassword });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>Text fields let users enter and edit text.</span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/text-fields/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode1}\r\n            beforeCodeTitle=\"TextField\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              The <code>TextField</code> wrapper component is a complete form\r\n              control including a label, input and help text.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\" />\r\n            <form className={classes.container} noValidate autoComplete=\"off\">\r\n              <TextField\r\n                id=\"standard-name\"\r\n                label=\"Name\"\r\n                className={classes.textField}\r\n                value={values.name}\r\n                onChange={handleChange(\"name\")}\r\n                margin=\"normal\"\r\n              />\r\n              <TextField\r\n                id=\"standard-uncontrolled\"\r\n                label=\"Uncontrolled\"\r\n                defaultValue=\"foo\"\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n              />\r\n              <TextField\r\n                required\r\n                id=\"standard-required\"\r\n                label=\"Required\"\r\n                defaultValue=\"Hello World\"\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n              />\r\n              <TextField\r\n                error\r\n                id=\"standard-error\"\r\n                label=\"Error\"\r\n                defaultValue=\"Hello World\"\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n              />\r\n              <TextField\r\n                disabled\r\n                id=\"standard-disabled\"\r\n                label=\"Disabled\"\r\n                defaultValue=\"Hello World\"\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n              />\r\n              <TextField\r\n                id=\"standard-password-input\"\r\n                label=\"Password\"\r\n                className={classes.textField}\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                margin=\"normal\"\r\n              />\r\n              <TextField\r\n                id=\"standard-read-only-input\"\r\n                label=\"Read Only\"\r\n                defaultValue=\"Hello World\"\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n                InputProps={{\r\n                  readOnly: true\r\n                }}\r\n              />\r\n              <TextField\r\n                id=\"standard-dense\"\r\n                label=\"Dense\"\r\n                className={clsx(classes.textField, classes.dense)}\r\n                margin=\"dense\"\r\n              />\r\n              <TextField\r\n                id=\"standard-multiline-flexible\"\r\n                label=\"Multiline\"\r\n                multiline\r\n                rowsMax=\"4\"\r\n                value={values.multiline}\r\n                onChange={handleChange(\"multiline\")}\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n              />\r\n              <TextField\r\n                id=\"standard-multiline-static\"\r\n                label=\"Multiline\"\r\n                multiline\r\n                rows=\"4\"\r\n                defaultValue=\"Default Value\"\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n              />\r\n              <TextField\r\n                id=\"standard-helperText\"\r\n                label=\"Helper text\"\r\n                defaultValue=\"Default Value\"\r\n                className={classes.textField}\r\n                helperText=\"Some important text\"\r\n                margin=\"normal\"\r\n              />\r\n              <TextField\r\n                id=\"standard-with-placeholder\"\r\n                label=\"With placeholder\"\r\n                placeholder=\"Placeholder\"\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n              />\r\n              <TextField\r\n                id=\"standard-textarea\"\r\n                label=\"With placeholder multiline\"\r\n                placeholder=\"Placeholder\"\r\n                multiline\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n              />\r\n              <TextField\r\n                id=\"standard-number\"\r\n                label=\"Number\"\r\n                value={values.age}\r\n                onChange={handleChange(\"age\")}\r\n                type=\"number\"\r\n                className={classes.textField}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                margin=\"normal\"\r\n              />\r\n              <TextField\r\n                id=\"standard-search\"\r\n                label=\"Search field\"\r\n                type=\"search\"\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n              />\r\n              <TextField\r\n                id=\"standard-select-currency\"\r\n                select\r\n                label=\"Select\"\r\n                className={classes.textField}\r\n                value={values.currency}\r\n                onChange={handleChange(\"currency\")}\r\n                SelectProps={{\r\n                  MenuProps: {\r\n                    className: classes.menu\r\n                  }\r\n                }}\r\n                helperText=\"Please select your currency\"\r\n                margin=\"normal\"\r\n              >\r\n                {currencies.map(option => (\r\n                  <MenuItem key={option.value} value={option.value}>\r\n                    {option.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n              <TextField\r\n                id=\"standard-select-currency-native\"\r\n                select\r\n                label=\"Native select\"\r\n                className={classes.textField}\r\n                value={values.currency}\r\n                onChange={handleChange(\"currency\")}\r\n                SelectProps={{\r\n                  native: true,\r\n                  MenuProps: {\r\n                    className: classes.menu\r\n                  }\r\n                }}\r\n                helperText=\"Please select your currency\"\r\n                margin=\"normal\"\r\n              >\r\n                {currencies.map(option => (\r\n                  <option key={option.value} value={option.value}>\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n              <TextField\r\n                id=\"standard-full-width\"\r\n                label=\"Label\"\r\n                style={{ margin: 8 }}\r\n                placeholder=\"Placeholder\"\r\n                helperText=\"Full width!\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n              />\r\n              <TextField\r\n                id=\"standard-bare\"\r\n                className={classes.textField}\r\n                defaultValue=\"Bare\"\r\n                margin=\"normal\"\r\n                inputProps={{ \"aria-label\": \"bare\" }}\r\n              />\r\n            </form>\r\n          </KTCodeExample>\r\n          <KTCodeExample\r\n            jsCode={jsCode3}\r\n            beforeCodeTitle=\"Filled\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              <code>TextField</code> supports filled styling.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <form className={classes3.container} noValidate autoComplete=\"off\">\r\n              <TextField\r\n                id=\"filled-name\"\r\n                label=\"Name\"\r\n                className={classes3.textField}\r\n                value={values3.name}\r\n                onChange={handleChange(\"name\")}\r\n                margin=\"normal\"\r\n                variant=\"filled\"\r\n              />\r\n              <TextField\r\n                id=\"filled-uncontrolled\"\r\n                label=\"Uncontrolled\"\r\n                defaultValue=\"foo\"\r\n                className={classes3.textField}\r\n                margin=\"normal\"\r\n                variant=\"filled\"\r\n              />\r\n              <TextField\r\n                required\r\n                id=\"filled-required\"\r\n                label=\"Required\"\r\n                defaultValue=\"Hello World\"\r\n                className={classes3.textField}\r\n                margin=\"normal\"\r\n                variant=\"filled\"\r\n              />\r\n              <TextField\r\n                error\r\n                id=\"filled-error\"\r\n                label=\"Error\"\r\n                defaultValue=\"Hello World\"\r\n                className={classes3.textField}\r\n                margin=\"normal\"\r\n                variant=\"filled\"\r\n              />\r\n              <TextField\r\n                disabled\r\n                id=\"filled-disabled\"\r\n                label=\"Disabled\"\r\n                defaultValue=\"Hello World\"\r\n                className={classes3.textField}\r\n                margin=\"normal\"\r\n                variant=\"filled\"\r\n              />\r\n              <TextField\r\n                id=\"filled-email-input\"\r\n                label=\"Email\"\r\n                className={classes3.textField}\r\n                type=\"email\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                margin=\"normal\"\r\n                variant=\"filled\"\r\n              />\r\n              <TextField\r\n                id=\"filled-password-input\"\r\n                label=\"Password\"\r\n                className={classes3.textField}\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                margin=\"normal\"\r\n                variant=\"filled\"\r\n              />\r\n              <TextField\r\n                id=\"filled-read-only-input\"\r\n                label=\"Read Only\"\r\n                defaultValue=\"Hello World\"\r\n                className={classes3.textField}\r\n                margin=\"normal\"\r\n                InputProps={{\r\n                  readOnly: true\r\n                }}\r\n                variant=\"filled\"\r\n              />\r\n              <TextField\r\n                id=\"filled-dense\"\r\n                label=\"Dense\"\r\n                className={clsx(classes3.textField, classes3.dense)}\r\n                margin=\"dense\"\r\n                variant=\"filled\"\r\n              />\r\n              <TextField\r\n                id=\"filled-dense-multiline\"\r\n                label=\"Dense multiline\"\r\n                className={clsx(classes3.textField, classes3.dense)}\r\n                margin=\"dense\"\r\n                variant=\"filled\"\r\n                multiline\r\n                rowsMax=\"4\"\r\n              />\r\n              <TextField\r\n                id=\"filled-multiline-flexible\"\r\n                label=\"Multiline\"\r\n                multiline\r\n                rowsMax=\"4\"\r\n                value={values3.multiline}\r\n                onChange={handleChange3(\"multiline\")}\r\n                className={classes3.textField}\r\n                margin=\"normal\"\r\n                helperText=\"hello\"\r\n                variant=\"filled\"\r\n              />\r\n              <TextField\r\n                id=\"filled-multiline-static\"\r\n                label=\"Multiline\"\r\n                multiline\r\n                rows=\"4\"\r\n                defaultValue=\"Default Value\"\r\n                className={classes3.textField}\r\n                margin=\"normal\"\r\n                variant=\"filled\"\r\n              />\r\n              <TextField\r\n                id=\"filled-helperText\"\r\n                label=\"Helper text\"\r\n                defaultValue=\"Default Value\"\r\n                className={classes3.textField}\r\n                helperText=\"Some important text\"\r\n                margin=\"normal\"\r\n                variant=\"filled\"\r\n              />\r\n              <TextField\r\n                id=\"filled-with-placeholder\"\r\n                label=\"With placeholder\"\r\n                placeholder=\"Placeholder\"\r\n                className={classes3.textField}\r\n                margin=\"normal\"\r\n                variant=\"filled\"\r\n              />\r\n              <TextField\r\n                id=\"filled-textarea\"\r\n                label=\"Multiline Placeholder\"\r\n                placeholder=\"Placeholder\"\r\n                multiline\r\n                className={classes3.textField}\r\n                margin=\"normal\"\r\n                variant=\"filled\"\r\n              />\r\n              <TextField\r\n                id=\"filled-number\"\r\n                label=\"Number\"\r\n                value={values3.age}\r\n                onChange={handleChange3(\"age\")}\r\n                type=\"number\"\r\n                className={classes3.textField}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                margin=\"normal\"\r\n                variant=\"filled\"\r\n              />\r\n              <TextField\r\n                id=\"filled-search\"\r\n                label=\"Search field\"\r\n                type=\"search\"\r\n                className={classes3.textField}\r\n                margin=\"normal\"\r\n                variant=\"filled\"\r\n              />\r\n              <TextField\r\n                id=\"filled-select-currency\"\r\n                select\r\n                label=\"Select\"\r\n                className={classes3.textField}\r\n                value={values3.currency}\r\n                onChange={handleChange3(\"currency\")}\r\n                SelectProps={{\r\n                  MenuProps: {\r\n                    className: classes3.menu\r\n                  }\r\n                }}\r\n                helperText=\"Please select your currency\"\r\n                margin=\"normal\"\r\n                variant=\"filled\"\r\n              >\r\n                {currencies.map(option => (\r\n                  <MenuItem key={option.value} value={option.value}>\r\n                    {option.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n              <TextField\r\n                id=\"filled-select-currency-native\"\r\n                select\r\n                label=\"Native select\"\r\n                className={classes3.textField}\r\n                value={values3.currency}\r\n                onChange={handleChange3(\"currency\")}\r\n                SelectProps={{\r\n                  native: true,\r\n                  MenuProps: {\r\n                    className: classes3.menu\r\n                  }\r\n                }}\r\n                helperText=\"Please select your currency\"\r\n                margin=\"normal\"\r\n                variant=\"filled\"\r\n              >\r\n                {currencies.map(option => (\r\n                  <option key={option.value} value={option.value}>\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n              <TextField\r\n                id=\"filled-full-width\"\r\n                label=\"Label\"\r\n                style={{ margin: 8 }}\r\n                placeholder=\"Placeholder\"\r\n                helperText=\"Full width!\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                variant=\"filled\"\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n              />\r\n              <TextField\r\n                id=\"filled-bare\"\r\n                className={classes3.textField}\r\n                defaultValue=\"Bare\"\r\n                margin=\"normal\"\r\n                variant=\"filled\"\r\n                inputProps={{ \"aria-label\": \"bare\" }}\r\n              />\r\n            </form>\r\n          </KTCodeExample>\r\n          <KTCodeExample\r\n            jsCode={jsCode5}\r\n            beforeCodeTitle=\"Inputs\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <div className={classes5.container}>\r\n              <Input\r\n                defaultValue=\"Hello world\"\r\n                className={classes5.input}\r\n                inputProps={{\r\n                  \"aria-label\": \"Description\"\r\n                }}\r\n              />\r\n              <Input\r\n                placeholder=\"Placeholder\"\r\n                className={classes5.input}\r\n                inputProps={{\r\n                  \"aria-label\": \"Description\"\r\n                }}\r\n              />\r\n              <Input\r\n                value=\"Disabled\"\r\n                className={classes5.input}\r\n                disabled\r\n                inputProps={{\r\n                  \"aria-label\": \"Description\"\r\n                }}\r\n              />\r\n              <Input\r\n                defaultValue=\"Error\"\r\n                className={classes5.input}\r\n                error\r\n                inputProps={{\r\n                  \"aria-label\": \"Description\"\r\n                }}\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n          <KTCodeExample\r\n            jsCode={jsCode7}\r\n            beforeCodeTitle=\"Customized inputs\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>Here are some examples of customizing the component.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes7.root}>\r\n              <CssTextField\r\n                className={classes7.margin}\r\n                id=\"custom-css-standard-input\"\r\n                label=\"Custom CSS\"\r\n              />\r\n              <CssTextField\r\n                className={classes7.margin}\r\n                label=\"Custom CSS\"\r\n                variant=\"outlined\"\r\n                id=\"custom-css-outlined-input\"\r\n              />\r\n              <ThemeProvider theme={theme7}>\r\n                <TextField\r\n                  className={classes7.margin}\r\n                  label=\"ThemeProvider\"\r\n                  id=\"mui-theme-provider-standard-input\"\r\n                />\r\n                <TextField\r\n                  className={classes7.margin}\r\n                  label=\"ThemeProvider\"\r\n                  variant=\"outlined\"\r\n                  id=\"mui-theme-provider-outlined-input\"\r\n                />\r\n              </ThemeProvider>\r\n              <FormControl className={classes7.margin}>\r\n                <InputLabel shrink htmlFor=\"bootstrap-input\">\r\n                  Bootstrap\r\n                </InputLabel>\r\n                <BootstrapInput\r\n                  defaultValue=\"react-bootstrap\"\r\n                  id=\"bootstrap-input\"\r\n                />\r\n              </FormControl>\r\n              <RedditTextField\r\n                label=\"Reddit\"\r\n                className={classes7.margin}\r\n                defaultValue=\"react-reddit\"\r\n                variant=\"filled\"\r\n                id=\"reddit-input\"\r\n              />\r\n              <InputBase\r\n                className={classes7.margin}\r\n                defaultValue=\"Naked input\"\r\n                inputProps={{ \"aria-label\": \"naked\" }}\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n          <KTCodeExample\r\n            jsCode={jsCode9}\r\n            beforeCodeTitle=\"Input Adornments\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              <code>Input</code> allows the provision of{\" \"}\r\n              <code>InputAdornment</code>. These can be used to add a prefix, a\r\n              suffix or an action to an input. For instance, you can use an icon\r\n              button to hide or reveal the password.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes9.root}>\r\n              <TextField\r\n                label=\"With normal TextField\"\r\n                id=\"simple-start-adornment\"\r\n                className={clsx(classes9.margin, classes9.textField)}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">Kg</InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n              <TextField\r\n                select\r\n                label=\"With Select\"\r\n                className={clsx(classes9.margin, classes9.textField)}\r\n                value={values9.weightRange}\r\n                onChange={handleChange9(\"weightRange\")}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">Kg</InputAdornment>\r\n                  )\r\n                }}\r\n              >\r\n                {ranges.map(option => (\r\n                  <MenuItem key={option.value} value={option.value}>\r\n                    {option.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n              <FormControl fullWidth className={classes9.margin}>\r\n                <InputLabel htmlFor=\"adornment-amount\">Amount</InputLabel>\r\n                <Input\r\n                  id=\"adornment-amount\"\r\n                  value={values9.amount}\r\n                  onChange={handleChange9(\"amount\")}\r\n                  startAdornment={\r\n                    <InputAdornment position=\"start\">$</InputAdornment>\r\n                  }\r\n                />\r\n              </FormControl>\r\n              <FormControl\r\n                className={clsx(\r\n                  classes9.margin,\r\n                  classes9.withoutLabel,\r\n                  classes9.textField\r\n                )}\r\n              >\r\n                <Input\r\n                  id=\"adornment-weight\"\r\n                  value={values9.weight}\r\n                  onChange={handleChange9(\"weight\")}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">Kg</InputAdornment>\r\n                  }\r\n                  aria-describedby=\"weight-helper-text\"\r\n                  inputProps={{\r\n                    \"aria-label\": \"Weight\"\r\n                  }}\r\n                />\r\n                <FormHelperText id=\"weight-helper-text\">Weight</FormHelperText>\r\n              </FormControl>\r\n              <FormControl\r\n                className={clsx(classes9.margin, classes9.textField)}\r\n              >\r\n                <InputLabel htmlFor=\"adornment-password\">Password</InputLabel>\r\n                <Input\r\n                  id=\"adornment-password\"\r\n                  type={values9.showPassword ? \"text\" : \"password\"}\r\n                  value={values9.password}\r\n                  onChange={handleChange9(\"password\")}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        aria-label=\"Toggle password visibility\"\r\n                        onClick={handleClickShowPassword9}\r\n                      >\r\n                        {values9.showPassword ? (\r\n                          <Visibility />\r\n                        ) : (\r\n                          <VisibilityOff />\r\n                        )}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                />\r\n              </FormControl>\r\n            </div>\r\n          </KTCodeExample>\r\n          <KTCodeExample\r\n            jsCode={jsCode11}\r\n            beforeCodeTitle=\"Filled Input Adornments\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            {\" \"}\r\n            <div className={classes11.root}>\r\n              <TextField\r\n                id=\"filled-simple-start-adornment\"\r\n                className={clsx(classes11.margin, classes11.textField)}\r\n                variant=\"filled\"\r\n                label=\"With filled TextField\"\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">Kg</InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n              <TextField\r\n                select\r\n                className={clsx(classes11.margin, classes11.textField)}\r\n                variant=\"filled\"\r\n                label=\"With Select\"\r\n                value={values11.weightRange}\r\n                onChange={handleChange11(\"weightRange\")}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">Kg</InputAdornment>\r\n                  )\r\n                }}\r\n              >\r\n                {ranges.map(option => (\r\n                  <MenuItem key={option.value} value={option.value}>\r\n                    {option.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n              <TextField\r\n                id=\"filled-adornment-amount\"\r\n                className={clsx(classes11.margin, classes11.textField)}\r\n                variant=\"filled\"\r\n                label=\"Amount\"\r\n                value={values11.amount}\r\n                onChange={handleChange11(\"amount\")}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">$</InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n              <TextField\r\n                id=\"filled-adornment-weight\"\r\n                className={clsx(classes11.margin, classes11.textField)}\r\n                variant=\"filled\"\r\n                label=\"Weight\"\r\n                value={values11.weight}\r\n                onChange={handleChange11(\"weight\")}\r\n                helperText=\"Weight\"\r\n                InputProps={{\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">Kg</InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n              <TextField\r\n                id=\"filled-adornment-password\"\r\n                className={clsx(classes11.margin, classes11.textField)}\r\n                variant=\"filled\"\r\n                type={values11.showPassword ? \"text\" : \"password\"}\r\n                label=\"Password\"\r\n                value={values11.password}\r\n                onChange={handleChange11(\"password\")}\r\n                InputProps={{\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        edge=\"end\"\r\n                        aria-label=\"Toggle password visibility\"\r\n                        onClick={handleClickShowPassword11}\r\n                      >\r\n                        {values11.showPassword ? (\r\n                          <VisibilityOff />\r\n                        ) : (\r\n                          <Visibility />\r\n                        )}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode2}\r\n            beforeCodeTitle=\"Outlined\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              <code>TextField</code> supports outlined styling.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <form className={classes2.container} noValidate autoComplete=\"off\">\r\n              <TextField\r\n                id=\"outlined-name\"\r\n                label=\"Name\"\r\n                className={classes2.textField}\r\n                value={values2.name}\r\n                onChange={handleChange2(\"name\")}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                id=\"outlined-uncontrolled\"\r\n                label=\"Uncontrolled\"\r\n                defaultValue=\"foo\"\r\n                className={classes2.textField}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                required\r\n                id=\"outlined-required\"\r\n                label=\"Required\"\r\n                defaultValue=\"Hello World\"\r\n                className={classes2.textField}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                error\r\n                id=\"outlined-error\"\r\n                label=\"Error\"\r\n                defaultValue=\"Hello World\"\r\n                className={classes2.textField}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                disabled\r\n                id=\"outlined-disabled\"\r\n                label=\"Disabled\"\r\n                defaultValue=\"Hello World\"\r\n                className={classes2.textField}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                id=\"outlined-email-input\"\r\n                label=\"Email\"\r\n                className={classes2.textField}\r\n                type=\"email\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                id=\"outlined-password-input\"\r\n                label=\"Password\"\r\n                className={classes2.textField}\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                id=\"outlined-read-only-input\"\r\n                label=\"Read Only\"\r\n                defaultValue=\"Hello World\"\r\n                className={classes2.textField}\r\n                margin=\"normal\"\r\n                InputProps={{\r\n                  readOnly: true\r\n                }}\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                id=\"outlined-dense\"\r\n                label=\"Dense\"\r\n                className={clsx(classes2.textField, classes2.dense)}\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                id=\"outlined-dense-multiline\"\r\n                label=\"Dense multiline\"\r\n                className={clsx(classes2.textField, classes2.dense)}\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                multiline\r\n                rowsMax=\"4\"\r\n              />\r\n              <TextField\r\n                id=\"outlined-multiline-flexible\"\r\n                label=\"Multiline\"\r\n                multiline\r\n                rowsMax=\"4\"\r\n                value={values2.multiline}\r\n                onChange={handleChange2(\"multiline\")}\r\n                className={classes2.textField}\r\n                margin=\"normal\"\r\n                helperText=\"hello\"\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                id=\"outlined-multiline-static\"\r\n                label=\"Multiline\"\r\n                multiline\r\n                rows=\"4\"\r\n                defaultValue=\"Default Value\"\r\n                className={classes2.textField}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                id=\"outlined-helperText\"\r\n                label=\"Helper text\"\r\n                defaultValue=\"Default Value\"\r\n                className={classes2.textField}\r\n                helperText=\"Some important text\"\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                id=\"outlined-with-placeholder\"\r\n                label=\"With placeholder\"\r\n                placeholder=\"Placeholder\"\r\n                className={classes2.textField}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                id=\"outlined-textarea\"\r\n                label=\"Multiline Placeholder\"\r\n                placeholder=\"Placeholder\"\r\n                multiline\r\n                className={classes2.textField}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                id=\"outlined-number\"\r\n                label=\"Number\"\r\n                value={values2.age}\r\n                onChange={handleChange2(\"age\")}\r\n                type=\"number\"\r\n                className={classes2.textField}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                id=\"outlined-search\"\r\n                label=\"Search field\"\r\n                type=\"search\"\r\n                className={classes2.textField}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                id=\"outlined-select-currency\"\r\n                select\r\n                label=\"Select\"\r\n                className={classes2.textField}\r\n                value={values2.currency}\r\n                onChange={handleChange2(\"currency\")}\r\n                SelectProps={{\r\n                  MenuProps: {\r\n                    className: classes2.menu\r\n                  }\r\n                }}\r\n                helperText=\"Please select your currency\"\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n              >\r\n                {currencies.map(option => (\r\n                  <MenuItem key={option.value} value={option.value}>\r\n                    {option.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n              <TextField\r\n                id=\"outlined-select-currency-native\"\r\n                select\r\n                label=\"Native select\"\r\n                className={classes2.textField}\r\n                value={values2.currency}\r\n                onChange={handleChange(\"currency\")}\r\n                SelectProps={{\r\n                  native: true,\r\n                  MenuProps: {\r\n                    className: classes2.menu\r\n                  }\r\n                }}\r\n                helperText=\"Please select your currency\"\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n              >\r\n                {currencies.map(option => (\r\n                  <option key={option.value} value={option.value}>\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n              <TextField\r\n                id=\"outlined-full-width\"\r\n                label=\"Label\"\r\n                style={{ margin: 8 }}\r\n                placeholder=\"Placeholder\"\r\n                helperText=\"Full width!\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n              />\r\n              <TextField\r\n                id=\"outlined-bare\"\r\n                className={classes2.textField}\r\n                defaultValue=\"Bare\"\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                inputProps={{ \"aria-label\": \"bare\" }}\r\n              />\r\n            </form>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode4}\r\n            beforeCodeTitle=\"Components\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              <code>TextField</code> is composed of smaller components ({\" \"}\r\n              <code>FormControl</code>, <code>Input</code>,{\" \"}\r\n              <code>FilledInput</code>, <code>InputLabel</code>,{\" \"}\r\n              <code>OutlinedInput</code>, and <code>FormHelperText</code> ) that\r\n              you can leverage directly to significantly customize your form\r\n              inputs.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes4.container}>\r\n              <FormControl className={classes4.formControl}>\r\n                <InputLabel htmlFor=\"component-simple\">Name</InputLabel>\r\n                <Input\r\n                  id=\"component-simple\"\r\n                  value={name4}\r\n                  onChange={handleChange4}\r\n                />\r\n              </FormControl>\r\n              <FormControl className={classes4.formControl}>\r\n                <InputLabel htmlFor=\"component-helper\">Name</InputLabel>\r\n                <Input\r\n                  id=\"component-helper\"\r\n                  value={name4}\r\n                  onChange={handleChange4}\r\n                  aria-describedby=\"component-helper-text\"\r\n                />\r\n                <FormHelperText id=\"component-helper-text\">\r\n                  Some important helper text\r\n                </FormHelperText>\r\n              </FormControl>\r\n              <FormControl className={classes4.formControl} disabled>\r\n                <InputLabel htmlFor=\"component-disabled\">Name</InputLabel>\r\n                <Input\r\n                  id=\"component-disabled\"\r\n                  value={name4}\r\n                  onChange={handleChange4}\r\n                />\r\n                <FormHelperText>Disabled</FormHelperText>\r\n              </FormControl>\r\n              <FormControl className={classes4.formControl} error>\r\n                <InputLabel htmlFor=\"component-error\">Name</InputLabel>\r\n                <Input\r\n                  id=\"component-error\"\r\n                  value={name4}\r\n                  onChange={handleChange4}\r\n                  aria-describedby=\"component-error-text\"\r\n                />\r\n                <FormHelperText id=\"component-error-text\">Error</FormHelperText>\r\n              </FormControl>\r\n              <FormControl className={classes4.formControl} variant=\"outlined\">\r\n                <InputLabel ref={labelRef4} htmlFor=\"component-outlined\">\r\n                  Name\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"component-outlined\"\r\n                  value={name4}\r\n                  onChange={handleChange4}\r\n                  labelWidth={labelWidth4}\r\n                />\r\n              </FormControl>\r\n              <FormControl className={classes4.formControl} variant=\"filled\">\r\n                <InputLabel htmlFor=\"component-filled\">Name</InputLabel>\r\n                <FilledInput\r\n                  id=\"component-filled\"\r\n                  value={name4}\r\n                  onChange={handleChange4}\r\n                />\r\n              </FormControl>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode6}\r\n            beforeCodeTitle=\"Layout\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              <code>TextField</code>, <code>FormControl</code> allow the\r\n              specification of <code>margin</code> to alter the vertical spacing\r\n              of inputs. Using <code>none</code> (default) will not apply\r\n              margins to the <code>FormControl</code>, whereas{\" \"}\r\n              <code>dense</code> and <code>normal</code> will as well as alter\r\n              other styles to meet the specification.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes6.container}>\r\n              <TextField\r\n                label=\"None\"\r\n                id=\"margin-none\"\r\n                defaultValue=\"Default Value\"\r\n                className={classes6.textField}\r\n                helperText=\"Some important text\"\r\n              />\r\n              <TextField\r\n                label=\"Dense\"\r\n                id=\"margin-dense\"\r\n                defaultValue=\"Default Value\"\r\n                className={classes6.textField}\r\n                helperText=\"Some important text\"\r\n                margin=\"dense\"\r\n              />\r\n              <TextField\r\n                label=\"Normal\"\r\n                id=\"margin-normal\"\r\n                defaultValue=\"Default Value\"\r\n                className={classes6.textField}\r\n                helperText=\"Some important text\"\r\n                margin=\"normal\"\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode8}\r\n            beforeCodeTitle=\"Customized inputs using InputBase\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              Customization does not stop at CSS, you can use composition to\r\n              build custom components and give your app a unique feel. Below is\r\n              an example using the <code>InputBase</code> component, inspired by\r\n              Google Maps.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <Paper className={classes8.root}>\r\n              <IconButton className={classes8.iconButton} aria-label=\"Menu\">\r\n                <i className=\"flaticon-layer\"></i>\r\n              </IconButton>\r\n              <InputBase\r\n                className={classes8.input}\r\n                placeholder=\"Search Google Maps\"\r\n                inputProps={{ \"aria-label\": \"Search Google Maps\" }}\r\n              />\r\n              <IconButton className={classes8.iconButton} aria-label=\"Search\">\r\n                <i className=\"flaticon-search\"></i>\r\n              </IconButton>\r\n              <Divider className={classes8.divider} />\r\n              <IconButton\r\n                color=\"primary\"\r\n                className={classes8.iconButton}\r\n                aria-label=\"Directions\"\r\n              >\r\n                <i className=\"fa fa-chevron-circle-right\"></i>\r\n              </IconButton>\r\n            </Paper>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode10}\r\n            beforeCodeTitle=\"With icon\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>Icons can be specified as prepended or appended.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <FormControl className={classes10.margin}>\r\n                <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                  With a start adornment\r\n                </InputLabel>\r\n                <Input\r\n                  id=\"input-with-icon-adornment\"\r\n                  startAdornment={\r\n                    <InputAdornment position=\"start\">\r\n                      <AccountCircle />\r\n                    </InputAdornment>\r\n                  }\r\n                />\r\n              </FormControl>\r\n              <TextField\r\n                className={classes10.margin}\r\n                id=\"input-with-icon-textfield\"\r\n                label=\"TextField\"\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <AccountCircle />\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n              <div className={classes10.margin}>\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                  <Grid item>\r\n                    <AccountCircle />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <TextField id=\"input-with-icon-grid\" label=\"With a grid\" />\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode12}\r\n            beforeCodeTitle=\"Outlined Input Adornments\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <div className={classes12.root}>\r\n              <TextField\r\n                id=\"outlined-simple-start-adornment\"\r\n                className={clsx(classes12.margin, classes12.textField)}\r\n                variant=\"outlined\"\r\n                label=\"With outlined TextField\"\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">Kg</InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n              <TextField\r\n                select\r\n                className={clsx(classes12.margin, classes12.textField)}\r\n                variant=\"outlined\"\r\n                label=\"With Select\"\r\n                value={values12.weightRange}\r\n                onChange={handleChange12(\"weightRange\")}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">Kg</InputAdornment>\r\n                  )\r\n                }}\r\n              >\r\n                {ranges.map(option => (\r\n                  <MenuItem key={option.value} value={option.value}>\r\n                    {option.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n              <TextField\r\n                id=\"outlined-adornment-amount\"\r\n                className={clsx(classes12.margin, classes12.textField)}\r\n                variant=\"outlined\"\r\n                label=\"Amount\"\r\n                value={values12.amount}\r\n                onChange={handleChange12(\"amount\")}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">$</InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n              <TextField\r\n                id=\"outlined-adornment-weight\"\r\n                className={clsx(classes12.margin, classes12.textField)}\r\n                variant=\"outlined\"\r\n                label=\"Weight\"\r\n                value={values12.weight}\r\n                onChange={handleChange12(\"weight\")}\r\n                helperText=\"Weight\"\r\n                InputProps={{\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">Kg</InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n              <TextField\r\n                id=\"outlined-adornment-password\"\r\n                className={clsx(classes12.margin, classes12.textField)}\r\n                variant=\"outlined\"\r\n                type={values12.showPassword ? \"text\" : \"password\"}\r\n                label=\"Password\"\r\n                value={values12.password}\r\n                onChange={handleChange12(\"password\")}\r\n                InputProps={{\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        edge=\"end\"\r\n                        aria-label=\"Toggle password visibility\"\r\n                        onClick={handleClickShowPassword12}\r\n                      >\r\n                        {values12.showPassword ? (\r\n                          <VisibilityOff />\r\n                        ) : (\r\n                          <Visibility />\r\n                        )}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n  dense: {\r\n    marginTop: 19,\r\n  },\r\n  menu: {\r\n    width: 200,\r\n  },\r\n}));\r\n\r\nconst currencies = [\r\n  {\r\n    value: 'USD',\r\n    label: '$',\r\n  },\r\n  {\r\n    value: 'EUR',\r\n    label: '€',\r\n  },\r\n  {\r\n    value: 'BTC',\r\n    label: '฿',\r\n  },\r\n  {\r\n    value: 'JPY',\r\n    label: '¥',\r\n  },\r\n];\r\n\r\nexport default function TextFields() {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    name: 'Cat in the Hat',\r\n    age: '',\r\n    multiline: 'Controlled',\r\n    currency: 'EUR',\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  return (\r\n    <form className={classes.container} noValidate autoComplete=\"off\">\r\n      <TextField\r\n        id=\"standard-name\"\r\n        label=\"Name\"\r\n        className={classes.textField}\r\n        value={values.name}\r\n        onChange={handleChange('name')}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"standard-uncontrolled\"\r\n        label=\"Uncontrolled\"\r\n        defaultValue=\"foo\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        required\r\n        id=\"standard-required\"\r\n        label=\"Required\"\r\n        defaultValue=\"Hello World\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        error\r\n        id=\"standard-error\"\r\n        label=\"Error\"\r\n        defaultValue=\"Hello World\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        disabled\r\n        id=\"standard-disabled\"\r\n        label=\"Disabled\"\r\n        defaultValue=\"Hello World\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"standard-password-input\"\r\n        label=\"Password\"\r\n        className={classes.textField}\r\n        type=\"password\"\r\n        autoComplete=\"current-password\"\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"standard-read-only-input\"\r\n        label=\"Read Only\"\r\n        defaultValue=\"Hello World\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        InputProps={{\r\n          readOnly: true,\r\n        }}\r\n      />\r\n      <TextField\r\n        id=\"standard-dense\"\r\n        label=\"Dense\"\r\n        className={clsx(classes.textField, classes.dense)}\r\n        margin=\"dense\"\r\n      />\r\n      <TextField\r\n        id=\"standard-multiline-flexible\"\r\n        label=\"Multiline\"\r\n        multiline\r\n        rowsMax=\"4\"\r\n        value={values.multiline}\r\n        onChange={handleChange('multiline')}\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"standard-multiline-static\"\r\n        label=\"Multiline\"\r\n        multiline\r\n        rows=\"4\"\r\n        defaultValue=\"Default Value\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"standard-helperText\"\r\n        label=\"Helper text\"\r\n        defaultValue=\"Default Value\"\r\n        className={classes.textField}\r\n        helperText=\"Some important text\"\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"standard-with-placeholder\"\r\n        label=\"With placeholder\"\r\n        placeholder=\"Placeholder\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"standard-textarea\"\r\n        label=\"With placeholder multiline\"\r\n        placeholder=\"Placeholder\"\r\n        multiline\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"standard-number\"\r\n        label=\"Number\"\r\n        value={values.age}\r\n        onChange={handleChange('age')}\r\n        type=\"number\"\r\n        className={classes.textField}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"standard-search\"\r\n        label=\"Search field\"\r\n        type=\"search\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        id=\"standard-select-currency\"\r\n        select\r\n        label=\"Select\"\r\n        className={classes.textField}\r\n        value={values.currency}\r\n        onChange={handleChange('currency')}\r\n        SelectProps={{\r\n          MenuProps: {\r\n            className: classes.menu,\r\n          },\r\n        }}\r\n        helperText=\"Please select your currency\"\r\n        margin=\"normal\"\r\n      >\r\n        {currencies.map(option => (\r\n          <MenuItem key={option.value} value={option.value}>\r\n            {option.label}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        id=\"standard-select-currency-native\"\r\n        select\r\n        label=\"Native select\"\r\n        className={classes.textField}\r\n        value={values.currency}\r\n        onChange={handleChange('currency')}\r\n        SelectProps={{\r\n          native: true,\r\n          MenuProps: {\r\n            className: classes.menu,\r\n          },\r\n        }}\r\n        helperText=\"Please select your currency\"\r\n        margin=\"normal\"\r\n      >\r\n        {currencies.map(option => (\r\n          <option key={option.value} value={option.value}>\r\n            {option.label}\r\n          </option>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        id=\"standard-full-width\"\r\n        label=\"Label\"\r\n        style={{ margin: 8 }}\r\n        placeholder=\"Placeholder\"\r\n        helperText=\"Full width!\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n      />\r\n      <TextField\r\n        id=\"standard-bare\"\r\n        className={classes.textField}\r\n        defaultValue=\"Bare\"\r\n        margin=\"normal\"\r\n        inputProps={{ 'aria-label': 'bare' }}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst currencies = [\r\n  {\r\n    value: 'USD',\r\n    label: '$',\r\n  },\r\n  {\r\n    value: 'EUR',\r\n    label: '€',\r\n  },\r\n  {\r\n    value: 'BTC',\r\n    label: '฿',\r\n  },\r\n  {\r\n    value: 'JPY',\r\n    label: '¥',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  dense: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  menu: {\r\n    width: 200,\r\n  },\r\n}));\r\n\r\nexport default function OutlinedTextFields() {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    name: 'Cat in the Hat',\r\n    age: '',\r\n    multiline: 'Controlled',\r\n    currency: 'EUR',\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  return (\r\n    <form className={classes.container} noValidate autoComplete=\"off\">\r\n      <TextField\r\n        id=\"outlined-name\"\r\n        label=\"Name\"\r\n        className={classes.textField}\r\n        value={values.name}\r\n        onChange={handleChange('name')}\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        id=\"outlined-uncontrolled\"\r\n        label=\"Uncontrolled\"\r\n        defaultValue=\"foo\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        required\r\n        id=\"outlined-required\"\r\n        label=\"Required\"\r\n        defaultValue=\"Hello World\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        error\r\n        id=\"outlined-error\"\r\n        label=\"Error\"\r\n        defaultValue=\"Hello World\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        disabled\r\n        id=\"outlined-disabled\"\r\n        label=\"Disabled\"\r\n        defaultValue=\"Hello World\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        id=\"outlined-email-input\"\r\n        label=\"Email\"\r\n        className={classes.textField}\r\n        type=\"email\"\r\n        name=\"email\"\r\n        autoComplete=\"email\"\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        id=\"outlined-password-input\"\r\n        label=\"Password\"\r\n        className={classes.textField}\r\n        type=\"password\"\r\n        autoComplete=\"current-password\"\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        id=\"outlined-read-only-input\"\r\n        label=\"Read Only\"\r\n        defaultValue=\"Hello World\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        InputProps={{\r\n          readOnly: true,\r\n        }}\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        id=\"outlined-dense\"\r\n        label=\"Dense\"\r\n        className={clsx(classes.textField, classes.dense)}\r\n        margin=\"dense\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        id=\"outlined-dense-multiline\"\r\n        label=\"Dense multiline\"\r\n        className={clsx(classes.textField, classes.dense)}\r\n        margin=\"dense\"\r\n        variant=\"outlined\"\r\n        multiline\r\n        rowsMax=\"4\"\r\n      />\r\n      <TextField\r\n        id=\"outlined-multiline-flexible\"\r\n        label=\"Multiline\"\r\n        multiline\r\n        rowsMax=\"4\"\r\n        value={values.multiline}\r\n        onChange={handleChange('multiline')}\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        helperText=\"hello\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        id=\"outlined-multiline-static\"\r\n        label=\"Multiline\"\r\n        multiline\r\n        rows=\"4\"\r\n        defaultValue=\"Default Value\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        id=\"outlined-helperText\"\r\n        label=\"Helper text\"\r\n        defaultValue=\"Default Value\"\r\n        className={classes.textField}\r\n        helperText=\"Some important text\"\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        id=\"outlined-with-placeholder\"\r\n        label=\"With placeholder\"\r\n        placeholder=\"Placeholder\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        id=\"outlined-textarea\"\r\n        label=\"Multiline Placeholder\"\r\n        placeholder=\"Placeholder\"\r\n        multiline\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        id=\"outlined-number\"\r\n        label=\"Number\"\r\n        value={values.age}\r\n        onChange={handleChange('age')}\r\n        type=\"number\"\r\n        className={classes.textField}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        id=\"outlined-search\"\r\n        label=\"Search field\"\r\n        type=\"search\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        id=\"outlined-select-currency\"\r\n        select\r\n        label=\"Select\"\r\n        className={classes.textField}\r\n        value={values.currency}\r\n        onChange={handleChange('currency')}\r\n        SelectProps={{\r\n          MenuProps: {\r\n            className: classes.menu,\r\n          },\r\n        }}\r\n        helperText=\"Please select your currency\"\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      >\r\n        {currencies.map(option => (\r\n          <MenuItem key={option.value} value={option.value}>\r\n            {option.label}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        id=\"outlined-select-currency-native\"\r\n        select\r\n        label=\"Native select\"\r\n        className={classes.textField}\r\n        value={values.currency}\r\n        onChange={handleChange('currency')}\r\n        SelectProps={{\r\n          native: true,\r\n          MenuProps: {\r\n            className: classes.menu,\r\n          },\r\n        }}\r\n        helperText=\"Please select your currency\"\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      >\r\n        {currencies.map(option => (\r\n          <option key={option.value} value={option.value}>\r\n            {option.label}\r\n          </option>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        id=\"outlined-full-width\"\r\n        label=\"Label\"\r\n        style={{ margin: 8 }}\r\n        placeholder=\"Placeholder\"\r\n        helperText=\"Full width!\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n      />\r\n      <TextField\r\n        id=\"outlined-bare\"\r\n        className={classes.textField}\r\n        defaultValue=\"Bare\"\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n        inputProps={{ 'aria-label': 'bare' }}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst currencies = [\r\n  {\r\n    value: 'USD',\r\n    label: '$',\r\n  },\r\n  {\r\n    value: 'EUR',\r\n    label: '€',\r\n  },\r\n  {\r\n    value: 'BTC',\r\n    label: '฿',\r\n  },\r\n  {\r\n    value: 'JPY',\r\n    label: '¥',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  dense: {\r\n    marginTop: 16,\r\n  },\r\n  menu: {\r\n    width: 200,\r\n  },\r\n}));\r\n\r\nexport default function FilledTextFields() {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    name: 'Cat in the Hat',\r\n    age: '',\r\n    multiline: 'Controlled',\r\n    currency: 'EUR',\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  return (\r\n    <form className={classes.container} noValidate autoComplete=\"off\">\r\n      <TextField\r\n        id=\"filled-name\"\r\n        label=\"Name\"\r\n        className={classes.textField}\r\n        value={values.name}\r\n        onChange={handleChange('name')}\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        id=\"filled-uncontrolled\"\r\n        label=\"Uncontrolled\"\r\n        defaultValue=\"foo\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        required\r\n        id=\"filled-required\"\r\n        label=\"Required\"\r\n        defaultValue=\"Hello World\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        error\r\n        id=\"filled-error\"\r\n        label=\"Error\"\r\n        defaultValue=\"Hello World\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        disabled\r\n        id=\"filled-disabled\"\r\n        label=\"Disabled\"\r\n        defaultValue=\"Hello World\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        id=\"filled-email-input\"\r\n        label=\"Email\"\r\n        className={classes.textField}\r\n        type=\"email\"\r\n        name=\"email\"\r\n        autoComplete=\"email\"\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        id=\"filled-password-input\"\r\n        label=\"Password\"\r\n        className={classes.textField}\r\n        type=\"password\"\r\n        autoComplete=\"current-password\"\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        id=\"filled-read-only-input\"\r\n        label=\"Read Only\"\r\n        defaultValue=\"Hello World\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        InputProps={{\r\n          readOnly: true,\r\n        }}\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        id=\"filled-dense\"\r\n        label=\"Dense\"\r\n        className={clsx(classes.textField, classes.dense)}\r\n        margin=\"dense\"\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        id=\"filled-dense-multiline\"\r\n        label=\"Dense multiline\"\r\n        className={clsx(classes.textField, classes.dense)}\r\n        margin=\"dense\"\r\n        variant=\"filled\"\r\n        multiline\r\n        rowsMax=\"4\"\r\n      />\r\n      <TextField\r\n        id=\"filled-multiline-flexible\"\r\n        label=\"Multiline\"\r\n        multiline\r\n        rowsMax=\"4\"\r\n        value={values.multiline}\r\n        onChange={handleChange('multiline')}\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        helperText=\"hello\"\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        id=\"filled-multiline-static\"\r\n        label=\"Multiline\"\r\n        multiline\r\n        rows=\"4\"\r\n        defaultValue=\"Default Value\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        id=\"filled-helperText\"\r\n        label=\"Helper text\"\r\n        defaultValue=\"Default Value\"\r\n        className={classes.textField}\r\n        helperText=\"Some important text\"\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        id=\"filled-with-placeholder\"\r\n        label=\"With placeholder\"\r\n        placeholder=\"Placeholder\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        id=\"filled-textarea\"\r\n        label=\"Multiline Placeholder\"\r\n        placeholder=\"Placeholder\"\r\n        multiline\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        id=\"filled-number\"\r\n        label=\"Number\"\r\n        value={values.age}\r\n        onChange={handleChange('age')}\r\n        type=\"number\"\r\n        className={classes.textField}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        id=\"filled-search\"\r\n        label=\"Search field\"\r\n        type=\"search\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      />\r\n      <TextField\r\n        id=\"filled-select-currency\"\r\n        select\r\n        label=\"Select\"\r\n        className={classes.textField}\r\n        value={values.currency}\r\n        onChange={handleChange('currency')}\r\n        SelectProps={{\r\n          MenuProps: {\r\n            className: classes.menu,\r\n          },\r\n        }}\r\n        helperText=\"Please select your currency\"\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      >\r\n        {currencies.map(option => (\r\n          <MenuItem key={option.value} value={option.value}>\r\n            {option.label}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        id=\"filled-select-currency-native\"\r\n        select\r\n        label=\"Native select\"\r\n        className={classes.textField}\r\n        value={values.currency}\r\n        onChange={handleChange('currency')}\r\n        SelectProps={{\r\n          native: true,\r\n          MenuProps: {\r\n            className: classes.menu,\r\n          },\r\n        }}\r\n        helperText=\"Please select your currency\"\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n      >\r\n        {currencies.map(option => (\r\n          <option key={option.value} value={option.value}>\r\n            {option.label}\r\n          </option>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        id=\"filled-full-width\"\r\n        label=\"Label\"\r\n        style={{ margin: 8 }}\r\n        placeholder=\"Placeholder\"\r\n        helperText=\"Full width!\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n      />\r\n      <TextField\r\n        id=\"filled-bare\"\r\n        className={classes.textField}\r\n        defaultValue=\"Bare\"\r\n        margin=\"normal\"\r\n        variant=\"filled\"\r\n        inputProps={{ 'aria-label': 'bare' }}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n`;\r\nconst jsCode4 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FilledInput from '@material-ui/core/FilledInput';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function ComposedTextField() {\r\n  const [labelWidth, setLabelWidth] = React.useState(0);\r\n  const [name, setName] = React.useState('Composed TextField');\r\n  const labelRef = React.useRef(null);\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(() => {\r\n    setLabelWidth(labelRef.current.offsetWidth);\r\n  }, []);\r\n\r\n  function handleChange(event) {\r\n    setName(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor=\"component-simple\">Name</InputLabel>\r\n        <Input id=\"component-simple\" value={name} onChange={handleChange} />\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor=\"component-helper\">Name</InputLabel>\r\n        <Input\r\n          id=\"component-helper\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          aria-describedby=\"component-helper-text\"\r\n        />\r\n        <FormHelperText id=\"component-helper-text\">Some important helper text</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl} disabled>\r\n        <InputLabel htmlFor=\"component-disabled\">Name</InputLabel>\r\n        <Input id=\"component-disabled\" value={name} onChange={handleChange} />\r\n        <FormHelperText>Disabled</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl} error>\r\n        <InputLabel htmlFor=\"component-error\">Name</InputLabel>\r\n        <Input\r\n          id=\"component-error\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          aria-describedby=\"component-error-text\"\r\n        />\r\n        <FormHelperText id=\"component-error-text\">Error</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl} variant=\"outlined\">\r\n        <InputLabel ref={labelRef} htmlFor=\"component-outlined\">\r\n          Name\r\n        </InputLabel>\r\n        <OutlinedInput\r\n          id=\"component-outlined\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          labelWidth={labelWidth}\r\n        />\r\n      </FormControl>\r\n      <FormControl className={classes.formControl} variant=\"filled\">\r\n        <InputLabel htmlFor=\"component-filled\">Name</InputLabel>\r\n        <FilledInput id=\"component-filled\" value={name} onChange={handleChange} />\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode5 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  input: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function Inputs() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Input\r\n        defaultValue=\"Hello world\"\r\n        className={classes.input}\r\n        inputProps={{\r\n          'aria-label': 'Description',\r\n        }}\r\n      />\r\n      <Input\r\n        placeholder=\"Placeholder\"\r\n        className={classes.input}\r\n        inputProps={{\r\n          'aria-label': 'Description',\r\n        }}\r\n      />\r\n      <Input\r\n        value=\"Disabled\"\r\n        className={classes.input}\r\n        disabled\r\n        inputProps={{\r\n          'aria-label': 'Description',\r\n        }}\r\n      />\r\n      <Input\r\n        defaultValue=\"Error\"\r\n        className={classes.input}\r\n        error\r\n        inputProps={{\r\n          'aria-label': 'Description',\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode6 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n}));\r\n\r\nexport default function TextFieldMargins() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <TextField\r\n        label=\"None\"\r\n        id=\"margin-none\"\r\n        defaultValue=\"Default Value\"\r\n        className={classes.textField}\r\n        helperText=\"Some important text\"\r\n      />\r\n      <TextField\r\n        label=\"Dense\"\r\n        id=\"margin-dense\"\r\n        defaultValue=\"Default Value\"\r\n        className={classes.textField}\r\n        helperText=\"Some important text\"\r\n        margin=\"dense\"\r\n      />\r\n      <TextField\r\n        label=\"Normal\"\r\n        id=\"margin-normal\"\r\n        defaultValue=\"Default Value\"\r\n        className={classes.textField}\r\n        helperText=\"Some important text\"\r\n        margin=\"normal\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode7 = `\r\nimport React from 'react';\r\nimport { fade, withStyles, makeStyles, createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { green } from '@material-ui/core/colors';\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    '& label.Mui-focused': {\r\n      color: 'green',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n      borderBottomColor: 'green',\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n      '& fieldset': {\r\n        borderColor: 'red',\r\n      },\r\n      '&:hover fieldset': {\r\n        borderColor: 'yellow',\r\n      },\r\n      '&.Mui-focused fieldset': {\r\n        borderColor: 'green',\r\n      },\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nconst BootstrapInput = withStyles(theme => ({\r\n  root: {\r\n    'label + &': {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.common.white,\r\n    border: '1px solid #ced4da',\r\n    fontSize: 16,\r\n    width: 'auto',\r\n    padding: '10px 12px',\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:focus': {\r\n      boxShadow: \\`\\${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem\\`,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nconst useStylesReddit = makeStyles(theme => ({\r\n  root: {\r\n    border: '1px solid #e2e2e1',\r\n    overflow: 'hidden',\r\n    borderRadius: 4,\r\n    backgroundColor: '#fcfcfb',\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    '&:hover': {\r\n      backgroundColor: '#fff',\r\n    },\r\n    '&$focused': {\r\n      backgroundColor: '#fff',\r\n      boxShadow: \\`\\${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px\\`,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n  focused: {},\r\n}));\r\n\r\nfunction RedditTextField(props) {\r\n  const classes = useStylesReddit();\r\n\r\n  return <TextField InputProps={{ classes, disableUnderline: true }} {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: green,\r\n  },\r\n});\r\n\r\nexport default function CustomizedInputs() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssTextField className={classes.margin} id=\"custom-css-standard-input\" label=\"Custom CSS\" />\r\n      <CssTextField\r\n        className={classes.margin}\r\n        label=\"Custom CSS\"\r\n        variant=\"outlined\"\r\n        id=\"custom-css-outlined-input\"\r\n      />\r\n      <ThemeProvider theme={theme}>\r\n        <TextField\r\n          className={classes.margin}\r\n          label=\"ThemeProvider\"\r\n          id=\"mui-theme-provider-standard-input\"\r\n        />\r\n        <TextField\r\n          className={classes.margin}\r\n          label=\"ThemeProvider\"\r\n          variant=\"outlined\"\r\n          id=\"mui-theme-provider-outlined-input\"\r\n        />\r\n      </ThemeProvider>\r\n      <FormControl className={classes.margin}>\r\n        <InputLabel shrink htmlFor=\"bootstrap-input\">\r\n          Bootstrap\r\n        </InputLabel>\r\n        <BootstrapInput defaultValue=\"react-bootstrap\" id=\"bootstrap-input\" />\r\n      </FormControl>\r\n      <RedditTextField\r\n        label=\"Reddit\"\r\n        className={classes.margin}\r\n        defaultValue=\"react-reddit\"\r\n        variant=\"filled\"\r\n        id=\"reddit-input\"\r\n      />\r\n      <InputBase\r\n        className={classes.margin}\r\n        defaultValue=\"Naked input\"\r\n        inputProps={{ 'aria-label': 'naked' }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode8 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DirectionsIcon from '@material-ui/icons/Directions';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    padding: '2px 4px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: 400,\r\n  },\r\n  input: {\r\n    marginLeft: 8,\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  divider: {\r\n    width: 1,\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n});\r\n\r\nexport default function CustomizedInputBase() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <IconButton className={classes.iconButton} aria-label=\"Menu\">\r\n        <MenuIcon />\r\n      </IconButton>\r\n      <InputBase\r\n        className={classes.input}\r\n        placeholder=\"Search Google Maps\"\r\n        inputProps={{ 'aria-label': 'Search Google Maps' }}\r\n      />\r\n      <IconButton className={classes.iconButton} aria-label=\"Search\">\r\n        <SearchIcon />\r\n      </IconButton>\r\n      <Divider className={classes.divider} />\r\n      <IconButton color=\"primary\" className={classes.iconButton} aria-label=\"Directions\">\r\n        <DirectionsIcon />\r\n      </IconButton>\r\n    </Paper>\r\n  );\r\n}\r\n`;\r\nconst jsCode9 = `\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\nconst ranges = [\r\n  {\r\n    value: '0-20',\r\n    label: '0 to 20',\r\n  },\r\n  {\r\n    value: '21-50',\r\n    label: '21 to 50',\r\n  },\r\n  {\r\n    value: '51-100',\r\n    label: '51 to 100',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  textField: {\r\n    flexBasis: 200,\r\n  },\r\n}));\r\n\r\nexport default function InputAdornments() {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    amount: '',\r\n    password: '',\r\n    weight: '',\r\n    weightRange: '',\r\n    showPassword: false,\r\n  });\r\n\r\n  const handleChange = prop => event => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TextField\r\n        label=\"With normal TextField\"\r\n        id=\"simple-start-adornment\"\r\n        className={clsx(classes.margin, classes.textField)}\r\n        InputProps={{\r\n          startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\r\n        }}\r\n      />\r\n      <TextField\r\n        select\r\n        label=\"With Select\"\r\n        className={clsx(classes.margin, classes.textField)}\r\n        value={values.weightRange}\r\n        onChange={handleChange('weightRange')}\r\n        InputProps={{\r\n          startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\r\n        }}\r\n      >\r\n        {ranges.map(option => (\r\n          <MenuItem key={option.value} value={option.value}>\r\n            {option.label}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <FormControl fullWidth className={classes.margin}>\r\n        <InputLabel htmlFor=\"adornment-amount\">Amount</InputLabel>\r\n        <Input\r\n          id=\"adornment-amount\"\r\n          value={values.amount}\r\n          onChange={handleChange('amount')}\r\n          startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\r\n        />\r\n      </FormControl>\r\n      <FormControl className={clsx(classes.margin, classes.withoutLabel, classes.textField)}>\r\n        <Input\r\n          id=\"adornment-weight\"\r\n          value={values.weight}\r\n          onChange={handleChange('weight')}\r\n          endAdornment={<InputAdornment position=\"end\">Kg</InputAdornment>}\r\n          aria-describedby=\"weight-helper-text\"\r\n          inputProps={{\r\n            'aria-label': 'Weight',\r\n          }}\r\n        />\r\n        <FormHelperText id=\"weight-helper-text\">Weight</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={clsx(classes.margin, classes.textField)}>\r\n        <InputLabel htmlFor=\"adornment-password\">Password</InputLabel>\r\n        <Input\r\n          id=\"adornment-password\"\r\n          type={values.showPassword ? 'text' : 'password'}\r\n          value={values.password}\r\n          onChange={handleChange('password')}\r\n          endAdornment={\r\n            <InputAdornment position=\"end\">\r\n              <IconButton aria-label=\"Toggle password visibility\" onClick={handleClickShowPassword}>\r\n                {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n        />\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode10 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function InputWithIcon() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <FormControl className={classes.margin}>\r\n        <InputLabel htmlFor=\"input-with-icon-adornment\">With a start adornment</InputLabel>\r\n        <Input\r\n          id=\"input-with-icon-adornment\"\r\n          startAdornment={\r\n            <InputAdornment position=\"start\">\r\n              <AccountCircle />\r\n            </InputAdornment>\r\n          }\r\n        />\r\n      </FormControl>\r\n      <TextField\r\n        className={classes.margin}\r\n        id=\"input-with-icon-textfield\"\r\n        label=\"TextField\"\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <AccountCircle />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n      <div className={classes.margin}>\r\n        <Grid container spacing={1} alignItems=\"flex-end\">\r\n          <Grid item>\r\n            <AccountCircle />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField id=\"input-with-icon-grid\" label=\"With a grid\" />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode11 = `\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\nconst ranges = [\r\n  {\r\n    value: '0-20',\r\n    label: '0 to 20',\r\n  },\r\n  {\r\n    value: '21-50',\r\n    label: '21 to 50',\r\n  },\r\n  {\r\n    value: '51-100',\r\n    label: '51 to 100',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  textField: {\r\n    flexBasis: 200,\r\n  },\r\n}));\r\n\r\nexport default function FilledInputAdornments() {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    amount: '',\r\n    password: '',\r\n    weight: '',\r\n    weightRange: '',\r\n    showPassword: false,\r\n  });\r\n\r\n  const handleChange = prop => event => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TextField\r\n        id=\"filled-simple-start-adornment\"\r\n        className={clsx(classes.margin, classes.textField)}\r\n        variant=\"filled\"\r\n        label=\"With filled TextField\"\r\n        InputProps={{\r\n          startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\r\n        }}\r\n      />\r\n      <TextField\r\n        select\r\n        className={clsx(classes.margin, classes.textField)}\r\n        variant=\"filled\"\r\n        label=\"With Select\"\r\n        value={values.weightRange}\r\n        onChange={handleChange('weightRange')}\r\n        InputProps={{\r\n          startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\r\n        }}\r\n      >\r\n        {ranges.map(option => (\r\n          <MenuItem key={option.value} value={option.value}>\r\n            {option.label}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        id=\"filled-adornment-amount\"\r\n        className={clsx(classes.margin, classes.textField)}\r\n        variant=\"filled\"\r\n        label=\"Amount\"\r\n        value={values.amount}\r\n        onChange={handleChange('amount')}\r\n        InputProps={{\r\n          startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\r\n        }}\r\n      />\r\n      <TextField\r\n        id=\"filled-adornment-weight\"\r\n        className={clsx(classes.margin, classes.textField)}\r\n        variant=\"filled\"\r\n        label=\"Weight\"\r\n        value={values.weight}\r\n        onChange={handleChange('weight')}\r\n        helperText=\"Weight\"\r\n        InputProps={{\r\n          endAdornment: <InputAdornment position=\"end\">Kg</InputAdornment>,\r\n        }}\r\n      />\r\n      <TextField\r\n        id=\"filled-adornment-password\"\r\n        className={clsx(classes.margin, classes.textField)}\r\n        variant=\"filled\"\r\n        type={values.showPassword ? 'text' : 'password'}\r\n        label=\"Password\"\r\n        value={values.password}\r\n        onChange={handleChange('password')}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                edge=\"end\"\r\n                aria-label=\"Toggle password visibility\"\r\n                onClick={handleClickShowPassword}\r\n              >\r\n                {values.showPassword ? <VisibilityOff /> : <Visibility />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode12 = `\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\nconst ranges = [\r\n  {\r\n    value: '0-20',\r\n    label: '0 to 20',\r\n  },\r\n  {\r\n    value: '21-50',\r\n    label: '21 to 50',\r\n  },\r\n  {\r\n    value: '51-100',\r\n    label: '51 to 100',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  textField: {\r\n    flexBasis: 200,\r\n  },\r\n}));\r\n\r\nexport default function OutlinedInputAdornments() {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    amount: '',\r\n    password: '',\r\n    weight: '',\r\n    weightRange: '',\r\n    showPassword: false,\r\n  });\r\n\r\n  const handleChange = prop => event => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TextField\r\n        id=\"outlined-simple-start-adornment\"\r\n        className={clsx(classes.margin, classes.textField)}\r\n        variant=\"outlined\"\r\n        label=\"With outlined TextField\"\r\n        InputProps={{\r\n          startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\r\n        }}\r\n      />\r\n      <TextField\r\n        select\r\n        className={clsx(classes.margin, classes.textField)}\r\n        variant=\"outlined\"\r\n        label=\"With Select\"\r\n        value={values.weightRange}\r\n        onChange={handleChange('weightRange')}\r\n        InputProps={{\r\n          startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\r\n        }}\r\n      >\r\n        {ranges.map(option => (\r\n          <MenuItem key={option.value} value={option.value}>\r\n            {option.label}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        id=\"outlined-adornment-amount\"\r\n        className={clsx(classes.margin, classes.textField)}\r\n        variant=\"outlined\"\r\n        label=\"Amount\"\r\n        value={values.amount}\r\n        onChange={handleChange('amount')}\r\n        InputProps={{\r\n          startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\r\n        }}\r\n      />\r\n      <TextField\r\n        id=\"outlined-adornment-weight\"\r\n        className={clsx(classes.margin, classes.textField)}\r\n        variant=\"outlined\"\r\n        label=\"Weight\"\r\n        value={values.weight}\r\n        onChange={handleChange('weight')}\r\n        helperText=\"Weight\"\r\n        InputProps={{\r\n          endAdornment: <InputAdornment position=\"end\">Kg</InputAdornment>,\r\n        }}\r\n      />\r\n      <TextField\r\n        id=\"outlined-adornment-password\"\r\n        className={clsx(classes.margin, classes.textField)}\r\n        variant=\"outlined\"\r\n        type={values.showPassword ? 'text' : 'password'}\r\n        label=\"Password\"\r\n        value={values.password}\r\n        onChange={handleChange('password')}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                edge=\"end\"\r\n                aria-label=\"Toggle password visibility\"\r\n                onClick={handleClickShowPassword}\r\n              >\r\n                {values.showPassword ? <VisibilityOff /> : <Visibility />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\n","/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {\r\n  Paper,\r\n  List,\r\n  ListItem,\r\n  Checkbox,\r\n  Grid,\r\n  Button,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  Card,\r\n  CardHeader,\r\n  Divider\r\n} from \"@material-ui/core\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    margin: \"auto\"\r\n  },\r\n  paper: {\r\n    width: 200,\r\n    height: 230,\r\n    overflow: \"auto\"\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0.5, 0)\r\n  }\r\n}));\r\n\r\nfunction not(a, b) {\r\n  return a.filter(value => b.indexOf(value) === -1);\r\n}\r\n\r\nfunction intersection(a, b) {\r\n  return a.filter(value => b.indexOf(value) !== -1);\r\n}\r\n\r\n// Example 2\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    margin: \"auto\"\r\n  },\r\n  cardHeader: {\r\n    padding: theme.spacing(1, 2)\r\n  },\r\n  list: {\r\n    width: 200,\r\n    height: 230,\r\n    backgroundColor: theme.palette.background.paper,\r\n    overflow: \"auto\"\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0.5, 0)\r\n  }\r\n}));\r\n\r\nfunction not2(a, b) {\r\n  return a.filter(value => b.indexOf(value) === -1);\r\n}\r\n\r\nfunction intersection2(a, b) {\r\n  return a.filter(value => b.indexOf(value) !== -1);\r\n}\r\n\r\nfunction union2(a, b) {\r\n  return [...a, ...not2(b, a)];\r\n}\r\n\r\nexport default function TransferListExamplesPage() {\r\n  // Example 1\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = React.useState([]);\r\n  const [left, setLeft] = React.useState([0, 1, 2, 3]);\r\n  const [right, setRight] = React.useState([4, 5, 6, 7]);\r\n\r\n  const leftChecked = intersection(checked, left);\r\n  const rightChecked = intersection(checked, right);\r\n\r\n  const handleToggle = value => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const handleAllRight = () => {\r\n    setRight(right.concat(left));\r\n    setLeft([]);\r\n  };\r\n\r\n  const handleCheckedRight = () => {\r\n    setRight(right.concat(leftChecked));\r\n    setLeft(not(left, leftChecked));\r\n    setChecked(not(checked, leftChecked));\r\n  };\r\n\r\n  const handleCheckedLeft = () => {\r\n    setLeft(left.concat(rightChecked));\r\n    setRight(not(right, rightChecked));\r\n    setChecked(not(checked, rightChecked));\r\n  };\r\n\r\n  const handleAllLeft = () => {\r\n    setLeft(left.concat(right));\r\n    setRight([]);\r\n  };\r\n\r\n  const customList = items => (\r\n    <Paper className={classes.paper}>\r\n      <List dense component=\"div\" role=\"list\">\r\n        {items.map(value => {\r\n          const labelId = `transfer-list-item-${value}-label`;\r\n\r\n          return (\r\n            <ListItem\r\n              key={value}\r\n              role=\"listitem\"\r\n              button\r\n              onClick={handleToggle(value)}\r\n            >\r\n              <ListItemIcon>\r\n                <Checkbox\r\n                  checked={checked.indexOf(value) !== -1}\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                  inputProps={{ \"aria-labelledby\": labelId }}\r\n                />\r\n              </ListItemIcon>\r\n              <ListItemText id={labelId} primary={`List item ${value + 1}`} />\r\n            </ListItem>\r\n          );\r\n        })}\r\n        <ListItem />\r\n      </List>\r\n    </Paper>\r\n  );\r\n\r\n  // Example 2\r\n  const classes2 = useStyles2();\r\n  const [checked2, setChecked2] = React.useState([]);\r\n  const [left2, setLeft2] = React.useState([0, 1, 2, 3]);\r\n  const [right2, setRight2] = React.useState([4, 5, 6, 7]);\r\n\r\n  const leftChecked2 = intersection2(checked2, left2);\r\n  const rightChecked2 = intersection2(checked2, right2);\r\n\r\n  const handleToggle2 = value => () => {\r\n    const currentIndex2 = checked2.indexOf(value);\r\n    const newChecked2 = [...checked2];\r\n\r\n    if (currentIndex2 === -1) {\r\n      newChecked2.push(value);\r\n    } else {\r\n      newChecked2.splice(currentIndex2, 1);\r\n    }\r\n\r\n    setChecked2(newChecked2);\r\n  };\r\n\r\n  const numberOfChecked2 = items => intersection2(checked2, items).length;\r\n\r\n  const handleToggleAll2 = items => () => {\r\n    if (numberOfChecked2(items) === items.length) {\r\n      setChecked2(not2(checked2, items));\r\n    } else {\r\n      setChecked2(union2(checked2, items));\r\n    }\r\n  };\r\n\r\n  const handleCheckedRight2 = () => {\r\n    setRight2(right2.concat(leftChecked2));\r\n    setLeft2(not2(left2, leftChecked2));\r\n    setChecked2(not2(checked2, leftChecked2));\r\n  };\r\n\r\n  const handleCheckedLeft2 = () => {\r\n    setLeft2(left2.concat(rightChecked2));\r\n    setRight2(not2(right2, rightChecked2));\r\n    setChecked2(not2(checked2, rightChecked2));\r\n  };\r\n\r\n  const customList2 = (title, items) => (\r\n    <Card>\r\n      <CardHeader\r\n        className={classes2.cardHeader}\r\n        avatar={\r\n          <Checkbox\r\n            onClick={handleToggleAll2(items)}\r\n            checked={\r\n              numberOfChecked2(items) === items.length && items.length !== 0\r\n            }\r\n            indeterminate={\r\n              numberOfChecked2(items) !== items.length &&\r\n              numberOfChecked2(items) !== 0\r\n            }\r\n            disabled={items.length === 0}\r\n            inputProps={{ \"aria-label\": \"all items selected\" }}\r\n          />\r\n        }\r\n        title={title}\r\n        subheader={`${numberOfChecked2(items)}/${items.length} selected`}\r\n      />\r\n      <Divider />\r\n      <List className={classes2.list} dense component=\"div\" role=\"list\">\r\n        {items.map(value => {\r\n          const labelId = `transfer-list-all-item-${value}-label`;\r\n\r\n          return (\r\n            <ListItem\r\n              key={value}\r\n              role=\"listitem\"\r\n              button\r\n              onClick={handleToggle2(value)}\r\n            >\r\n              <ListItemIcon>\r\n                <Checkbox\r\n                  checked={checked2.indexOf(value) !== -1}\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                  inputProps={{ \"aria-labelledby\": labelId }}\r\n                />\r\n              </ListItemIcon>\r\n              <ListItemText id={labelId} primary={`List item ${value + 1}`} />\r\n            </ListItem>\r\n          );\r\n        })}\r\n        <ListItem />\r\n      </List>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          A transfer list (or \"shuttle\") enables the user to move one or more\r\n          list items between lists.\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/transfer-list/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode1}\r\n            beforeCodeTitle=\"Simple Transfer List\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              For completeness, this example includes buttons for \"move all\",\r\n              but not every transfer list needs these.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\" />\r\n            <Grid\r\n              container\r\n              spacing={2}\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n              className={classes.root}\r\n            >\r\n              <Grid item>{customList(left)}</Grid>\r\n              <Grid item>\r\n                <Grid container direction=\"column\" alignItems=\"center\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    className={classes.button}\r\n                    onClick={handleAllRight}\r\n                    disabled={left.length === 0}\r\n                    aria-label=\"move all right\"\r\n                  >\r\n                    <i className=\"flaticon2-fast-next\" />\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    className={classes.button}\r\n                    onClick={handleCheckedRight}\r\n                    disabled={leftChecked.length === 0}\r\n                    aria-label=\"move selected right\"\r\n                  >\r\n                    <i className=\"flaticon2-next\" />\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    className={`${classes.button}`}\r\n                    onClick={handleCheckedLeft}\r\n                    disabled={rightChecked.length === 0}\r\n                    aria-label=\"move selected left\"\r\n                  >\r\n                    <i className=\"flaticon2-back\" />\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    className={classes.button}\r\n                    onClick={handleAllLeft}\r\n                    disabled={right.length === 0}\r\n                    aria-label=\"move all left\"\r\n                  >\r\n                    <i className=\"flaticon2-fast-back\" />\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item>{customList(right)}</Grid>\r\n            </Grid>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode2}\r\n            beforeCodeTitle=\"Enhanced Transfer List\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              This example exchanges the \"move all\" buttons for a \"select all /\r\n              select none\" checkbox, and adds a counter.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\" />\r\n            <Grid\r\n              container\r\n              spacing={2}\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n              className={classes2.root}\r\n            >\r\n              <Grid item>{customList2(\"Choices\", left2)}</Grid>\r\n              <Grid item>\r\n                <Grid container direction=\"column\" alignItems=\"center\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    className={classes2.button}\r\n                    onClick={handleCheckedRight2}\r\n                    disabled={leftChecked2.length === 0}\r\n                    aria-label=\"move selected right\"\r\n                  >\r\n                    <i className=\"flaticon2-next\" />\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    className={classes2.button}\r\n                    onClick={handleCheckedLeft2}\r\n                    disabled={rightChecked2.length === 0}\r\n                    aria-label=\"move selected left\"\r\n                  >\r\n                    <i className=\"flaticon2-back\" />\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item>{customList2(\"Chosen\", right2)}</Grid>\r\n            </Grid>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    margin: 'auto',\r\n  },\r\n  paper: {\r\n    width: 200,\r\n    height: 230,\r\n    overflow: 'auto',\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0.5, 0),\r\n  },\r\n}));\r\n\r\nfunction not(a, b) {\r\n  return a.filter(value => b.indexOf(value) === -1);\r\n}\r\n\r\nfunction intersection(a, b) {\r\n  return a.filter(value => b.indexOf(value) !== -1);\r\n}\r\n\r\nexport default function TransferList() {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = React.useState([]);\r\n  const [left, setLeft] = React.useState([0, 1, 2, 3]);\r\n  const [right, setRight] = React.useState([4, 5, 6, 7]);\r\n\r\n  const leftChecked = intersection(checked, left);\r\n  const rightChecked = intersection(checked, right);\r\n\r\n  const handleToggle = value => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const handleAllRight = () => {\r\n    setRight(right.concat(left));\r\n    setLeft([]);\r\n  };\r\n\r\n  const handleCheckedRight = () => {\r\n    setRight(right.concat(leftChecked));\r\n    setLeft(not(left, leftChecked));\r\n    setChecked(not(checked, leftChecked));\r\n  };\r\n\r\n  const handleCheckedLeft = () => {\r\n    setLeft(left.concat(rightChecked));\r\n    setRight(not(right, rightChecked));\r\n    setChecked(not(checked, rightChecked));\r\n  };\r\n\r\n  const handleAllLeft = () => {\r\n    setLeft(left.concat(right));\r\n    setRight([]);\r\n  };\r\n\r\n  const customList = items => (\r\n    <Paper className={classes.paper}>\r\n      <List dense component=\"div\" role=\"list\">\r\n        {items.map(value => {\r\n          const labelId = \\`transfer-list-item-\\${value}-label\\`;\r\n\r\n          return (\r\n            <ListItem key={value} role=\"listitem\" button onClick={handleToggle(value)}>\r\n              <ListItemIcon>\r\n                <Checkbox\r\n                  checked={checked.indexOf(value) !== -1}\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                  inputProps={{ 'aria-labelledby': labelId }}\r\n                />\r\n              </ListItemIcon>\r\n              <ListItemText id={labelId} primary={\\`List item \\${value + 1}\\`} />\r\n            </ListItem>\r\n          );\r\n        })}\r\n        <ListItem />\r\n      </List>\r\n    </Paper>\r\n  );\r\n\r\n  return (\r\n    <Grid container spacing={2} justify=\"center\" alignItems=\"center\" className={classes.root}>\r\n      <Grid item>{customList(left)}</Grid>\r\n      <Grid item>\r\n        <Grid container direction=\"column\" alignItems=\"center\">\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={handleAllRight}\r\n            disabled={left.length === 0}\r\n            aria-label=\"move all right\"\r\n          >\r\n            ≫\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={handleCheckedRight}\r\n            disabled={leftChecked.length === 0}\r\n            aria-label=\"move selected right\"\r\n          >\r\n            &gt;\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={handleCheckedLeft}\r\n            disabled={rightChecked.length === 0}\r\n            aria-label=\"move selected left\"\r\n          >\r\n            &lt;\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={handleAllLeft}\r\n            disabled={right.length === 0}\r\n            aria-label=\"move all left\"\r\n          >\r\n            ≪\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item>{customList(right)}</Grid>\r\n    </Grid>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    margin: 'auto',\r\n  },\r\n  cardHeader: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  list: {\r\n    width: 200,\r\n    height: 230,\r\n    backgroundColor: theme.palette.background.paper,\r\n    overflow: 'auto',\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0.5, 0),\r\n  },\r\n}));\r\n\r\nfunction not(a, b) {\r\n  return a.filter(value => b.indexOf(value) === -1);\r\n}\r\n\r\nfunction intersection(a, b) {\r\n  return a.filter(value => b.indexOf(value) !== -1);\r\n}\r\n\r\nfunction union(a, b) {\r\n  return [...a, ...not(b, a)];\r\n}\r\n\r\nexport default function TransferList() {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = React.useState([]);\r\n  const [left, setLeft] = React.useState([0, 1, 2, 3]);\r\n  const [right, setRight] = React.useState([4, 5, 6, 7]);\r\n\r\n  const leftChecked = intersection(checked, left);\r\n  const rightChecked = intersection(checked, right);\r\n\r\n  const handleToggle = value => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const numberOfChecked = items => intersection(checked, items).length;\r\n\r\n  const handleToggleAll = items => () => {\r\n    if (numberOfChecked(items) === items.length) {\r\n      setChecked(not(checked, items));\r\n    } else {\r\n      setChecked(union(checked, items));\r\n    }\r\n  };\r\n\r\n  const handleCheckedRight = () => {\r\n    setRight(right.concat(leftChecked));\r\n    setLeft(not(left, leftChecked));\r\n    setChecked(not(checked, leftChecked));\r\n  };\r\n\r\n  const handleCheckedLeft = () => {\r\n    setLeft(left.concat(rightChecked));\r\n    setRight(not(right, rightChecked));\r\n    setChecked(not(checked, rightChecked));\r\n  };\r\n\r\n  const customList = (title, items) => (\r\n    <Card>\r\n      <CardHeader\r\n        className={classes.cardHeader}\r\n        avatar={\r\n          <Checkbox\r\n            onClick={handleToggleAll(items)}\r\n            checked={numberOfChecked(items) === items.length && items.length !== 0}\r\n            indeterminate={numberOfChecked(items) !== items.length && numberOfChecked(items) !== 0}\r\n            disabled={items.length === 0}\r\n            inputProps={{ 'aria-label': 'all items selected' }}\r\n          />\r\n        }\r\n        title={title}\r\n        subheader={\\`\\${numberOfChecked(items)}/\\${items.length} selected\\`}\r\n      />\r\n      <Divider />\r\n      <List className={classes.list} dense component=\"div\" role=\"list\">\r\n        {items.map(value => {\r\n          const labelId = \\`transfer-list-all-item-\\${value}-label\\`;\r\n\r\n          return (\r\n            <ListItem key={value} role=\"listitem\" button onClick={handleToggle(value)}>\r\n              <ListItemIcon>\r\n                <Checkbox\r\n                  checked={checked.indexOf(value) !== -1}\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                  inputProps={{ 'aria-labelledby': labelId }}\r\n                />\r\n              </ListItemIcon>\r\n              <ListItemText id={labelId} primary={\\`List item \\${value + 1}\\`} />\r\n            </ListItem>\r\n          );\r\n        })}\r\n        <ListItem />\r\n      </List>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <Grid container spacing={2} justify=\"center\" alignItems=\"center\" className={classes.root}>\r\n      <Grid item>{customList('Choices', left)}</Grid>\r\n      <Grid item>\r\n        <Grid container direction=\"column\" alignItems=\"center\">\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={handleCheckedRight}\r\n            disabled={leftChecked.length === 0}\r\n            aria-label=\"move selected right\"\r\n          >\r\n            &gt;\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={handleCheckedLeft}\r\n            disabled={rightChecked.length === 0}\r\n            aria-label=\"move selected left\"\r\n          >\r\n            &lt;\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item>{customList('Chosen', right)}</Grid>\r\n    </Grid>\r\n  );\r\n}\r\n`;\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport {emphasize, makeStyles, useTheme} from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Select from \"react-select\";\r\nimport deburr from \"lodash/deburr\";\r\nimport Downshift from \"downshift\";\r\nimport {\r\n  TextField,\r\n  Popper,\r\n  Paper,\r\n  MenuItem,\r\n  Chip,\r\n  Typography,\r\n  NoSsr\r\n} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\nconst suggestions = [\r\n  { label: \"Afghanistan\" },\r\n  { label: \"Aland Islands\" },\r\n  { label: \"Albania\" },\r\n  { label: \"Algeria\" },\r\n  { label: \"American Samoa\" },\r\n  { label: \"Andorra\" },\r\n  { label: \"Angola\" },\r\n  { label: \"Anguilla\" },\r\n  { label: \"Antarctica\" },\r\n  { label: \"Antigua and Barbuda\" },\r\n  { label: \"Argentina\" },\r\n  { label: \"Armenia\" },\r\n  { label: \"Aruba\" },\r\n  { label: \"Australia\" },\r\n  { label: \"Austria\" },\r\n  { label: \"Azerbaijan\" },\r\n  { label: \"Bahamas\" },\r\n  { label: \"Bahrain\" },\r\n  { label: \"Bangladesh\" },\r\n  { label: \"Barbados\" },\r\n  { label: \"Belarus\" },\r\n  { label: \"Belgium\" },\r\n  { label: \"Belize\" },\r\n  { label: \"Benin\" },\r\n  { label: \"Bermuda\" },\r\n  { label: \"Bhutan\" },\r\n  { label: \"Bolivia, Plurinational State of\" },\r\n  { label: \"Bonaire, Sint Eustatius and Saba\" },\r\n  { label: \"Bosnia and Herzegovina\" },\r\n  { label: \"Botswana\" },\r\n  { label: \"Bouvet Island\" },\r\n  { label: \"Brazil\" },\r\n  { label: \"British Indian Ocean Territory\" },\r\n  { label: \"Brunei Darussalam\" }\r\n];\r\n\r\n// Example first\r\nfunction renderInput(inputProps) {\r\n  const { InputProps, classes, ref, ...other } = inputProps;\r\n\r\n  return (\r\n    <TextField\r\n      InputProps={{\r\n        inputRef: ref,\r\n        classes: {\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput\r\n        },\r\n        ...InputProps\r\n      }}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nfunction renderSuggestion(suggestionProps) {\r\n  const {\r\n    suggestion,\r\n    index,\r\n    itemProps,\r\n    highlightedIndex,\r\n    selectedItem\r\n  } = suggestionProps;\r\n  const isHighlighted = highlightedIndex === index;\r\n  const isSelected = (selectedItem || \"\").indexOf(suggestion.label) > -1;\r\n\r\n  return (\r\n    <MenuItem\r\n      {...itemProps}\r\n      key={`suggestion1${suggestion.label}`}\r\n      selected={isHighlighted}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: isSelected ? 500 : 400\r\n      }}\r\n    >\r\n      {suggestion.label}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nrenderSuggestion.propTypes = {\r\n  highlightedIndex: PropTypes.number,\r\n  index: PropTypes.number,\r\n  itemProps: PropTypes.object,\r\n  selectedItem: PropTypes.string,\r\n  suggestion: PropTypes.shape({ label: PropTypes.string }).isRequired\r\n};\r\n\r\nfunction getSuggestions(value, { showEmpty = false } = {}) {\r\n  const inputValue = deburr(value.trim()).toLowerCase();\r\n  const inputLength = inputValue.length;\r\n  let count = 0;\r\n\r\n  return inputLength === 0 && !showEmpty\r\n    ? []\r\n    : suggestions.filter(suggestion => {\r\n        const keep =\r\n          count < 5 &&\r\n          suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\r\n\r\n        if (keep) {\r\n          count += 1;\r\n        }\r\n\r\n        return keep;\r\n      });\r\n}\r\n\r\nfunction DownshiftMultiple(props) {\r\n  const { classes } = props;\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n  const [selectedItem, setSelectedItem] = React.useState([]);\r\n\r\n  function handleKeyDown(event) {\r\n    if (\r\n      selectedItem.length &&\r\n      !inputValue.length &&\r\n      event.key === \"Backspace\"\r\n    ) {\r\n      setSelectedItem(selectedItem.slice(0, selectedItem.length - 1));\r\n    }\r\n  }\r\n\r\n  function handleInputChange(event) {\r\n    setInputValue(event.target.value);\r\n  }\r\n\r\n  function handleChange(item) {\r\n    let newSelectedItem = [...selectedItem];\r\n    if (newSelectedItem.indexOf(item) === -1) {\r\n      newSelectedItem = [...newSelectedItem, item];\r\n    }\r\n    setInputValue(\"\");\r\n    setSelectedItem(newSelectedItem);\r\n  }\r\n\r\n  const handleDelete = item => () => {\r\n    const newSelectedItem = [...selectedItem];\r\n    newSelectedItem.splice(newSelectedItem.indexOf(item), 1);\r\n    setSelectedItem(newSelectedItem);\r\n  };\r\n\r\n  return (\r\n    <Downshift\r\n      id=\"downshift-multiple\"\r\n      inputValue={inputValue}\r\n      onChange={handleChange}\r\n      selectedItem={selectedItem}\r\n    >\r\n      {({\r\n        getInputProps,\r\n        getItemProps,\r\n        getLabelProps,\r\n        isOpen,\r\n        inputValue: inputValue2,\r\n        selectedItem: selectedItem2,\r\n        highlightedIndex\r\n      }) => {\r\n        const { onBlur, onChange, onFocus, ...inputProps } = getInputProps({\r\n          onKeyDown: handleKeyDown,\r\n          placeholder: \"Select multiple countries\"\r\n        });\r\n\r\n        return (\r\n          <div className={classes.container}>\r\n            {renderInput({\r\n              fullWidth: true,\r\n              classes,\r\n              label: \"Countries\",\r\n              InputLabelProps: getLabelProps(),\r\n              InputProps: {\r\n                startAdornment: selectedItem.map(item => (\r\n                  <Chip\r\n                    key={item}\r\n                    tabIndex={-1}\r\n                    label={item}\r\n                    className={classes.chip}\r\n                    onDelete={handleDelete(item)}\r\n                  />\r\n                )),\r\n                onBlur,\r\n                onChange: event => {\r\n                  handleInputChange(event);\r\n                  onChange(event);\r\n                },\r\n                onFocus\r\n              },\r\n              inputProps\r\n            })}\r\n\r\n            {isOpen ? (\r\n              <Paper className={classes.paper} square>\r\n                {getSuggestions(inputValue2).map((suggestion, index) =>\r\n                  renderSuggestion({\r\n                    suggestion,\r\n                    index,\r\n                    itemProps: getItemProps({ item: suggestion.label }),\r\n                    highlightedIndex,\r\n                    selectedItem: selectedItem2\r\n                  })\r\n                )}\r\n              </Paper>\r\n            ) : null}\r\n          </div>\r\n        );\r\n      }}\r\n    </Downshift>\r\n  );\r\n}\r\n\r\nDownshiftMultiple.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    height: 250\r\n  },\r\n  container: {\r\n    flexGrow: 1,\r\n    position: \"relative\"\r\n  },\r\n  paper: {\r\n    position: \"absolute\",\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25)\r\n  },\r\n  inputRoot: {\r\n    flexWrap: \"wrap\"\r\n  },\r\n  inputInput: {\r\n    width: \"auto\",\r\n    flexGrow: 1\r\n  },\r\n  divider: {\r\n    height: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nlet popperNode;\r\n\r\n// Example 2\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    height: 250\r\n  },\r\n  input: {\r\n    display: \"flex\",\r\n    padding: 0,\r\n    height: \"auto\"\r\n  },\r\n  valueContainer: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    overflow: \"hidden\"\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25)\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[300]\r\n        : theme.palette.grey[700],\r\n      0.08\r\n    )\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2)\r\n  },\r\n  singleValue: {\r\n    fontSize: 16\r\n  },\r\n  placeholder: {\r\n    position: \"absolute\",\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16\r\n  },\r\n  paper: {\r\n    position: \"absolute\",\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0\r\n  },\r\n  divider: {\r\n    height: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps }\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps\r\n        }\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      key={`option2${props.children}`}\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      key={props.children}\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography\r\n      key={props.children}\r\n      className={props.selectProps.classes.singleValue}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return (\r\n    <div\r\n      key={props.children}\r\n      className={props.selectProps.classes.valueContainer}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      key={`chip2${props.children}`}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool,\r\n  removeProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper\r\n      square\r\n      key={props.children}\r\n      className={props.selectProps.classes.paper}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer\r\n};\r\n\r\nexport default function AutocompleteExamplesPage() {\r\n  const classes = useStyles();\r\n\r\n  const classes2 = useStyles2();\r\n  const theme = useTheme();\r\n  const [single, setSingle] = React.useState(null);\r\n  const [multi, setMulti] = React.useState(null);\r\n\r\n  function handleChangeSingle(value) {\r\n    setSingle(value);\r\n  }\r\n\r\n  function handleChangeMulti(value) {\r\n    setMulti(value);\r\n  }\r\n\r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      \"& input\": {\r\n        font: \"inherit\"\r\n      }\r\n    })\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          The autocomplete is a normal text input enhanced by a panel of\r\n          suggested options.\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/autocomplete/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode1}\r\n            beforeCodeTitle=\"Downshift\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <div>\r\n              In the following example, we demonstrate how to use{\" \"}\r\n              <a href=\"https://github.com/downshift-js/downshift\">\r\n                <code>downshift</code>\r\n              </a>\r\n              . The last demo allow to clear the input and show a number of\r\n              options on focus.\r\n            </div>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes.root}>\r\n              <Downshift id=\"downshift-simple\">\r\n                {({\r\n                  getInputProps,\r\n                  getItemProps,\r\n                  getLabelProps,\r\n                  getMenuProps,\r\n                  highlightedIndex,\r\n                  inputValue,\r\n                  isOpen,\r\n                  selectedItem\r\n                }) => {\r\n                  const { onBlur, onFocus, ...inputProps } = getInputProps({\r\n                    placeholder: \"Search for a country (start with a)\"\r\n                  });\r\n\r\n                  return (\r\n                    <div className={classes.container}>\r\n                      {renderInput({\r\n                        fullWidth: true,\r\n                        classes,\r\n                        label: \"Country\",\r\n                        InputLabelProps: getLabelProps({ shrink: true }),\r\n                        InputProps: { onBlur, onFocus },\r\n                        inputProps\r\n                      })}\r\n\r\n                      <div {...getMenuProps()}>\r\n                        {isOpen ? (\r\n                          <Paper className={classes.paper} square>\r\n                            {getSuggestions(inputValue).map(\r\n                              (suggestion, index) =>\r\n                                renderSuggestion({\r\n                                  suggestion,\r\n                                  index,\r\n                                  itemProps: getItemProps({\r\n                                    item: suggestion.label\r\n                                  }),\r\n                                  highlightedIndex,\r\n                                  selectedItem\r\n                                })\r\n                            )}\r\n                          </Paper>\r\n                        ) : null}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              </Downshift>\r\n              <div className={classes.divider} />\r\n              <DownshiftMultiple classes={classes} />\r\n              <div className={classes.divider} />\r\n              <Downshift id=\"downshift-popper\">\r\n                {({\r\n                  getInputProps,\r\n                  getItemProps,\r\n                  getLabelProps,\r\n                  getMenuProps,\r\n                  highlightedIndex,\r\n                  inputValue,\r\n                  isOpen,\r\n                  selectedItem\r\n                }) => {\r\n                  const { onBlur, onFocus, ...inputProps } = getInputProps({\r\n                    placeholder: \"With Popper\"\r\n                  });\r\n\r\n                  return (\r\n                    <div className={classes.container}>\r\n                      {renderInput({\r\n                        fullWidth: true,\r\n                        classes,\r\n                        label: \"Country\",\r\n                        InputProps: { onBlur, onFocus },\r\n                        InputLabelProps: getLabelProps({ shrink: true }),\r\n                        inputProps,\r\n                        ref: node => {\r\n                          popperNode = node;\r\n                        }\r\n                      })}\r\n\r\n                      <Popper open={isOpen} anchorEl={popperNode}>\r\n                        <div\r\n                          {...(isOpen\r\n                            ? getMenuProps({}, { suppressRefError: true })\r\n                            : {})}\r\n                        >\r\n                          <Paper\r\n                            square\r\n                            style={{\r\n                              marginTop: 8,\r\n                              width: popperNode\r\n                                ? popperNode.clientWidth\r\n                                : undefined\r\n                            }}\r\n                          >\r\n                            {getSuggestions(inputValue).map(\r\n                              (suggestion, index) =>\r\n                                renderSuggestion({\r\n                                  suggestion,\r\n                                  index,\r\n                                  itemProps: getItemProps({\r\n                                    item: suggestion.label\r\n                                  }),\r\n                                  highlightedIndex,\r\n                                  selectedItem\r\n                                })\r\n                            )}\r\n                          </Paper>\r\n                        </div>\r\n                      </Popper>\r\n                    </div>\r\n                  );\r\n                }}\r\n              </Downshift>\r\n              <div className={classes.divider} />\r\n              <Downshift id=\"downshift-options\">\r\n                {({\r\n                  clearSelection,\r\n                  getInputProps,\r\n                  getItemProps,\r\n                  getLabelProps,\r\n                  getMenuProps,\r\n                  highlightedIndex,\r\n                  inputValue,\r\n                  isOpen,\r\n                  openMenu,\r\n                  selectedItem\r\n                }) => {\r\n                  const {\r\n                    onBlur,\r\n                    onChange,\r\n                    onFocus,\r\n                    ...inputProps\r\n                  } = getInputProps({\r\n                    onChange: event => {\r\n                      if (event.target.value === \"\") {\r\n                        clearSelection();\r\n                      }\r\n                    },\r\n                    onFocus: openMenu,\r\n                    placeholder: \"With the clear & show empty options\"\r\n                  });\r\n\r\n                  return (\r\n                    <div className={classes.container}>\r\n                      {renderInput({\r\n                        fullWidth: true,\r\n                        classes,\r\n                        label: \"Countries\",\r\n                        InputLabelProps: getLabelProps({ shrink: true }),\r\n                        InputProps: { onBlur, onChange, onFocus },\r\n                        inputProps\r\n                      })}\r\n\r\n                      <div {...getMenuProps()}>\r\n                        {isOpen ? (\r\n                          <Paper className={classes.paper} square>\r\n                            {getSuggestions(inputValue, {\r\n                              showEmpty: true\r\n                            }).map((suggestion, index) =>\r\n                              renderSuggestion({\r\n                                suggestion,\r\n                                index,\r\n                                itemProps: getItemProps({\r\n                                  item: suggestion.label\r\n                                }),\r\n                                highlightedIndex,\r\n                                selectedItem\r\n                              })\r\n                            )}\r\n                          </Paper>\r\n                        ) : null}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              </Downshift>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode2}\r\n            beforeCodeTitle=\"React-select\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              In the following example, we demonstrate how to use{\" \"}\r\n              <a href=\"https://github.com/JedWatson/react-select\">\r\n                <code>react-select</code>\r\n              </a>\r\n              .\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\" />\r\n            <div className={classes2.root}>\r\n              <NoSsr key=\"nossr22\">\r\n                <Select\r\n                  className=\"react-select\"\r\n                  classes={classes2}\r\n                  styles={selectStyles}\r\n                  inputId=\"react-select-single\"\r\n                  TextFieldProps={{\r\n                    label: \"Country\",\r\n                    InputLabelProps: {\r\n                      htmlFor: \"react-select-single\",\r\n                      shrink: true\r\n                    },\r\n                    placeholder: \"Search a country (start with a)\"\r\n                  }}\r\n                  options={suggestions}\r\n                  components={components}\r\n                  value={single}\r\n                  onChange={handleChangeSingle}\r\n                />\r\n                <div className={classes2.divider} />\r\n                <Select\r\n                  key={\"\"}\r\n                  className=\"react-select\"\r\n                  classes={classes2}\r\n                  styles={selectStyles}\r\n                  inputId=\"react-select-multiple\"\r\n                  TextFieldProps={{\r\n                    label: \"Countries\",\r\n                    InputLabelProps: {\r\n                      htmlFor: \"react-select-multiple\",\r\n                      shrink: true\r\n                    },\r\n                    placeholder: \"Select multiple countries\"\r\n                  }}\r\n                  options={suggestions}\r\n                  components={components}\r\n                  value={multi}\r\n                  onChange={handleChangeMulti}\r\n                  isMulti\r\n                />\r\n              </NoSsr>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport deburr from 'lodash/deburr';\r\nimport Downshift from 'downshift';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nconst suggestions = [\r\n  { label: 'Afghanistan' },\r\n  { label: 'Aland Islands' },\r\n  { label: 'Albania' },\r\n  { label: 'Algeria' },\r\n  { label: 'American Samoa' },\r\n  { label: 'Andorra' },\r\n  { label: 'Angola' },\r\n  { label: 'Anguilla' },\r\n  { label: 'Antarctica' },\r\n  { label: 'Antigua and Barbuda' },\r\n  { label: 'Argentina' },\r\n  { label: 'Armenia' },\r\n  { label: 'Aruba' },\r\n  { label: 'Australia' },\r\n  { label: 'Austria' },\r\n  { label: 'Azerbaijan' },\r\n  { label: 'Bahamas' },\r\n  { label: 'Bahrain' },\r\n  { label: 'Bangladesh' },\r\n  { label: 'Barbados' },\r\n  { label: 'Belarus' },\r\n  { label: 'Belgium' },\r\n  { label: 'Belize' },\r\n  { label: 'Benin' },\r\n  { label: 'Bermuda' },\r\n  { label: 'Bhutan' },\r\n  { label: 'Bolivia, Plurinational State of' },\r\n  { label: 'Bonaire, Sint Eustatius and Saba' },\r\n  { label: 'Bosnia and Herzegovina' },\r\n  { label: 'Botswana' },\r\n  { label: 'Bouvet Island' },\r\n  { label: 'Brazil' },\r\n  { label: 'British Indian Ocean Territory' },\r\n  { label: 'Brunei Darussalam' },\r\n];\r\n\r\nfunction renderInput(inputProps) {\r\n  const { InputProps, classes, ref, ...other } = inputProps;\r\n\r\n  return (\r\n    <TextField\r\n      InputProps={{\r\n        inputRef: ref,\r\n        classes: {\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        },\r\n        ...InputProps,\r\n      }}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nfunction renderSuggestion(suggestionProps) {\r\n  const { suggestion, index, itemProps, highlightedIndex, selectedItem } = suggestionProps;\r\n  const isHighlighted = highlightedIndex === index;\r\n  const isSelected = (selectedItem || '').indexOf(suggestion.label) > -1;\r\n\r\n  return (\r\n    <MenuItem\r\n      {...itemProps}\r\n      key={suggestion.label}\r\n      selected={isHighlighted}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: isSelected ? 500 : 400,\r\n      }}\r\n    >\r\n      {suggestion.label}\r\n    </MenuItem>\r\n  );\r\n}\r\nrenderSuggestion.propTypes = {\r\n  highlightedIndex: PropTypes.number,\r\n  index: PropTypes.number,\r\n  itemProps: PropTypes.object,\r\n  selectedItem: PropTypes.string,\r\n  suggestion: PropTypes.shape({ label: PropTypes.string }).isRequired,\r\n};\r\n\r\nfunction getSuggestions(value, { showEmpty = false } = {}) {\r\n  const inputValue = deburr(value.trim()).toLowerCase();\r\n  const inputLength = inputValue.length;\r\n  let count = 0;\r\n\r\n  return inputLength === 0 && !showEmpty\r\n    ? []\r\n    : suggestions.filter(suggestion => {\r\n        const keep =\r\n          count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\r\n\r\n        if (keep) {\r\n          count += 1;\r\n        }\r\n\r\n        return keep;\r\n      });\r\n}\r\n\r\nfunction DownshiftMultiple(props) {\r\n  const { classes } = props;\r\n  const [inputValue, setInputValue] = React.useState('');\r\n  const [selectedItem, setSelectedItem] = React.useState([]);\r\n\r\n  function handleKeyDown(event) {\r\n    if (selectedItem.length && !inputValue.length && event.key === 'Backspace') {\r\n      setSelectedItem(selectedItem.slice(0, selectedItem.length - 1));\r\n    }\r\n  }\r\n\r\n  function handleInputChange(event) {\r\n    setInputValue(event.target.value);\r\n  }\r\n\r\n  function handleChange(item) {\r\n    let newSelectedItem = [...selectedItem];\r\n    if (newSelectedItem.indexOf(item) === -1) {\r\n      newSelectedItem = [...newSelectedItem, item];\r\n    }\r\n    setInputValue('');\r\n    setSelectedItem(newSelectedItem);\r\n  }\r\n\r\n  const handleDelete = item => () => {\r\n    const newSelectedItem = [...selectedItem];\r\n    newSelectedItem.splice(newSelectedItem.indexOf(item), 1);\r\n    setSelectedItem(newSelectedItem);\r\n  };\r\n\r\n  return (\r\n    <Downshift\r\n      id=\"downshift-multiple\"\r\n      inputValue={inputValue}\r\n      onChange={handleChange}\r\n      selectedItem={selectedItem}\r\n    >\r\n      {({\r\n        getInputProps,\r\n        getItemProps,\r\n        getLabelProps,\r\n        isOpen,\r\n        inputValue: inputValue2,\r\n        selectedItem: selectedItem2,\r\n        highlightedIndex,\r\n      }) => {\r\n        const { onBlur, onChange, onFocus, ...inputProps } = getInputProps({\r\n          onKeyDown: handleKeyDown,\r\n          placeholder: 'Select multiple countries',\r\n        });\r\n\r\n        return (\r\n          <div className={classes.container}>\r\n            {renderInput({\r\n              fullWidth: true,\r\n              classes,\r\n              label: 'Countries',\r\n              InputLabelProps: getLabelProps(),\r\n              InputProps: {\r\n                startAdornment: selectedItem.map(item => (\r\n                  <Chip\r\n                    key={item}\r\n                    tabIndex={-1}\r\n                    label={item}\r\n                    className={classes.chip}\r\n                    onDelete={handleDelete(item)}\r\n                  />\r\n                )),\r\n                onBlur,\r\n                onChange: event => {\r\n                  handleInputChange(event);\r\n                  onChange(event);\r\n                },\r\n                onFocus,\r\n              },\r\n              inputProps,\r\n            })}\r\n\r\n            {isOpen ? (\r\n              <Paper className={classes.paper} square>\r\n                {getSuggestions(inputValue2).map((suggestion, index) =>\r\n                  renderSuggestion({\r\n                    suggestion,\r\n                    index,\r\n                    itemProps: getItemProps({ item: suggestion.label }),\r\n                    highlightedIndex,\r\n                    selectedItem: selectedItem2,\r\n                  }),\r\n                )}\r\n              </Paper>\r\n            ) : null}\r\n          </div>\r\n        );\r\n      }}\r\n    </Downshift>\r\n  );\r\n}\r\n\r\nDownshiftMultiple.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    height: 250,\r\n  },\r\n  container: {\r\n    flexGrow: 1,\r\n    position: 'relative',\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25),\r\n  },\r\n  inputRoot: {\r\n    flexWrap: 'wrap',\r\n  },\r\n  inputInput: {\r\n    width: 'auto',\r\n    flexGrow: 1,\r\n  },\r\n  divider: {\r\n    height: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nlet popperNode;\r\n\r\nexport default function IntegrationDownshift() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Downshift id=\"downshift-simple\">\r\n        {({\r\n          getInputProps,\r\n          getItemProps,\r\n          getLabelProps,\r\n          getMenuProps,\r\n          highlightedIndex,\r\n          inputValue,\r\n          isOpen,\r\n          selectedItem,\r\n        }) => {\r\n          const { onBlur, onFocus, ...inputProps } = getInputProps({\r\n            placeholder: 'Search for a country (start with a)',\r\n          });\r\n\r\n          return (\r\n            <div className={classes.container}>\r\n              {renderInput({\r\n                fullWidth: true,\r\n                classes,\r\n                label: 'Country',\r\n                InputLabelProps: getLabelProps({ shrink: true }),\r\n                InputProps: { onBlur, onFocus },\r\n                inputProps,\r\n              })}\r\n\r\n              <div {...getMenuProps()}>\r\n                {isOpen ? (\r\n                  <Paper className={classes.paper} square>\r\n                    {getSuggestions(inputValue).map((suggestion, index) =>\r\n                      renderSuggestion({\r\n                        suggestion,\r\n                        index,\r\n                        itemProps: getItemProps({ item: suggestion.label }),\r\n                        highlightedIndex,\r\n                        selectedItem,\r\n                      }),\r\n                    )}\r\n                  </Paper>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Downshift>\r\n      <div className={classes.divider} />\r\n      <DownshiftMultiple classes={classes} />\r\n      <div className={classes.divider} />\r\n      <Downshift id=\"downshift-popper\">\r\n        {({\r\n          getInputProps,\r\n          getItemProps,\r\n          getLabelProps,\r\n          getMenuProps,\r\n          highlightedIndex,\r\n          inputValue,\r\n          isOpen,\r\n          selectedItem,\r\n        }) => {\r\n          const { onBlur, onFocus, ...inputProps } = getInputProps({\r\n            placeholder: 'With Popper',\r\n          });\r\n\r\n          return (\r\n            <div className={classes.container}>\r\n              {renderInput({\r\n                fullWidth: true,\r\n                classes,\r\n                label: 'Country',\r\n                InputProps: { onBlur, onFocus },\r\n                InputLabelProps: getLabelProps({ shrink: true }),\r\n                inputProps,\r\n                ref: node => {\r\n                  popperNode = node;\r\n                },\r\n              })}\r\n\r\n              <Popper open={isOpen} anchorEl={popperNode}>\r\n                <div {...(isOpen ? getMenuProps({}, { suppressRefError: true }) : {})}>\r\n                  <Paper\r\n                    square\r\n                    style={{ marginTop: 8, width: popperNode ? popperNode.clientWidth : undefined }}\r\n                  >\r\n                    {getSuggestions(inputValue).map((suggestion, index) =>\r\n                      renderSuggestion({\r\n                        suggestion,\r\n                        index,\r\n                        itemProps: getItemProps({ item: suggestion.label }),\r\n                        highlightedIndex,\r\n                        selectedItem,\r\n                      }),\r\n                    )}\r\n                  </Paper>\r\n                </div>\r\n              </Popper>\r\n            </div>\r\n          );\r\n        }}\r\n      </Downshift>\r\n      <div className={classes.divider} />\r\n      <Downshift id=\"downshift-options\">\r\n        {({\r\n          clearSelection,\r\n          getInputProps,\r\n          getItemProps,\r\n          getLabelProps,\r\n          getMenuProps,\r\n          highlightedIndex,\r\n          inputValue,\r\n          isOpen,\r\n          openMenu,\r\n          selectedItem,\r\n        }) => {\r\n          const { onBlur, onChange, onFocus, ...inputProps } = getInputProps({\r\n            onChange: event => {\r\n              if (event.target.value === '') {\r\n                clearSelection();\r\n              }\r\n            },\r\n            onFocus: openMenu,\r\n            placeholder: 'With the clear & show empty options',\r\n          });\r\n\r\n          return (\r\n            <div className={classes.container}>\r\n              {renderInput({\r\n                fullWidth: true,\r\n                classes,\r\n                label: 'Countries',\r\n                InputLabelProps: getLabelProps({ shrink: true }),\r\n                InputProps: { onBlur, onChange, onFocus },\r\n                inputProps,\r\n              })}\r\n\r\n              <div {...getMenuProps()}>\r\n                {isOpen ? (\r\n                  <Paper className={classes.paper} square>\r\n                    {getSuggestions(inputValue, { showEmpty: true }).map((suggestion, index) =>\r\n                      renderSuggestion({\r\n                        suggestion,\r\n                        index,\r\n                        itemProps: getItemProps({ item: suggestion.label }),\r\n                        highlightedIndex,\r\n                        selectedItem,\r\n                      }),\r\n                    )}\r\n                  </Paper>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Downshift>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport Select from 'react-select';\r\nimport { emphasize, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst suggestions = [\r\n  { label: 'Afghanistan' },\r\n  { label: 'Aland Islands' },\r\n  { label: 'Albania' },\r\n  { label: 'Algeria' },\r\n  { label: 'American Samoa' },\r\n  { label: 'Andorra' },\r\n  { label: 'Angola' },\r\n  { label: 'Anguilla' },\r\n  { label: 'Antarctica' },\r\n  { label: 'Antigua and Barbuda' },\r\n  { label: 'Argentina' },\r\n  { label: 'Armenia' },\r\n  { label: 'Aruba' },\r\n  { label: 'Australia' },\r\n  { label: 'Austria' },\r\n  { label: 'Azerbaijan' },\r\n  { label: 'Bahamas' },\r\n  { label: 'Bahrain' },\r\n  { label: 'Bangladesh' },\r\n  { label: 'Barbados' },\r\n  { label: 'Belarus' },\r\n  { label: 'Belgium' },\r\n  { label: 'Belize' },\r\n  { label: 'Benin' },\r\n  { label: 'Bermuda' },\r\n  { label: 'Bhutan' },\r\n  { label: 'Bolivia, Plurinational State of' },\r\n  { label: 'Bonaire, Sint Eustatius and Saba' },\r\n  { label: 'Bosnia and Herzegovina' },\r\n  { label: 'Botswana' },\r\n  { label: 'Bouvet Island' },\r\n  { label: 'Brazil' },\r\n  { label: 'British Indian Ocean Territory' },\r\n  { label: 'Brunei Darussalam' },\r\n].map(suggestion => ({\r\n  value: suggestion.label,\r\n  label: suggestion.label,\r\n}));\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    height: 250,\r\n  },\r\n  input: {\r\n    display: 'flex',\r\n    padding: 0,\r\n    height: 'auto',\r\n  },\r\n  valueContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25),\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\r\n      0.08,\r\n    ),\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  singleValue: {\r\n    fontSize: 16,\r\n  },\r\n  placeholder: {\r\n    position: 'absolute',\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16,\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  divider: {\r\n    height: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps },\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps,\r\n        },\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400,\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool,\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused,\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool,\r\n  removeProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object,\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer,\r\n};\r\n\r\nexport default function IntegrationReactSelect() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [single, setSingle] = React.useState(null);\r\n  const [multi, setMulti] = React.useState(null);\r\n\r\n  function handleChangeSingle(value) {\r\n    setSingle(value);\r\n  }\r\n\r\n  function handleChangeMulti(value) {\r\n    setMulti(value);\r\n  }\r\n\r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      '& input': {\r\n        font: 'inherit',\r\n      },\r\n    }),\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <NoSsr>\r\n        <Select\r\n          classes={classes}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-single\"\r\n          TextFieldProps={{\r\n            label: 'Country',\r\n            InputLabelProps: {\r\n              htmlFor: 'react-select-single',\r\n              shrink: true,\r\n            },\r\n            placeholder: 'Search a country (start with a)',\r\n          }}\r\n          options={suggestions}\r\n          components={components}\r\n          value={single}\r\n          onChange={handleChangeSingle}\r\n        />\r\n        <div className={classes.divider} />\r\n        <Select\r\n          classes={classes}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-multiple\"\r\n          TextFieldProps={{\r\n            label: 'Countries',\r\n            InputLabelProps: {\r\n              htmlFor: 'react-select-multiple',\r\n              shrink: true,\r\n            },\r\n            placeholder: 'Select multiple countries',\r\n          }}\r\n          options={suggestions}\r\n          components={components}\r\n          value={multi}\r\n          onChange={handleChangeMulti}\r\n          isMulti\r\n        />\r\n      </NoSsr>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport deburr from 'lodash/deburr';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport match from 'autosuggest-highlight/match';\r\nimport parse from 'autosuggest-highlight/parse';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst suggestions = [\r\n  { label: 'Afghanistan' },\r\n  { label: 'Aland Islands' },\r\n  { label: 'Albania' },\r\n  { label: 'Algeria' },\r\n  { label: 'American Samoa' },\r\n  { label: 'Andorra' },\r\n  { label: 'Angola' },\r\n  { label: 'Anguilla' },\r\n  { label: 'Antarctica' },\r\n  { label: 'Antigua and Barbuda' },\r\n  { label: 'Argentina' },\r\n  { label: 'Armenia' },\r\n  { label: 'Aruba' },\r\n  { label: 'Australia' },\r\n  { label: 'Austria' },\r\n  { label: 'Azerbaijan' },\r\n  { label: 'Bahamas' },\r\n  { label: 'Bahrain' },\r\n  { label: 'Bangladesh' },\r\n  { label: 'Barbados' },\r\n  { label: 'Belarus' },\r\n  { label: 'Belgium' },\r\n  { label: 'Belize' },\r\n  { label: 'Benin' },\r\n  { label: 'Bermuda' },\r\n  { label: 'Bhutan' },\r\n  { label: 'Bolivia, Plurinational State of' },\r\n  { label: 'Bonaire, Sint Eustatius and Saba' },\r\n  { label: 'Bosnia and Herzegovina' },\r\n  { label: 'Botswana' },\r\n  { label: 'Bouvet Island' },\r\n  { label: 'Brazil' },\r\n  { label: 'British Indian Ocean Territory' },\r\n  { label: 'Brunei Darussalam' },\r\n];\r\n\r\nfunction renderInputComponent(inputProps) {\r\n  const { classes, inputRef = () => {}, ref, ...other } = inputProps;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputRef: node => {\r\n          ref(node);\r\n          inputRef(node);\r\n        },\r\n        classes: {\r\n          input: classes.input,\r\n        },\r\n      }}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nfunction renderSuggestion(suggestion, { query, isHighlighted }) {\r\n  const matches = match(suggestion.label, query);\r\n  const parts = parse(suggestion.label, matches);\r\n\r\n  return (\r\n    <MenuItem selected={isHighlighted} component=\"div\">\r\n      <div>\r\n        {parts.map(part => (\r\n          <span key={part.text} style={{ fontWeight: part.highlight ? 500 : 400 }}>\r\n            {part.text}\r\n          </span>\r\n        ))}\r\n      </div>\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nfunction getSuggestions(value) {\r\n  const inputValue = deburr(value.trim()).toLowerCase();\r\n  const inputLength = inputValue.length;\r\n  let count = 0;\r\n\r\n  return inputLength === 0\r\n    ? []\r\n    : suggestions.filter(suggestion => {\r\n        const keep =\r\n          count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\r\n\r\n        if (keep) {\r\n          count += 1;\r\n        }\r\n\r\n        return keep;\r\n      });\r\n}\r\n\r\nfunction getSuggestionValue(suggestion) {\r\n  return suggestion.label;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: 250,\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    position: 'relative',\r\n  },\r\n  suggestionsContainerOpen: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  suggestion: {\r\n    display: 'block',\r\n  },\r\n  suggestionsList: {\r\n    margin: 0,\r\n    padding: 0,\r\n    listStyleType: 'none',\r\n  },\r\n  divider: {\r\n    height: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function IntegrationAutosuggest() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [state, setState] = React.useState({\r\n    single: '',\r\n    popper: '',\r\n  });\r\n\r\n  const [stateSuggestions, setSuggestions] = React.useState([]);\r\n\r\n  const handleSuggestionsFetchRequested = ({ value }) => {\r\n    setSuggestions(getSuggestions(value));\r\n  };\r\n\r\n  const handleSuggestionsClearRequested = () => {\r\n    setSuggestions([]);\r\n  };\r\n\r\n  const handleChange = name => (event, { newValue }) => {\r\n    setState({\r\n      ...state,\r\n      [name]: newValue,\r\n    });\r\n  };\r\n\r\n  const autosuggestProps = {\r\n    renderInputComponent,\r\n    suggestions: stateSuggestions,\r\n    onSuggestionsFetchRequested: handleSuggestionsFetchRequested,\r\n    onSuggestionsClearRequested: handleSuggestionsClearRequested,\r\n    getSuggestionValue,\r\n    renderSuggestion,\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Autosuggest\r\n        {...autosuggestProps}\r\n        inputProps={{\r\n          classes,\r\n          id: 'react-autosuggest-simple',\r\n          label: 'Country',\r\n          placeholder: 'Search a country (start with a)',\r\n          value: state.single,\r\n          onChange: handleChange('single'),\r\n        }}\r\n        theme={{\r\n          container: classes.container,\r\n          suggestionsContainerOpen: classes.suggestionsContainerOpen,\r\n          suggestionsList: classes.suggestionsList,\r\n          suggestion: classes.suggestion,\r\n        }}\r\n        renderSuggestionsContainer={options => (\r\n          <Paper {...options.containerProps} square>\r\n            {options.children}\r\n          </Paper>\r\n        )}\r\n      />\r\n      <div className={classes.divider} />\r\n      <Autosuggest\r\n        {...autosuggestProps}\r\n        inputProps={{\r\n          classes,\r\n          id: 'react-autosuggest-popper',\r\n          label: 'Country',\r\n          placeholder: 'With Popper',\r\n          value: state.popper,\r\n          onChange: handleChange('popper'),\r\n          inputRef: node => {\r\n            setAnchorEl(node);\r\n          },\r\n          InputLabelProps: {\r\n            shrink: true,\r\n          },\r\n        }}\r\n        theme={{\r\n          suggestionsList: classes.suggestionsList,\r\n          suggestion: classes.suggestion,\r\n        }}\r\n        renderSuggestionsContainer={options => (\r\n          <Popper anchorEl={anchorEl} open={Boolean(options.children)}>\r\n            <Paper\r\n              square\r\n              {...options.containerProps}\r\n              style={{ width: anchorEl ? anchorEl.clientWidth : undefined }}\r\n            >\r\n              {options.children}\r\n            </Paper>\r\n          </Popper>\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\n","import React from \"react\";\r\nimport { Redirect, Switch } from \"react-router-dom\";\r\nimport ButtonsExamplesPage from \"./ButtonsExamplesPage\";\r\nimport CheckboxesExamplesPage from \"./CheckboxesExamplesPage\";\r\nimport PickersExamplesPage from \"./PickersExamplesPage\";\r\nimport RadioButtonsExamplesPage from \"./RadioButtonsExamplesPage\";\r\nimport SelectsExamplesPage from \"./SelectsExamplesPage\";\r\nimport SwitchesExamplesPage from \"./SwitchesExamplesPage\";\r\nimport TextFieldsExamplesPage from \"./TextFieldsExamplesPage\";\r\nimport TransferListExamplesPage from \"./TransferListExamplesPage\";\r\nimport AutocompleteExamplesPage from \"./AutocompleteExamplesPage\";\r\nimport { ContentRoute } from \"../../../../_metronic/layout\";\r\n\r\nexport function InputsPage() {\r\n  return (\r\n    <Switch>\r\n      <Redirect\r\n        exact={true}\r\n        from=\"/google-material/inputs\"\r\n        to=\"/google-material/inputs/autocomplete\"\r\n      />\r\n\r\n      <ContentRoute\r\n        path=\"/google-material/inputs/autocomplete\"\r\n        component={AutocompleteExamplesPage}\r\n      />\r\n      <ContentRoute\r\n        path=\"/google-material/inputs/buttons\"\r\n        component={ButtonsExamplesPage}\r\n      />\r\n      <ContentRoute\r\n        path=\"/google-material/inputs/checkboxes\"\r\n        component={CheckboxesExamplesPage}\r\n      />\r\n      <ContentRoute\r\n        path=\"/google-material/inputs/pickers\"\r\n        component={PickersExamplesPage}\r\n      />\r\n      <ContentRoute\r\n        path=\"/google-material/inputs/radio-buttons\"\r\n        component={RadioButtonsExamplesPage}\r\n      />\r\n      <ContentRoute\r\n        path=\"/google-material/inputs/selects\"\r\n        component={SelectsExamplesPage}\r\n      />\r\n      <ContentRoute\r\n        path=\"/google-material/inputs/switches\"\r\n        component={SwitchesExamplesPage}\r\n      />\r\n      <ContentRoute\r\n        path=\"/google-material/inputs/text-fields\"\r\n        component={TextFieldsExamplesPage}\r\n      />\r\n      <ContentRoute\r\n        path=\"/google-material/inputs/transfer-list\"\r\n        component={TransferListExamplesPage}\r\n      />\r\n    </Switch>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Grid, Avatar} from \"@material-ui/core\";\r\nimport {deepOrange, deepPurple, green, pink} from \"@material-ui/core/colors\";\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nimport PageviewIcon from \"@material-ui/icons/Pageview\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n// Example 1\r\nconst useStyles1 = makeStyles({\r\n  avatar: {\r\n    margin: 10\r\n  },\r\n  bigAvatar: {\r\n    margin: 10,\r\n    width: 60,\r\n    height: 60\r\n  }\r\n});\r\n\r\n// Example 2\r\nconst useStyles2 = makeStyles({\r\n  avatar: {\r\n    margin: 10\r\n  },\r\n  orangeAvatar: {\r\n    margin: 10,\r\n    color: \"#fff\",\r\n    backgroundColor: deepOrange[500]\r\n  },\r\n  purpleAvatar: {\r\n    margin: 10,\r\n    color: \"#fff\",\r\n    backgroundColor: deepPurple[500]\r\n  }\r\n});\r\n\r\n// Example 3\r\nconst useStyles3 = makeStyles({\r\n  avatar: {\r\n    margin: 10\r\n  },\r\n  pinkAvatar: {\r\n    margin: 10,\r\n    color: \"#fff\",\r\n    backgroundColor: pink[500]\r\n  },\r\n  greenAvatar: {\r\n    margin: 10,\r\n    color: \"#fff\",\r\n    backgroundColor: green[500]\r\n  }\r\n});\r\n\r\nexport default function AvatarsExamplesPage() {\r\n  // Example 1\r\n  const classes1 = useStyles1();\r\n\r\n  // Example 2\r\n  const classes2 = useStyles2();\r\n\r\n  // Example 3\r\n  const classes3 = useStyles3();\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          Avatars are found throughout material design with uses in everything\r\n          from tables to dialog menus.\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/avatars/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Image avatars\">\r\n            <span>\r\n              Image avatars can be created by passing standard <code>img</code>{\" \"}\r\n              props <code>src</code> or <code>srcSet</code> into the component.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n              <Avatar\r\n                alt=\"Remy Sharp\"\r\n                src=\"https://material-ui.com/static/images/avatar/1.jpg\"\r\n                className={classes1.avatar}\r\n              />\r\n              <Avatar\r\n                alt=\"Remy Sharp\"\r\n                src=\"https://material-ui.com/static/images/avatar/1.jpg\"\r\n                className={classes1.bigAvatar}\r\n              />\r\n            </Grid>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"Letter avatars\">\r\n            <span>\r\n              Avatars containing simple characters can be created by passing\r\n              your string as <code>children</code>.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n              <Avatar className={classes2.avatar}>H</Avatar>\r\n              <Avatar className={classes2.orangeAvatar}>N</Avatar>\r\n              <Avatar className={classes2.purpleAvatar}>OP</Avatar>\r\n            </Grid>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample jsCode={jsCode3} beforeCodeTitle=\"Icon avatars\">\r\n            <span>\r\n              Icon avatars are created by passing an icon as{\" \"}\r\n              <code>children</code>.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n              <Avatar className={classes3.avatar}>\r\n                <FolderIcon />\r\n              </Avatar>\r\n              <Avatar className={classes3.pinkAvatar}>\r\n                <PageviewIcon />\r\n              </Avatar>\r\n              <Avatar className={classes3.greenAvatar}>\r\n                <AssignmentIcon />\r\n              </Avatar>\r\n            </Grid>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>{\" \"}\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    margin: 10,\r\n  },\r\n  bigAvatar: {\r\n    margin: 10,\r\n    width: 60,\r\n    height: 60,\r\n  },\r\n});\r\n\r\nexport default function ImageAvatars() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container justify=\"center\" alignItems=\"center\">\r\n      <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" className={classes.avatar} />\r\n      <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" className={classes.bigAvatar} />\r\n    </Grid>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { deepOrange, deepPurple } from '@material-ui/core/colors';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    margin: 10,\r\n  },\r\n  orangeAvatar: {\r\n    margin: 10,\r\n    color: '#fff',\r\n    backgroundColor: deepOrange[500],\r\n  },\r\n  purpleAvatar: {\r\n    margin: 10,\r\n    color: '#fff',\r\n    backgroundColor: deepPurple[500],\r\n  },\r\n});\r\n\r\nexport default function LetterAvatars() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container justify=\"center\" alignItems=\"center\">\r\n      <Avatar className={classes.avatar}>H</Avatar>\r\n      <Avatar className={classes.orangeAvatar}>N</Avatar>\r\n      <Avatar className={classes.purpleAvatar}>OP</Avatar>\r\n    </Grid>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { green, pink } from '@material-ui/core/colors';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport PageviewIcon from '@material-ui/icons/Pageview';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    margin: 10,\r\n  },\r\n  pinkAvatar: {\r\n    margin: 10,\r\n    color: '#fff',\r\n    backgroundColor: pink[500],\r\n  },\r\n  greenAvatar: {\r\n    margin: 10,\r\n    color: '#fff',\r\n    backgroundColor: green[500],\r\n  },\r\n});\r\n\r\nexport default function IconAvatars() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container justify=\"center\" alignItems=\"center\">\r\n      <Avatar className={classes.avatar}>\r\n        <FolderIcon />\r\n      </Avatar>\r\n      <Avatar className={classes.pinkAvatar}>\r\n        <PageviewIcon />\r\n      </Avatar>\r\n      <Avatar className={classes.greenAvatar}>\r\n        <AssignmentIcon />\r\n      </Avatar>\r\n    </Grid>\r\n  );\r\n}\r\n`;\r\n","/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport {makeStyles, withStyles} from \"@material-ui/core/styles\";\r\nimport {\r\n  Badge,\r\n  IconButton,\r\n  AppBar,\r\n  Tabs,\r\n  Tab,\r\n  Typography,\r\n  Button,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Divider,\r\n  Switch\r\n} from \"@material-ui/core\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n// Example 1\r\nconst useStyles1 = makeStyles(theme => ({\r\n  margin: {\r\n    margin: theme.spacing(2)\r\n  },\r\n  padding: {\r\n    padding: theme.spacing(0, 2)\r\n  }\r\n}));\r\n\r\n// Example 2\r\nconst useStyles2 = makeStyles(theme => ({\r\n  margin: {\r\n    margin: theme.spacing(2),\r\n    marginRight: theme.spacing(3)\r\n  }\r\n}));\r\n\r\n// Example 3\r\nconst useStyles3 = makeStyles(theme => ({\r\n  margin: {\r\n    margin: theme.spacing(2)\r\n  }\r\n}));\r\n\r\n// Example 4\r\nconst useStyles4 = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    width: \"100%\"\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  divider: {\r\n    width: \"100%\"\r\n  },\r\n  row: {\r\n    marginTop: theme.spacing(2)\r\n  }\r\n}));\r\n\r\n// Example 5\r\nconst StyledBadge = withStyles(theme => ({\r\n  badge: {\r\n    top: \"50%\",\r\n    right: -3,\r\n    // The border color match the background color.\r\n    border: `2px solid ${\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[200]\r\n        : theme.palette.grey[900]\r\n    }`\r\n  }\r\n}))(Badge);\r\n\r\nexport default function BadgesExamplesPage() {\r\n  // Example 1\r\n  const classes1 = useStyles1();\r\n\r\n  // Example 2\r\n  const classes2 = useStyles2();\r\n\r\n  // Example 3\r\n  const classes3 = useStyles3();\r\n\r\n  // Example 4\r\n  const classes4 = useStyles4();\r\n  const [invisible4, setInvisible4] = React.useState(false);\r\n\r\n  function handleBadgeVisibility4() {\r\n    setInvisible4(!invisible4);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          Badge generates a small badge to the top-right of its child(ren).\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/badges/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Simple Badges\">\r\n            <span>\r\n              Examples of badges containing text, using primary and secondary\r\n              colors. The badge is applied to its children.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\" />\r\n            <div>\r\n              <div>\r\n                <Badge\r\n                  className={classes1.margin}\r\n                  badgeContent={4}\r\n                  color=\"primary\"\r\n                >\r\n                  <MailIcon />\r\n                </Badge>\r\n                <Badge\r\n                  className={classes1.margin}\r\n                  badgeContent={10}\r\n                  color=\"secondary\"\r\n                >\r\n                  <MailIcon />\r\n                </Badge>\r\n                <IconButton\r\n                  aria-label=\"4 pending messages\"\r\n                  className={classes1.margin}\r\n                >\r\n                  <Badge badgeContent={4} color=\"primary\">\r\n                    <MailIcon />\r\n                  </Badge>\r\n                </IconButton>\r\n              </div>\r\n              <AppBar position=\"static\" className={classes1.margin}>\r\n                <Tabs value={0}>\r\n                  <Tab\r\n                    label={\r\n                      <Badge\r\n                        className={classes1.padding}\r\n                        color=\"secondary\"\r\n                        badgeContent={4}\r\n                      >\r\n                        Item One\r\n                      </Badge>\r\n                    }\r\n                  />\r\n                  <Tab label=\"Item Two\" />\r\n                  <Tab label=\"Item Three\" />\r\n                </Tabs>\r\n              </AppBar>\r\n              <Badge\r\n                color=\"primary\"\r\n                badgeContent={4}\r\n                className={classes1.margin}\r\n              >\r\n                <Typography className={classes1.padding}>Typography</Typography>\r\n              </Badge>\r\n              <Badge\r\n                color=\"primary\"\r\n                badgeContent={4}\r\n                className={classes1.margin}\r\n              >\r\n                <Button variant=\"contained\">Button</Button>\r\n              </Badge>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode3} beforeCodeTitle=\"Dot Badge\">\r\n            <span>\r\n              The <code>dot</code> property changes a badge into a small dot.\r\n              This can be used as a notification that something has changed\r\n              without giving a count.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <div>\r\n                <Badge\r\n                  className={classes3.margin}\r\n                  color=\"primary\"\r\n                  variant=\"dot\"\r\n                >\r\n                  <MailIcon />\r\n                </Badge>\r\n                <Badge\r\n                  className={classes3.margin}\r\n                  color=\"secondary\"\r\n                  variant=\"dot\"\r\n                >\r\n                  <MailIcon />\r\n                </Badge>\r\n              </div>\r\n              <Badge color=\"primary\" className={classes3.margin} variant=\"dot\">\r\n                <Typography>Typography</Typography>\r\n              </Badge>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode5} beforeCodeTitle=\"Customized badges\">\r\n            <span>Here is an example of customizing the component.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <IconButton aria-label=\"Cart\">\r\n              <StyledBadge badgeContent={4} color=\"primary\">\r\n                <ShoppingCartIcon />\r\n              </StyledBadge>\r\n            </IconButton>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"Maximum Value\">\r\n            <span>\r\n              You can use the <code>max</code> property to cap the value of the\r\n              badge content.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <React.Fragment>\r\n              <Badge\r\n                className={classes2.margin}\r\n                badgeContent={99}\r\n                color=\"primary\"\r\n              >\r\n                <MailIcon />\r\n              </Badge>\r\n              <Badge\r\n                className={classes2.margin}\r\n                badgeContent={100}\r\n                color=\"primary\"\r\n              >\r\n                <MailIcon />\r\n              </Badge>\r\n              <Badge\r\n                className={classes2.margin}\r\n                badgeContent={1000}\r\n                max={999}\r\n                color=\"primary\"\r\n              >\r\n                <MailIcon />\r\n              </Badge>\r\n            </React.Fragment>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode4} beforeCodeTitle=\"Badge visibility\">\r\n            <span className=\"pb-3\">\r\n              The visibility of badges can be controlled using the invisible\r\n              property.\r\n            </span>\r\n            <div>\r\n              The badge auto hides with badgeContent is zero. You can override\r\n              this with the <code>showZero</code> property.\r\n            </div>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes4.root}>\r\n              <div className={classes4.row}>\r\n                <Badge\r\n                  color=\"secondary\"\r\n                  badgeContent={4}\r\n                  invisible={invisible4}\r\n                  className={classes4.margin}\r\n                >\r\n                  <MailIcon />\r\n                </Badge>\r\n                <Badge\r\n                  color=\"secondary\"\r\n                  variant=\"dot\"\r\n                  invisible={invisible4}\r\n                  className={classes4.margin}\r\n                >\r\n                  <MailIcon />\r\n                </Badge>\r\n              </div>\r\n              <FormGroup row>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Switch\r\n                      color=\"primary\"\r\n                      checked={!invisible4}\r\n                      onChange={handleBadgeVisibility4}\r\n                    />\r\n                  }\r\n                  label=\"Show Badge\"\r\n                />\r\n              </FormGroup>\r\n              <Divider className={classes4.divider} />\r\n              <div className={classes4.row}>\r\n                <Badge\r\n                  color=\"secondary\"\r\n                  badgeContent={0}\r\n                  className={classes4.margin}\r\n                >\r\n                  <MailIcon />\r\n                </Badge>\r\n                <Badge\r\n                  color=\"secondary\"\r\n                  badgeContent={0}\r\n                  showZero\r\n                  className={classes4.margin}\r\n                >\r\n                  <MailIcon />\r\n                </Badge>\r\n              </div>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  margin: {\r\n    margin: theme.spacing(2),\r\n  },\r\n  padding: {\r\n    padding: theme.spacing(0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SimpleBadge() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Badge className={classes.margin} badgeContent={4} color=\"primary\">\r\n          <MailIcon />\r\n        </Badge>\r\n        <Badge className={classes.margin} badgeContent={10} color=\"secondary\">\r\n          <MailIcon />\r\n        </Badge>\r\n        <IconButton aria-label=\"4 pending messages\" className={classes.margin}>\r\n          <Badge badgeContent={4} color=\"primary\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n      </div>\r\n      <AppBar position=\"static\" className={classes.margin}>\r\n        <Tabs value={0}>\r\n          <Tab\r\n            label={\r\n              <Badge className={classes.padding} color=\"secondary\" badgeContent={4}>\r\n                Item One\r\n              </Badge>\r\n            }\r\n          />\r\n          <Tab label=\"Item Two\" />\r\n          <Tab label=\"Item Three\" />\r\n        </Tabs>\r\n      </AppBar>\r\n      <Badge color=\"primary\" badgeContent={4} className={classes.margin}>\r\n        <Typography className={classes.padding}>Typography</Typography>\r\n      </Badge>\r\n      <Badge color=\"primary\" badgeContent={4} className={classes.margin}>\r\n        <Button variant=\"contained\">Button</Button>\r\n      </Badge>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  margin: {\r\n    margin: theme.spacing(2),\r\n    marginRight: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function BadgeMax() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Badge className={classes.margin} badgeContent={99} color=\"primary\">\r\n        <MailIcon />\r\n      </Badge>\r\n      <Badge className={classes.margin} badgeContent={100} color=\"primary\">\r\n        <MailIcon />\r\n      </Badge>\r\n      <Badge className={classes.margin} badgeContent={1000} max={999} color=\"primary\">\r\n        <MailIcon />\r\n      </Badge>\r\n    </React.Fragment>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  margin: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function DotBadge() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Badge className={classes.margin} color=\"primary\" variant=\"dot\">\r\n          <MailIcon />\r\n        </Badge>\r\n        <Badge className={classes.margin} color=\"secondary\" variant=\"dot\">\r\n          <MailIcon />\r\n        </Badge>\r\n      </div>\r\n      <Badge color=\"primary\" className={classes.margin} variant=\"dot\">\r\n        <Typography>Typography</Typography>\r\n      </Badge>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode4 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  divider: {\r\n    width: '100%',\r\n  },\r\n  row: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function BadgeVisibility() {\r\n  const classes = useStyles();\r\n  const [invisible, setInvisible] = React.useState(false);\r\n\r\n  function handleBadgeVisibility() {\r\n    setInvisible(!invisible);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.row}>\r\n        <Badge color=\"secondary\" badgeContent={4} invisible={invisible} className={classes.margin}>\r\n          <MailIcon />\r\n        </Badge>\r\n        <Badge color=\"secondary\" variant=\"dot\" invisible={invisible} className={classes.margin}>\r\n          <MailIcon />\r\n        </Badge>\r\n      </div>\r\n      <FormGroup row>\r\n        <FormControlLabel\r\n          control={<Switch color=\"primary\" checked={!invisible} onChange={handleBadgeVisibility} />}\r\n          label=\"Show Badge\"\r\n        />\r\n      </FormGroup>\r\n      <Divider className={classes.divider} />\r\n      <div className={classes.row}>\r\n        <Badge color=\"secondary\" badgeContent={0} className={classes.margin}>\r\n          <MailIcon />\r\n        </Badge>\r\n        <Badge color=\"secondary\" badgeContent={0} showZero className={classes.margin}>\r\n          <MailIcon />\r\n        </Badge>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode5 = `\r\nimport React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\n\r\nconst StyledBadge = withStyles(theme => ({\r\n  badge: {\r\n    top: '50%',\r\n    right: -3,\r\n    // The border color match the background color.\r\n    border: \\`2px solid \\${\r\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[900]\r\n    }\\`,\r\n  },\r\n}))(Badge);\r\n\r\nexport default function CustomizedBadges() {\r\n  return (\r\n    <IconButton aria-label=\"Cart\">\r\n      <StyledBadge badgeContent={4} color=\"primary\">\r\n        <ShoppingCartIcon />\r\n      </StyledBadge>\r\n    </IconButton>\r\n  );\r\n}\r\n`;\r\n","/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Chip, Avatar, Paper} from \"@material-ui/core\";\r\nimport FaceIcon from \"@material-ui/icons/Face\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport TagFacesIcon from \"@material-ui/icons/TagFaces\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n// Example 1\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\n// Example 2\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\n// Example 3\r\nconst useStyles3 = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexWrap: \"wrap\",\r\n    padding: theme.spacing(0.5)\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5)\r\n  }\r\n}));\r\n\r\n// Example 4\r\nconst useStyles4 = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\n// Example 5\r\nconst useStyles5 = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nexport default function ChipsExamplesPage() {\r\n  // Example 1\r\n  const classes1 = useStyles1();\r\n\r\n  function handleDelete1() {\r\n    alert(\"You clicked the delete icon.\");\r\n  }\r\n\r\n  function handleClick1() {\r\n    alert(\"You clicked the Chip.\");\r\n  }\r\n\r\n  // Example 2\r\n  const classes2 = useStyles2();\r\n\r\n  function handleDelete2() {\r\n    alert(\"You clicked the delete icon.\");\r\n  }\r\n\r\n  function handleClick2() {\r\n    alert(\"You clicked the Chip.\");\r\n  }\r\n\r\n  // Example 3\r\n  const classes3 = useStyles3();\r\n  const [chipData3, setChipData3] = React.useState([\r\n    { key: 0, label: \"Angular\" },\r\n    { key: 1, label: \"jQuery\" },\r\n    { key: 2, label: \"Polymer\" },\r\n    { key: 3, label: \"React\" },\r\n    { key: 4, label: \"Vue.js\" }\r\n  ]);\r\n\r\n  const handleDelete3 = chipToDelete => () => {\r\n    if (chipToDelete.label === \"React\") {\r\n      alert(\"Why would you want to delete React?! :)\");\r\n      return;\r\n    }\r\n\r\n    setChipData3(chips => chips.filter(chip => chip.key !== chipToDelete.key));\r\n  };\r\n\r\n  // Example 4\r\n  const classes4 = useStyles4();\r\n\r\n  function handleDelete4() {\r\n    alert(\"You clicked the delete icon.\");\r\n  }\r\n\r\n  function handleClick4() {\r\n    alert(\"You clicked the Chip.\");\r\n  }\r\n\r\n  // Example 5\r\n  const classes5 = useStyles5();\r\n\r\n  function handleDelete5() {\r\n    alert(\"You clicked the delete icon.\");\r\n  }\r\n\r\n  function handleClick5() {\r\n    alert(\"You clicked the Chip.\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          Chips are compact elements that represent an input, attribute, or\r\n          action.\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/chips/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode1}\r\n            beforeCodeTitle=\"Chip\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              Examples of Chips, using an image Avatar, SVG Icon Avatar,\r\n              \"Letter\" and (string) Avatar.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes1.root}>\r\n              <Chip label=\"Basic Chip\" className={classes1.chip} />\r\n              <Chip\r\n                avatar={<Avatar>MB</Avatar>}\r\n                label=\"Clickable Chip\"\r\n                onClick={handleClick1}\r\n                className={classes1.chip}\r\n              />\r\n              <Chip\r\n                avatar={\r\n                  <Avatar\r\n                    alt=\"Natacha\"\r\n                    src=\"https://material-ui.com//static/images/avatar/1.jpg\"\r\n                  />\r\n                }\r\n                label=\"Deletable Chip\"\r\n                onDelete={handleDelete1}\r\n                className={classes1.chip}\r\n              />\r\n              <Chip\r\n                avatar={\r\n                  <Avatar>\r\n                    <FaceIcon />\r\n                  </Avatar>\r\n                }\r\n                label=\"Clickable Deletable Chip\"\r\n                onClick={handleClick1}\r\n                onDelete={handleDelete1}\r\n                className={classes1.chip}\r\n              />\r\n              <Chip\r\n                icon={<FaceIcon />}\r\n                label=\"Clickable Deletable Chip\"\r\n                onClick={handleClick1}\r\n                onDelete={handleDelete1}\r\n                className={classes1.chip}\r\n              />\r\n              <Chip\r\n                label=\"Custom delete icon Chip\"\r\n                onClick={handleClick1}\r\n                onDelete={handleDelete1}\r\n                className={classes1.chip}\r\n                deleteIcon={<DoneIcon />}\r\n              />\r\n              <Chip\r\n                label=\"Clickable Link Chip\"\r\n                className={classes1.chip}\r\n                component=\"a\"\r\n                href=\"#chip\"\r\n                clickable\r\n              />\r\n              <Chip\r\n                avatar={<Avatar>MB</Avatar>}\r\n                label=\"Primary Clickable Chip\"\r\n                clickable\r\n                className={classes1.chip}\r\n                color=\"primary\"\r\n                onDelete={handleDelete1}\r\n                deleteIcon={<DoneIcon />}\r\n              />\r\n              <Chip\r\n                icon={<FaceIcon />}\r\n                label=\"Primary Clickable Chip\"\r\n                clickable\r\n                className={classes1.chip}\r\n                color=\"primary\"\r\n                onDelete={handleDelete1}\r\n                deleteIcon={<DoneIcon />}\r\n              />\r\n              <Chip\r\n                label=\"Deletable Primary Chip\"\r\n                onDelete={handleDelete1}\r\n                className={classes1.chip}\r\n                color=\"primary\"\r\n              />\r\n              <Chip\r\n                avatar={\r\n                  <Avatar>\r\n                    <FaceIcon />\r\n                  </Avatar>\r\n                }\r\n                label=\"Deletable Secondary Chip\"\r\n                onDelete={handleDelete1}\r\n                className={classes1.chip}\r\n                color=\"secondary\"\r\n              />\r\n              <Chip\r\n                icon={<FaceIcon />}\r\n                label=\"Deletable Secondary Chip\"\r\n                onDelete={handleDelete1}\r\n                className={classes1.chip}\r\n                color=\"secondary\"\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode3}\r\n            beforeCodeTitle=\"Chip array\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              An example of rendering multiple Chips from an array of values.\r\n              Deleting a chip removes it from the array. Note that since no{\" \"}\r\n              <code>onClick</code> property is defined, the Chip can be focused,\r\n              but does not gain depth while clicked or touched.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <Paper className={classes3.root}>\r\n              {chipData3.map(data => {\r\n                let icon;\r\n\r\n                if (data.label === \"React\") {\r\n                  icon = <TagFacesIcon />;\r\n                }\r\n\r\n                return (\r\n                  <Chip\r\n                    key={data.key}\r\n                    icon={icon}\r\n                    label={data.label}\r\n                    onDelete={handleDelete3(data)}\r\n                    className={classes3.chip}\r\n                  />\r\n                );\r\n              })}\r\n            </Paper>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode5}\r\n            beforeCodeTitle=\"Outlined variant\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <div className={classes5.root}>\r\n              <Chip\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                label=\"Basic Chip\"\r\n                className={classes5.chip}\r\n              />\r\n              <Chip\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                avatar={<Avatar>MB</Avatar>}\r\n                label=\"Clickable Chip\"\r\n                onClick={handleClick5}\r\n                className={classes5.chip}\r\n              />\r\n              <Chip\r\n                size=\"small\"\r\n                avatar={\r\n                  <Avatar\r\n                    alt=\"Natacha\"\r\n                    src=\"https://material-ui.com/static/images/avatar/1.jpg\"\r\n                  />\r\n                }\r\n                label=\"Deletable Chip\"\r\n                onDelete={handleDelete5}\r\n                className={classes5.chip}\r\n              />\r\n              <Chip\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                avatar={\r\n                  <Avatar>\r\n                    <FaceIcon />\r\n                  </Avatar>\r\n                }\r\n                label=\"Clickable Deletable Chip\"\r\n                onClick={handleClick5}\r\n                onDelete={handleDelete5}\r\n                className={classes5.chip}\r\n              />\r\n              <Chip\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                icon={<FaceIcon />}\r\n                label=\"Clickable Deletable Chip\"\r\n                onClick={handleClick5}\r\n                onDelete={handleDelete5}\r\n                className={classes5.chip}\r\n              />\r\n              <Chip\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                label=\"Custom delete icon Chip\"\r\n                onClick={handleClick5}\r\n                onDelete={handleDelete5}\r\n                className={classes5.chip}\r\n                deleteIcon={<DoneIcon />}\r\n              />\r\n              <Chip\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                label=\"Clickable Link Chip\"\r\n                className={classes5.chip}\r\n                component=\"a\"\r\n                href=\"#chip\"\r\n                clickable\r\n              />\r\n              <Chip\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                avatar={<Avatar>MB</Avatar>}\r\n                label=\"Primary Clickable Chip\"\r\n                clickable\r\n                className={classes5.chip}\r\n                color=\"primary\"\r\n                onDelete={handleDelete5}\r\n                deleteIcon={<DoneIcon />}\r\n              />\r\n              <Chip\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                icon={<FaceIcon />}\r\n                label=\"Primary Clickable Chip\"\r\n                clickable\r\n                className={classes5.chip}\r\n                color=\"primary\"\r\n                onDelete={handleDelete5}\r\n                deleteIcon={<DoneIcon />}\r\n              />\r\n              <Chip\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                label=\"Deletable Primary Chip\"\r\n                onDelete={handleDelete5}\r\n                className={classes5.chip}\r\n                color=\"primary\"\r\n              />\r\n              <Chip\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                avatar={\r\n                  <Avatar>\r\n                    <FaceIcon />\r\n                  </Avatar>\r\n                }\r\n                label=\"Deletable Secondary Chip\"\r\n                onDelete={handleDelete5}\r\n                className={classes5.chip}\r\n                color=\"secondary\"\r\n              />\r\n              <Chip\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                icon={<FaceIcon />}\r\n                label=\"Deletable Secondary Chip\"\r\n                onDelete={handleDelete5}\r\n                className={classes5.chip}\r\n                color=\"secondary\"\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode2}\r\n            beforeCodeTitle=\"Outlined Chips\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>Outlined chips offer an alternative style.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes2.root}>\r\n              <Chip\r\n                label=\"Basic Chip\"\r\n                className={classes2.chip}\r\n                variant=\"outlined\"\r\n              />\r\n              <Chip\r\n                avatar={<Avatar>MB</Avatar>}\r\n                label=\"Clickable Chip\"\r\n                onClick={handleClick2}\r\n                className={classes2.chip}\r\n                variant=\"outlined\"\r\n              />\r\n              <Chip\r\n                avatar={\r\n                  <Avatar\r\n                    alt=\"Natacha\"\r\n                    src=\"https://material-ui.com/static/images/avatar/1.jpg\"\r\n                  />\r\n                }\r\n                label=\"Deletable Chip\"\r\n                onDelete={handleDelete2}\r\n                className={classes2.chip}\r\n                variant=\"outlined\"\r\n              />\r\n              <Chip\r\n                avatar={\r\n                  <Avatar>\r\n                    <FaceIcon />\r\n                  </Avatar>\r\n                }\r\n                label=\"Clickable Deletable Chip\"\r\n                onClick={handleClick2}\r\n                onDelete={handleDelete2}\r\n                className={classes2.chip}\r\n                variant=\"outlined\"\r\n              />\r\n              <Chip\r\n                icon={<FaceIcon />}\r\n                label=\"Clickable Deletable Chip\"\r\n                onClick={handleClick2}\r\n                onDelete={handleDelete2}\r\n                className={classes2.chip}\r\n                variant=\"outlined\"\r\n              />\r\n              <Chip\r\n                label=\"Custom delete icon Chip\"\r\n                onClick={handleClick2}\r\n                onDelete={handleDelete2}\r\n                className={classes2.chip}\r\n                deleteIcon={<DoneIcon />}\r\n                variant=\"outlined\"\r\n              />\r\n              <Chip\r\n                label=\"Clickable Link Chip\"\r\n                className={classes2.chip}\r\n                component=\"a\"\r\n                href=\"#chip\"\r\n                clickable\r\n                variant=\"outlined\"\r\n              />\r\n              <Chip\r\n                avatar={<Avatar>MB</Avatar>}\r\n                label=\"Primary Clickable Chip\"\r\n                clickable\r\n                className={classes2.chip}\r\n                color=\"primary\"\r\n                onDelete={handleDelete2}\r\n                deleteIcon={<DoneIcon />}\r\n                variant=\"outlined\"\r\n              />\r\n              <Chip\r\n                icon={<FaceIcon />}\r\n                label=\"Primary Clickable Chip\"\r\n                clickable\r\n                className={classes2.chip}\r\n                color=\"primary\"\r\n                onDelete={handleDelete2}\r\n                deleteIcon={<DoneIcon />}\r\n                variant=\"outlined\"\r\n              />\r\n              <Chip\r\n                label=\"Deletable Primary Chip\"\r\n                onDelete={handleDelete2}\r\n                className={classes2.chip}\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n              />\r\n              <Chip\r\n                avatar={\r\n                  <Avatar>\r\n                    <FaceIcon />\r\n                  </Avatar>\r\n                }\r\n                label=\"Deletable Secondary Chip\"\r\n                onDelete={handleDelete2}\r\n                className={classes2.chip}\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n              />\r\n              <Chip\r\n                icon={<FaceIcon />}\r\n                label=\"Deletable Secondary Chip\"\r\n                onDelete={handleDelete2}\r\n                className={classes2.chip}\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode4}\r\n            beforeCodeTitle=\"Default variant\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              You can use the <code>size</code> prop to define a small Chip.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes4.root}>\r\n              <Chip size=\"small\" label=\"Basic Chip\" className={classes4.chip} />\r\n              <Chip\r\n                size=\"small\"\r\n                avatar={<Avatar>MB</Avatar>}\r\n                label=\"Clickable Chip\"\r\n                onClick={handleClick4}\r\n                className={classes4.chip}\r\n              />\r\n              <Chip\r\n                size=\"small\"\r\n                avatar={\r\n                  <Avatar\r\n                    alt=\"Natacha\"\r\n                    src=\"https://material-ui.com/static/images/avatar/1.jpg\"\r\n                  />\r\n                }\r\n                label=\"Deletable Chip\"\r\n                onDelete={handleDelete4}\r\n                className={classes4.chip}\r\n              />\r\n              <Chip\r\n                size=\"small\"\r\n                avatar={\r\n                  <Avatar>\r\n                    <FaceIcon />\r\n                  </Avatar>\r\n                }\r\n                label=\"Clickable Deletable Chip\"\r\n                onClick={handleClick4}\r\n                onDelete={handleDelete4}\r\n                className={classes4.chip}\r\n              />\r\n              <Chip\r\n                size=\"small\"\r\n                icon={<FaceIcon />}\r\n                label=\"Clickable Deletable Chip\"\r\n                onClick={handleClick4}\r\n                onDelete={handleDelete4}\r\n                className={classes4.chip}\r\n              />\r\n              <Chip\r\n                size=\"small\"\r\n                label=\"Custom delete icon Chip\"\r\n                onClick={handleClick4}\r\n                onDelete={handleDelete4}\r\n                className={classes4.chip}\r\n                deleteIcon={<DoneIcon />}\r\n              />\r\n              <Chip\r\n                size=\"small\"\r\n                label=\"Clickable Link Chip\"\r\n                className={classes4.chip}\r\n                component=\"a\"\r\n                href=\"#chip\"\r\n                clickable\r\n              />\r\n              <Chip\r\n                size=\"small\"\r\n                avatar={<Avatar>MB</Avatar>}\r\n                label=\"Primary Clickable Chip\"\r\n                clickable\r\n                className={classes4.chip}\r\n                color=\"primary\"\r\n                onDelete={handleDelete4}\r\n                deleteIcon={<DoneIcon />}\r\n              />\r\n              <Chip\r\n                size=\"small\"\r\n                icon={<FaceIcon />}\r\n                label=\"Primary Clickable Chip\"\r\n                clickable\r\n                className={classes4.chip}\r\n                color=\"primary\"\r\n                onDelete={handleDelete4}\r\n                deleteIcon={<DoneIcon />}\r\n              />\r\n              <Chip\r\n                size=\"small\"\r\n                label=\"Deletable Primary Chip\"\r\n                onDelete={handleDelete4}\r\n                className={classes4.chip}\r\n                color=\"primary\"\r\n              />\r\n              <Chip\r\n                size=\"small\"\r\n                avatar={\r\n                  <Avatar>\r\n                    <FaceIcon />\r\n                  </Avatar>\r\n                }\r\n                label=\"Deletable Secondary Chip\"\r\n                onDelete={handleDelete4}\r\n                className={classes4.chip}\r\n                color=\"secondary\"\r\n              />\r\n              <Chip\r\n                size=\"small\"\r\n                icon={<FaceIcon />}\r\n                label=\"Deletable Secondary Chip\"\r\n                onDelete={handleDelete4}\r\n                className={classes4.chip}\r\n                color=\"secondary\"\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function Chips() {\r\n  const classes = useStyles();\r\n\r\n  function handleDelete() {\r\n    alert('You clicked the delete icon.');\r\n  }\r\n\r\n  function handleClick() {\r\n    alert('You clicked the Chip.');\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Chip label=\"Basic Chip\" className={classes.chip} />\r\n      <Chip\r\n        avatar={<Avatar>MB</Avatar>}\r\n        label=\"Clickable Chip\"\r\n        onClick={handleClick}\r\n        className={classes.chip}\r\n      />\r\n      <Chip\r\n        avatar={<Avatar alt=\"Natacha\" src=\"/static/images/avatar/1.jpg\" />}\r\n        label=\"Deletable Chip\"\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n      />\r\n      <Chip\r\n        avatar={\r\n          <Avatar>\r\n            <FaceIcon />\r\n          </Avatar>\r\n        }\r\n        label=\"Clickable Deletable Chip\"\r\n        onClick={handleClick}\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n      />\r\n      <Chip\r\n        icon={<FaceIcon />}\r\n        label=\"Clickable Deletable Chip\"\r\n        onClick={handleClick}\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n      />\r\n      <Chip\r\n        label=\"Custom delete icon Chip\"\r\n        onClick={handleClick}\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        deleteIcon={<DoneIcon />}\r\n      />\r\n      <Chip\r\n        label=\"Clickable Link Chip\"\r\n        className={classes.chip}\r\n        component=\"a\"\r\n        href=\"#chip\"\r\n        clickable\r\n      />\r\n      <Chip\r\n        avatar={<Avatar>MB</Avatar>}\r\n        label=\"Primary Clickable Chip\"\r\n        clickable\r\n        className={classes.chip}\r\n        color=\"primary\"\r\n        onDelete={handleDelete}\r\n        deleteIcon={<DoneIcon />}\r\n      />\r\n      <Chip\r\n        icon={<FaceIcon />}\r\n        label=\"Primary Clickable Chip\"\r\n        clickable\r\n        className={classes.chip}\r\n        color=\"primary\"\r\n        onDelete={handleDelete}\r\n        deleteIcon={<DoneIcon />}\r\n      />\r\n      <Chip\r\n        label=\"Deletable Primary Chip\"\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        color=\"primary\"\r\n      />\r\n      <Chip\r\n        avatar={\r\n          <Avatar>\r\n            <FaceIcon />\r\n          </Avatar>\r\n        }\r\n        label=\"Deletable Secondary Chip\"\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        color=\"secondary\"\r\n      />\r\n      <Chip\r\n        icon={<FaceIcon />}\r\n        label=\"Deletable Secondary Chip\"\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        color=\"secondary\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function OutlinedChips() {\r\n  const classes = useStyles();\r\n\r\n  function handleDelete() {\r\n    alert('You clicked the delete icon.');\r\n  }\r\n\r\n  function handleClick() {\r\n    alert('You clicked the Chip.');\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Chip label=\"Basic Chip\" className={classes.chip} variant=\"outlined\" />\r\n      <Chip\r\n        avatar={<Avatar>MB</Avatar>}\r\n        label=\"Clickable Chip\"\r\n        onClick={handleClick}\r\n        className={classes.chip}\r\n        variant=\"outlined\"\r\n      />\r\n      <Chip\r\n        avatar={<Avatar alt=\"Natacha\" src=\"/static/images/avatar/1.jpg\" />}\r\n        label=\"Deletable Chip\"\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        variant=\"outlined\"\r\n      />\r\n      <Chip\r\n        avatar={\r\n          <Avatar>\r\n            <FaceIcon />\r\n          </Avatar>\r\n        }\r\n        label=\"Clickable Deletable Chip\"\r\n        onClick={handleClick}\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        variant=\"outlined\"\r\n      />\r\n      <Chip\r\n        icon={<FaceIcon />}\r\n        label=\"Clickable Deletable Chip\"\r\n        onClick={handleClick}\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        variant=\"outlined\"\r\n      />\r\n      <Chip\r\n        label=\"Custom delete icon Chip\"\r\n        onClick={handleClick}\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        deleteIcon={<DoneIcon />}\r\n        variant=\"outlined\"\r\n      />\r\n      <Chip\r\n        label=\"Clickable Link Chip\"\r\n        className={classes.chip}\r\n        component=\"a\"\r\n        href=\"#chip\"\r\n        clickable\r\n        variant=\"outlined\"\r\n      />\r\n      <Chip\r\n        avatar={<Avatar>MB</Avatar>}\r\n        label=\"Primary Clickable Chip\"\r\n        clickable\r\n        className={classes.chip}\r\n        color=\"primary\"\r\n        onDelete={handleDelete}\r\n        deleteIcon={<DoneIcon />}\r\n        variant=\"outlined\"\r\n      />\r\n      <Chip\r\n        icon={<FaceIcon />}\r\n        label=\"Primary Clickable Chip\"\r\n        clickable\r\n        className={classes.chip}\r\n        color=\"primary\"\r\n        onDelete={handleDelete}\r\n        deleteIcon={<DoneIcon />}\r\n        variant=\"outlined\"\r\n      />\r\n      <Chip\r\n        label=\"Deletable Primary Chip\"\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        color=\"primary\"\r\n        variant=\"outlined\"\r\n      />\r\n      <Chip\r\n        avatar={\r\n          <Avatar>\r\n            <FaceIcon />\r\n          </Avatar>\r\n        }\r\n        label=\"Deletable Secondary Chip\"\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        color=\"secondary\"\r\n        variant=\"outlined\"\r\n      />\r\n      <Chip\r\n        icon={<FaceIcon />}\r\n        label=\"Deletable Secondary Chip\"\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        color=\"secondary\"\r\n        variant=\"outlined\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TagFacesIcon from '@material-ui/icons/TagFaces';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n    padding: theme.spacing(0.5),\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n}));\r\n\r\nexport default function ChipsArray() {\r\n  const classes = useStyles();\r\n  const [chipData, setChipData] = React.useState([\r\n    { key: 0, label: 'Angular' },\r\n    { key: 1, label: 'jQuery' },\r\n    { key: 2, label: 'Polymer' },\r\n    { key: 3, label: 'React' },\r\n    { key: 4, label: 'Vue.js' },\r\n  ]);\r\n\r\n  const handleDelete = chipToDelete => () => {\r\n    if (chipToDelete.label === 'React') {\r\n      alert('Why would you want to delete React?! :)');\r\n      return;\r\n    }\r\n\r\n    setChipData(chips => chips.filter(chip => chip.key !== chipToDelete.key));\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      {chipData.map(data => {\r\n        let icon;\r\n\r\n        if (data.label === 'React') {\r\n          icon = <TagFacesIcon />;\r\n        }\r\n\r\n        return (\r\n          <Chip\r\n            key={data.key}\r\n            icon={icon}\r\n            label={data.label}\r\n            onDelete={handleDelete(data)}\r\n            className={classes.chip}\r\n          />\r\n        );\r\n      })}\r\n    </Paper>\r\n  );\r\n}\r\n`;\r\nconst jsCode4 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function SmallChips() {\r\n  const classes = useStyles();\r\n\r\n  function handleDelete() {\r\n    alert('You clicked the delete icon.');\r\n  }\r\n\r\n  function handleClick() {\r\n    alert('You clicked the Chip.');\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Chip size=\"small\" label=\"Basic Chip\" className={classes.chip} />\r\n      <Chip\r\n        size=\"small\"\r\n        avatar={<Avatar>MB</Avatar>}\r\n        label=\"Clickable Chip\"\r\n        onClick={handleClick}\r\n        className={classes.chip}\r\n      />\r\n      <Chip\r\n        size=\"small\"\r\n        avatar={<Avatar alt=\"Natacha\" src=\"/static/images/avatar/1.jpg\" />}\r\n        label=\"Deletable Chip\"\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n      />\r\n      <Chip\r\n        size=\"small\"\r\n        avatar={\r\n          <Avatar>\r\n            <FaceIcon />\r\n          </Avatar>\r\n        }\r\n        label=\"Clickable Deletable Chip\"\r\n        onClick={handleClick}\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n      />\r\n      <Chip\r\n        size=\"small\"\r\n        icon={<FaceIcon />}\r\n        label=\"Clickable Deletable Chip\"\r\n        onClick={handleClick}\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n      />\r\n      <Chip\r\n        size=\"small\"\r\n        label=\"Custom delete icon Chip\"\r\n        onClick={handleClick}\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        deleteIcon={<DoneIcon />}\r\n      />\r\n      <Chip\r\n        size=\"small\"\r\n        label=\"Clickable Link Chip\"\r\n        className={classes.chip}\r\n        component=\"a\"\r\n        href=\"#chip\"\r\n        clickable\r\n      />\r\n      <Chip\r\n        size=\"small\"\r\n        avatar={<Avatar>MB</Avatar>}\r\n        label=\"Primary Clickable Chip\"\r\n        clickable\r\n        className={classes.chip}\r\n        color=\"primary\"\r\n        onDelete={handleDelete}\r\n        deleteIcon={<DoneIcon />}\r\n      />\r\n      <Chip\r\n        size=\"small\"\r\n        icon={<FaceIcon />}\r\n        label=\"Primary Clickable Chip\"\r\n        clickable\r\n        className={classes.chip}\r\n        color=\"primary\"\r\n        onDelete={handleDelete}\r\n        deleteIcon={<DoneIcon />}\r\n      />\r\n      <Chip\r\n        size=\"small\"\r\n        label=\"Deletable Primary Chip\"\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        color=\"primary\"\r\n      />\r\n      <Chip\r\n        size=\"small\"\r\n        avatar={\r\n          <Avatar>\r\n            <FaceIcon />\r\n          </Avatar>\r\n        }\r\n        label=\"Deletable Secondary Chip\"\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        color=\"secondary\"\r\n      />\r\n      <Chip\r\n        size=\"small\"\r\n        icon={<FaceIcon />}\r\n        label=\"Deletable Secondary Chip\"\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        color=\"secondary\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode5 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function SmallOutlinedChips() {\r\n  const classes = useStyles();\r\n\r\n  function handleDelete() {\r\n    alert('You clicked the delete icon.');\r\n  }\r\n\r\n  function handleClick() {\r\n    alert('You clicked the Chip.');\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Chip variant=\"outlined\" size=\"small\" label=\"Basic Chip\" className={classes.chip} />\r\n      <Chip\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        avatar={<Avatar>MB</Avatar>}\r\n        label=\"Clickable Chip\"\r\n        onClick={handleClick}\r\n        className={classes.chip}\r\n      />\r\n      <Chip\r\n        size=\"small\"\r\n        avatar={<Avatar alt=\"Natacha\" src=\"/static/images/avatar/1.jpg\" />}\r\n        label=\"Deletable Chip\"\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n      />\r\n      <Chip\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        avatar={\r\n          <Avatar>\r\n            <FaceIcon />\r\n          </Avatar>\r\n        }\r\n        label=\"Clickable Deletable Chip\"\r\n        onClick={handleClick}\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n      />\r\n      <Chip\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        icon={<FaceIcon />}\r\n        label=\"Clickable Deletable Chip\"\r\n        onClick={handleClick}\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n      />\r\n      <Chip\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        label=\"Custom delete icon Chip\"\r\n        onClick={handleClick}\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        deleteIcon={<DoneIcon />}\r\n      />\r\n      <Chip\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        label=\"Clickable Link Chip\"\r\n        className={classes.chip}\r\n        component=\"a\"\r\n        href=\"#chip\"\r\n        clickable\r\n      />\r\n      <Chip\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        avatar={<Avatar>MB</Avatar>}\r\n        label=\"Primary Clickable Chip\"\r\n        clickable\r\n        className={classes.chip}\r\n        color=\"primary\"\r\n        onDelete={handleDelete}\r\n        deleteIcon={<DoneIcon />}\r\n      />\r\n      <Chip\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        icon={<FaceIcon />}\r\n        label=\"Primary Clickable Chip\"\r\n        clickable\r\n        className={classes.chip}\r\n        color=\"primary\"\r\n        onDelete={handleDelete}\r\n        deleteIcon={<DoneIcon />}\r\n      />\r\n      <Chip\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        label=\"Deletable Primary Chip\"\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        color=\"primary\"\r\n      />\r\n      <Chip\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        avatar={\r\n          <Avatar>\r\n            <FaceIcon />\r\n          </Avatar>\r\n        }\r\n        label=\"Deletable Secondary Chip\"\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        color=\"secondary\"\r\n      />\r\n      <Chip\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        icon={<FaceIcon />}\r\n        label=\"Deletable Secondary Chip\"\r\n        onDelete={handleDelete}\r\n        className={classes.chip}\r\n        color=\"secondary\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\n","/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Divider,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  Typography,\r\n  Grid,\r\n  Chip,\r\n  Button\r\n} from \"@material-ui/core\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport WorkIcon from \"@material-ui/icons/Work\";\r\nimport BeachAccessIcon from \"@material-ui/icons/BeachAccess\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n// Example 1\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: \"360px\",\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\n// Example 2\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\n// Example 3\r\nconst useStyles3 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  dividerFullWidth: {\r\n    margin: `5px 0 0 ${theme.spacing(2)}px`\r\n  },\r\n  dividerInset: {\r\n    margin: `5px 0 0 ${theme.spacing(9)}px`\r\n  }\r\n}));\r\n\r\n// Example 4\r\nconst useStyles4 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  chip: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  section1: {\r\n    margin: theme.spacing(3, 2)\r\n  },\r\n  section2: {\r\n    margin: theme.spacing(2)\r\n  },\r\n  section3: {\r\n    margin: theme.spacing(3, 1, 1)\r\n  }\r\n}));\r\n\r\nexport default function DividersExamplesPage() {\r\n  // Example 1\r\n  const classes1 = useStyles1();\r\n\r\n  // Example 2\r\n  const classes2 = useStyles2();\r\n\r\n  // Example 3\r\n  const classes3 = useStyles3();\r\n\r\n  // Example 4\r\n  const classes4 = useStyles4();\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          A divider is a thin line that groups content in lists and layouts.\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/dividers/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"List Dividers\">\r\n            <span>\r\n              The divider renders as a <code>&lt;hr&gt;</code> by default. You\r\n              can save rendering this DOM element by using the{\" \"}\r\n              <code>divider</code> property on the <code>ListItem</code>{\" \"}\r\n              component.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <List\r\n              component=\"nav\"\r\n              className={classes1.root}\r\n              aria-label=\"Mailbox folders\"\r\n            >\r\n              <ListItem button>\r\n                <ListItemText primary=\"Inbox\" />\r\n              </ListItem>\r\n              <Divider />\r\n              <ListItem button divider>\r\n                <ListItemText primary=\"Drafts\" />\r\n              </ListItem>\r\n              <ListItem button>\r\n                <ListItemText primary=\"Trash\" />\r\n              </ListItem>\r\n              <Divider light />\r\n              <ListItem button>\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItem>\r\n            </List>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode3} beforeCodeTitle=\"Subheader Dividers\">\r\n            <List className={classes3.root}>\r\n              <ListItem>\r\n                <ListItemText primary=\"Photos\" secondary=\"Jan 9, 2014\" />\r\n              </ListItem>\r\n              <Divider component=\"li\" />\r\n              <li>\r\n                <Typography\r\n                  className={classes3.dividerFullWidth}\r\n                  color=\"textSecondary\"\r\n                  display=\"block\"\r\n                  variant=\"caption\"\r\n                >\r\n                  Divider\r\n                </Typography>\r\n              </li>\r\n              <ListItem>\r\n                <ListItemText primary=\"Work\" secondary=\"Jan 7, 2014\" />\r\n              </ListItem>\r\n              <Divider component=\"li\" variant=\"inset\" />\r\n              <li>\r\n                <Typography\r\n                  className={classes3.dividerInset}\r\n                  color=\"textSecondary\"\r\n                  display=\"block\"\r\n                  variant=\"caption\"\r\n                >\r\n                  Leisure\r\n                </Typography>\r\n              </li>\r\n              <ListItem>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <BeachAccessIcon />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText primary=\"Vacation\" secondary=\"July 20, 2014\" />\r\n              </ListItem>\r\n            </List>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"Inset Dividers\">\r\n            <List className={classes2.root}>\r\n              <ListItem>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <ImageIcon />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText primary=\"Photos\" secondary=\"Jan 9, 2014\" />\r\n              </ListItem>\r\n              <Divider variant=\"inset\" component=\"li\" />\r\n              <ListItem>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <WorkIcon />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText primary=\"Work\" secondary=\"Jan 7, 2014\" />\r\n              </ListItem>\r\n              <Divider variant=\"inset\" component=\"li\" />\r\n              <ListItem>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <BeachAccessIcon />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText primary=\"Vacation\" secondary=\"July 20, 2014\" />\r\n              </ListItem>\r\n            </List>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode4} beforeCodeTitle=\"Middle Dividers\">\r\n            <div className={classes4.root}>\r\n              <div className={classes4.section1}>\r\n                <Grid container alignItems=\"center\">\r\n                  <Grid item xs>\r\n                    <Typography gutterBottom variant=\"h4\">\r\n                      Toothbrush\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Typography gutterBottom variant=\"h6\">\r\n                      $4.50\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n                <Typography color=\"textSecondary\" variant=\"body2\">\r\n                  Pinstriped cornflower blue cotton blouse takes you on a walk\r\n                  to the park or just down the hall.\r\n                </Typography>\r\n              </div>\r\n              <Divider variant=\"middle\" />\r\n              <div className={classes4.section2}>\r\n                <Typography gutterBottom variant=\"body1\">\r\n                  Select type\r\n                </Typography>\r\n                <div>\r\n                  <Chip className={classes4.chip} label=\"Extra Soft\" />\r\n                  <Chip\r\n                    className={classes4.chip}\r\n                    color=\"primary\"\r\n                    label=\"Soft\"\r\n                  />\r\n                  <Chip className={classes4.chip} label=\"Medium\" />\r\n                  <Chip className={classes4.chip} label=\"Hard\" />\r\n                </div>\r\n              </div>\r\n              <div className={classes4.section3}>\r\n                <Button color=\"primary\">Add to cart</Button>\r\n              </div>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: '360px',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function ListDividers() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List component=\"nav\" className={classes.root} aria-label=\"Mailbox folders\">\r\n      <ListItem button>\r\n        <ListItemText primary=\"Inbox\" />\r\n      </ListItem>\r\n      <Divider />\r\n      <ListItem button divider>\r\n        <ListItemText primary=\"Drafts\" />\r\n      </ListItem>\r\n      <ListItem button>\r\n        <ListItemText primary=\"Trash\" />\r\n      </ListItem>\r\n      <Divider light />\r\n      <ListItem button>\r\n        <ListItemText primary=\"Spam\" />\r\n      </ListItem>\r\n    </List>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function InsetDividers() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n          <Avatar>\r\n            <ImageIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Photos\" secondary=\"Jan 9, 2014\" />\r\n      </ListItem>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n          <Avatar>\r\n            <WorkIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Work\" secondary=\"Jan 7, 2014\" />\r\n      </ListItem>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n          <Avatar>\r\n            <BeachAccessIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Vacation\" secondary=\"July 20, 2014\" />\r\n      </ListItem>\r\n    </List>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  dividerFullWidth: {\r\n    margin: \\`5px 0 0 \\${theme.spacing(2)}px\\`,\r\n  },\r\n  dividerInset: {\r\n    margin: \\`5px 0 0 \\${theme.spacing(9)}px\\`,\r\n  },\r\n}));\r\n\r\nexport default function SubheaderDividers() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      <ListItem>\r\n        <ListItemText primary=\"Photos\" secondary=\"Jan 9, 2014\" />\r\n      </ListItem>\r\n      <Divider component=\"li\" />\r\n      <li>\r\n        <Typography\r\n          className={classes.dividerFullWidth}\r\n          color=\"textSecondary\"\r\n          display=\"block\"\r\n          variant=\"caption\"\r\n        >\r\n          Divider\r\n        </Typography>\r\n      </li>\r\n      <ListItem>\r\n        <ListItemText primary=\"Work\" secondary=\"Jan 7, 2014\" />\r\n      </ListItem>\r\n      <Divider component=\"li\" variant=\"inset\" />\r\n      <li>\r\n        <Typography\r\n          className={classes.dividerInset}\r\n          color=\"textSecondary\"\r\n          display=\"block\"\r\n          variant=\"caption\"\r\n        >\r\n          Leisure\r\n        </Typography>\r\n      </li>\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n          <Avatar>\r\n            <BeachAccessIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Vacation\" secondary=\"July 20, 2014\" />\r\n      </ListItem>\r\n    </List>\r\n  );\r\n}\r\n`;\r\nconst jsCode4 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  chip: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  section1: {\r\n    margin: theme.spacing(3, 2),\r\n  },\r\n  section2: {\r\n    margin: theme.spacing(2),\r\n  },\r\n  section3: {\r\n    margin: theme.spacing(3, 1, 1),\r\n  },\r\n}));\r\n\r\nexport default function MiddleDividers() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.section1}>\r\n        <Grid container alignItems=\"center\">\r\n          <Grid item xs>\r\n            <Typography gutterBottom variant=\"h4\">\r\n              Toothbrush\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography gutterBottom variant=\"h6\">\r\n              $4.50\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Typography color=\"textSecondary\" variant=\"body2\">\r\n          Pinstriped cornflower blue cotton blouse takes you on a walk to the park or just down the\r\n          hall.\r\n        </Typography>\r\n      </div>\r\n      <Divider variant=\"middle\" />\r\n      <div className={classes.section2}>\r\n        <Typography gutterBottom variant=\"body1\">\r\n          Select type\r\n        </Typography>\r\n        <div>\r\n          <Chip className={classes.chip} label=\"Extra Soft\" />\r\n          <Chip className={classes.chip} color=\"primary\" label=\"Soft\" />\r\n          <Chip className={classes.chip} label=\"Medium\" />\r\n          <Chip className={classes.chip} label=\"Hard\" />\r\n        </div>\r\n      </div>\r\n      <div className={classes.section3}>\r\n        <Button color=\"primary\">Add to cart</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n`;\r\n","/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport {loadCSS} from \"fg-loadcss\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {SvgIcon, Grid, Typography, Icon} from \"@material-ui/core\";\r\nimport {blue, red} from \"@material-ui/core/colors\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\r\nimport DeleteRoundedIcon from \"@material-ui/icons/DeleteRounded\";\r\nimport DeleteTwoToneIcon from \"@material-ui/icons/DeleteTwoTone\";\r\nimport DeleteSharpIcon from \"@material-ui/icons/DeleteSharp\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport DeleteForeverOutlinedIcon from \"@material-ui/icons/DeleteForeverOutlined\";\r\nimport DeleteForeverRoundedIcon from \"@material-ui/icons/DeleteForeverRounded\";\r\nimport DeleteForeverTwoToneIcon from \"@material-ui/icons/DeleteForeverTwoTone\";\r\nimport DeleteForeverSharpIcon from \"@material-ui/icons/DeleteForeverSharp\";\r\nimport ThreeDRotationIcon from \"@material-ui/icons/ThreeDRotation\";\r\nimport FourKIcon from \"@material-ui/icons/FourK\";\r\nimport ThreeSixtyIcon from \"@material-ui/icons/ThreeSixty\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n// Example 1\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"flex-end\"\r\n  },\r\n  icon: {\r\n    margin: theme.spacing(2)\r\n  },\r\n  iconHover: {\r\n    margin: theme.spacing(2),\r\n    \"&:hover\": {\r\n      color: red[800]\r\n    }\r\n  }\r\n}));\r\n\r\nfunction HomeIcon1(props) {\r\n  return (\r\n    <SvgIcon {...props}>\r\n      <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\r\n    </SvgIcon>\r\n  );\r\n}\r\n\r\n// Example 2\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    color: theme.palette.text.primary\r\n  },\r\n  icon: {\r\n    margin: theme.spacing(1),\r\n    fontSize: 32\r\n  }\r\n}));\r\n\r\n// Example 3\r\nconst useStyles3 = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"flex-end\"\r\n  },\r\n  icon: {\r\n    margin: theme.spacing(2)\r\n  },\r\n  iconHover: {\r\n    margin: theme.spacing(2),\r\n    \"&:hover\": {\r\n      color: red[800]\r\n    }\r\n  }\r\n}));\r\n\r\n// Example 4\r\nconst useStyles4 = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"flex-end\"\r\n  },\r\n  icon: {\r\n    margin: theme.spacing(2)\r\n  },\r\n  iconHover: {\r\n    margin: theme.spacing(2),\r\n    \"&:hover\": {\r\n      color: red[800]\r\n    }\r\n  }\r\n}));\r\n\r\nexport default function IconsExamplesPage() {\r\n  // Example 1\r\n  const classes1 = useStyles1();\r\n\r\n  // Example 2\r\n  const classes2 = useStyles2();\r\n\r\n  // Example 3\r\n  const classes3 = useStyles3();\r\n\r\n  // Example 4\r\n  const classes4 = useStyles4();\r\n\r\n  React.useEffect(() => {\r\n    loadCSS(\r\n      \"https://use.fontawesome.com/releases/v5.1.0/css/all.css\",\r\n      document.querySelector(\"#font-awesome-css\")\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>Guidance and suggestions for using icons with Material-UI.</span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/icons/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"SVG Icons\">\r\n            <span>\r\n              The <code>SvgIcon</code> component takes an SVG <code>path</code>{\" \"}\r\n              element as its child and converts it to a React component that\r\n              displays the path, and allows the icon to be styled and respond to\r\n              mouse events. SVG elements should be scaled for a 24x24px\r\n              viewport.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes1.root}>\r\n              <HomeIcon1 className={classes1.icon} />\r\n              <HomeIcon1 className={classes1.icon} color=\"primary\" />\r\n              <HomeIcon1 className={classes1.icon} color=\"secondary\" />\r\n              <HomeIcon1 className={classes1.icon} color=\"action\" />\r\n              <HomeIcon1\r\n                className={classes1.iconHover}\r\n                color=\"error\"\r\n                style={{ fontSize: 30 }}\r\n              />\r\n              <HomeIcon1\r\n                color=\"disabled\"\r\n                className={classes1.icon}\r\n                fontSize=\"large\"\r\n              />\r\n              <HomeIcon1\r\n                className={classes1.icon}\r\n                color=\"primary\"\r\n                fontSize=\"large\"\r\n                component={svgProps => {\r\n                  return (\r\n                    <svg {...svgProps}>\r\n                      <defs>\r\n                        <linearGradient id=\"gradient1\">\r\n                          <stop offset=\"30%\" stopColor={blue[400]} />\r\n                          <stop offset=\"70%\" stopColor={red[400]} />\r\n                        </linearGradient>\r\n                      </defs>\r\n                      {React.cloneElement(svgProps.children[0], {\r\n                        fill: \"url(#gradient1)\"\r\n                      })}\r\n                    </svg>\r\n                  );\r\n                }}\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode3} beforeCodeTitle=\"Font Material icons\">\r\n            <div className={classes3.root}>\r\n              <Icon className={classes3.icon}>add_circle</Icon>\r\n              <Icon className={classes3.icon} color=\"primary\">\r\n                add_circle\r\n              </Icon>\r\n              <Icon className={classes3.icon} color=\"secondary\">\r\n                add_circle\r\n              </Icon>\r\n              <Icon className={classes3.icon} color=\"action\">\r\n                add_circle\r\n              </Icon>\r\n              <Icon\r\n                className={classes3.iconHover}\r\n                color=\"error\"\r\n                style={{ fontSize: 30 }}\r\n              >\r\n                add_circle\r\n              </Icon>\r\n              <Icon className={classes3.icon} color=\"disabled\" fontSize=\"large\">\r\n                add_circle\r\n              </Icon>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode4} beforeCodeTitle=\"Font Awesome\">\r\n            <span>\r\n              Font Awesome can be used with the <code>Icon</code> component as\r\n              follow:\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes4.root}>\r\n              <Icon className={clsx(classes4.icon, \"fa fa-plus-circle\")} />\r\n              <Icon\r\n                className={clsx(classes4.icon, \"fa fa-plus-circle\")}\r\n                color=\"primary\"\r\n              />\r\n              <Icon\r\n                className={clsx(classes4.icon, \"fa fa-plus-circle\")}\r\n                color=\"secondary\"\r\n              />\r\n              <Icon\r\n                className={clsx(classes4.icon, \"fa fa-plus-circle\")}\r\n                color=\"action\"\r\n              />\r\n              <Icon\r\n                className={clsx(classes4.iconHover, \"fa fa-plus-circle\")}\r\n                color=\"error\"\r\n                style={{ fontSize: 30 }}\r\n              />\r\n              <Icon\r\n                className={clsx(classes4.icon, \"fa fa-plus-circle\")}\r\n                color=\"disabled\"\r\n                fontSize=\"large\"\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"Usage\">\r\n            <span>\r\n              You can use material.io/tools/icons to find a specific icon. When\r\n              importing an icon, keep in mind that the names of the icons are{\" \"}\r\n              <code>PascalCase</code>.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <Grid container className={classes2.root}>\r\n              <Grid item xs={4}>\r\n                <Typography>Filled</Typography>\r\n              </Grid>\r\n              <Grid item xs={8}>\r\n                <DeleteIcon className={classes2.icon} />\r\n                <DeleteForeverIcon className={classes2.icon} />\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <Typography>Outlined</Typography>\r\n              </Grid>\r\n              <Grid item xs={8}>\r\n                <DeleteOutlinedIcon className={classes2.icon} />\r\n                <DeleteForeverOutlinedIcon className={classes2.icon} />\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <Typography>Rounded</Typography>\r\n              </Grid>\r\n              <Grid item xs={8}>\r\n                <DeleteRoundedIcon className={classes2.icon} />\r\n                <DeleteForeverRoundedIcon className={classes2.icon} />\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <Typography>Two Tone</Typography>\r\n              </Grid>\r\n              <Grid item xs={8}>\r\n                <DeleteTwoToneIcon className={classes2.icon} />\r\n                <DeleteForeverTwoToneIcon className={classes2.icon} />\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <Typography>Sharp</Typography>\r\n              </Grid>\r\n              <Grid item xs={8}>\r\n                <DeleteSharpIcon className={classes2.icon} />\r\n                <DeleteForeverSharpIcon className={classes2.icon} />\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <Typography>Edge-cases</Typography>\r\n              </Grid>\r\n              <Grid item xs={8}>\r\n                <ThreeDRotationIcon className={classes2.icon} />\r\n                <FourKIcon className={classes2.icon} />\r\n                <ThreeSixtyIcon className={classes2.icon} />\r\n              </Grid>\r\n            </Grid>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { blue, red } from '@material-ui/core/colors';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-end',\r\n  },\r\n  icon: {\r\n    margin: theme.spacing(2),\r\n  },\r\n  iconHover: {\r\n    margin: theme.spacing(2),\r\n    '&:hover': {\r\n      color: red[800],\r\n    },\r\n  },\r\n}));\r\n\r\nfunction HomeIcon(props) {\r\n  return (\r\n    <SvgIcon {...props}>\r\n      <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\r\n    </SvgIcon>\r\n  );\r\n}\r\n\r\nexport default function SvgIcons() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <HomeIcon className={classes.icon} />\r\n      <HomeIcon className={classes.icon} color=\"primary\" />\r\n      <HomeIcon className={classes.icon} color=\"secondary\" />\r\n      <HomeIcon className={classes.icon} color=\"action\" />\r\n      <HomeIcon className={classes.iconHover} color=\"error\" style={{ fontSize: 30 }} />\r\n      <HomeIcon color=\"disabled\" className={classes.icon} fontSize=\"large\" />\r\n      <HomeIcon\r\n        className={classes.icon}\r\n        color=\"primary\"\r\n        fontSize=\"large\"\r\n        component={svgProps => {\r\n          return (\r\n            <svg {...svgProps}>\r\n              <defs>\r\n                <linearGradient id=\"gradient1\">\r\n                  <stop offset=\"30%\" stopColor={blue[400]} />\r\n                  <stop offset=\"70%\" stopColor={red[400]} />\r\n                </linearGradient>\r\n              </defs>\r\n              {React.cloneElement(svgProps.children[0], {\r\n                fill: 'url(#gradient1)',\r\n              })}\r\n            </svg>\r\n          );\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\r\nimport DeleteRoundedIcon from '@material-ui/icons/DeleteRounded';\r\nimport DeleteTwoToneIcon from '@material-ui/icons/DeleteTwoTone';\r\nimport DeleteSharpIcon from '@material-ui/icons/DeleteSharp';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport DeleteForeverOutlinedIcon from '@material-ui/icons/DeleteForeverOutlined';\r\nimport DeleteForeverRoundedIcon from '@material-ui/icons/DeleteForeverRounded';\r\nimport DeleteForeverTwoToneIcon from '@material-ui/icons/DeleteForeverTwoTone';\r\nimport DeleteForeverSharpIcon from '@material-ui/icons/DeleteForeverSharp';\r\nimport ThreeDRotationIcon from '@material-ui/icons/ThreeDRotation';\r\nimport FourKIcon from '@material-ui/icons/FourK';\r\nimport ThreeSixtyIcon from '@material-ui/icons/ThreeSixty';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    color: theme.palette.text.primary,\r\n  },\r\n  icon: {\r\n    margin: theme.spacing(1),\r\n    fontSize: 32,\r\n  },\r\n}));\r\n\r\nexport default function SvgMaterialIcons() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container className={classes.root}>\r\n      <Grid item xs={4}>\r\n        <Typography>Filled</Typography>\r\n      </Grid>\r\n      <Grid item xs={8}>\r\n        <DeleteIcon className={classes.icon} />\r\n        <DeleteForeverIcon className={classes.icon} />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <Typography>Outlined</Typography>\r\n      </Grid>\r\n      <Grid item xs={8}>\r\n        <DeleteOutlinedIcon className={classes.icon} />\r\n        <DeleteForeverOutlinedIcon className={classes.icon} />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <Typography>Rounded</Typography>\r\n      </Grid>\r\n      <Grid item xs={8}>\r\n        <DeleteRoundedIcon className={classes.icon} />\r\n        <DeleteForeverRoundedIcon className={classes.icon} />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <Typography>Two Tone</Typography>\r\n      </Grid>\r\n      <Grid item xs={8}>\r\n        <DeleteTwoToneIcon className={classes.icon} />\r\n        <DeleteForeverTwoToneIcon className={classes.icon} />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <Typography>Sharp</Typography>\r\n      </Grid>\r\n      <Grid item xs={8}>\r\n        <DeleteSharpIcon className={classes.icon} />\r\n        <DeleteForeverSharpIcon className={classes.icon} />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <Typography>Edge-cases</Typography>\r\n      </Grid>\r\n      <Grid item xs={8}>\r\n        <ThreeDRotationIcon className={classes.icon} />\r\n        <FourKIcon className={classes.icon} />\r\n        <ThreeSixtyIcon className={classes.icon} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { red } from '@material-ui/core/colors';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-end',\r\n  },\r\n  icon: {\r\n    margin: theme.spacing(2),\r\n  },\r\n  iconHover: {\r\n    margin: theme.spacing(2),\r\n    '&:hover': {\r\n      color: red[800],\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Icons() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Icon className={classes.icon}>add_circle</Icon>\r\n      <Icon className={classes.icon} color=\"primary\">\r\n        add_circle\r\n      </Icon>\r\n      <Icon className={classes.icon} color=\"secondary\">\r\n        add_circle\r\n      </Icon>\r\n      <Icon className={classes.icon} color=\"action\">\r\n        add_circle\r\n      </Icon>\r\n      <Icon className={classes.iconHover} color=\"error\" style={{ fontSize: 30 }}>\r\n        add_circle\r\n      </Icon>\r\n      <Icon className={classes.icon} color=\"disabled\" fontSize=\"large\">\r\n        add_circle\r\n      </Icon>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode4 = `\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport { loadCSS } from 'fg-loadcss';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { red } from '@material-ui/core/colors';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-end',\r\n  },\r\n  icon: {\r\n    margin: theme.spacing(2),\r\n  },\r\n  iconHover: {\r\n    margin: theme.spacing(2),\r\n    '&:hover': {\r\n      color: red[800],\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function FontAwesome() {\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(() => {\r\n    loadCSS(\r\n      'https://use.fontawesome.com/releases/v5.1.0/css/all.css',\r\n      document.querySelector('#font-awesome-css'),\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Icon className={clsx(classes.icon, 'fa fa-plus-circle')} />\r\n      <Icon className={clsx(classes.icon, 'fa fa-plus-circle')} color=\"primary\" />\r\n      <Icon className={clsx(classes.icon, 'fa fa-plus-circle')} color=\"secondary\" />\r\n      <Icon className={clsx(classes.icon, 'fa fa-plus-circle')} color=\"action\" />\r\n      <Icon\r\n        className={clsx(classes.iconHover, 'fa fa-plus-circle')}\r\n        color=\"error\"\r\n        style={{ fontSize: 30 }}\r\n      />\r\n      <Icon className={clsx(classes.icon, 'fa fa-plus-circle')} color=\"disabled\" fontSize=\"large\" />\r\n    </div>\r\n  );\r\n}\r\n`;\r\n","/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {\r\n  ListItem,\r\n  List,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Divider,\r\n  ListSubheader,\r\n  Collapse,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  Typography,\r\n  Grid,\r\n  Checkbox,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  ListItemSecondaryAction,\r\n  IconButton,\r\n  Switch\r\n} from \"@material-ui/core\";\r\nimport InboxIcon from \"@material-ui/icons/Inbox\";\r\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport StarBorder from \"@material-ui/icons/StarBorder\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport WorkIcon from \"@material-ui/icons/Work\";\r\nimport BeachAccessIcon from \"@material-ui/icons/BeachAccess\";\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CommentIcon from \"@material-ui/icons/Comment\";\r\nimport WifiIcon from \"@material-ui/icons/Wifi\";\r\nimport BluetoothIcon from \"@material-ui/icons/Bluetooth\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport {FixedSizeList} from \"react-window\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n// Example 1\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\nfunction ListItemLink1(props) {\r\n  return <ListItem button component=\"a\" {...props} />;\r\n}\r\n\r\n// Exanple 2\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4)\r\n  }\r\n}));\r\n\r\n// Example 3\r\nconst useStyles3 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\n// Example 4\r\nconst useStyles4 = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 752\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  title: {\r\n    margin: theme.spacing(4, 0, 2)\r\n  }\r\n}));\r\n\r\nfunction generate(element) {\r\n  return [0, 1, 2].map(value =>\r\n    React.cloneElement(element, {\r\n      key: value\r\n    })\r\n  );\r\n}\r\n\r\n// Example 5\r\nconst useStyles5 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\n// Example 6\r\nconst useStyles6 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  inline: {\r\n    display: \"inline\"\r\n  }\r\n}));\r\n\r\n// Example 7\r\nconst useStyles7 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\n// Exanple 8\r\nconst useStyles8 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\n// Example 9\r\nconst useStyles9 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\n// Example 10\r\nconst useStyles10 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n    position: \"relative\",\r\n    overflow: \"auto\",\r\n    maxHeight: 300\r\n  },\r\n  listSection: {\r\n    backgroundColor: \"inherit\"\r\n  },\r\n  ul: {\r\n    backgroundColor: \"inherit\",\r\n    padding: 0\r\n  }\r\n}));\r\n\r\n// Example 11\r\nconst useStyles11 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\n// Example 12\r\nconst useStyles12 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    height: 400,\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\nfunction Row12(props) {\r\n  const { index, style } = props;\r\n\r\n  return (\r\n    <ListItem button style={style} key={index}>\r\n      <ListItemText primary={`Item ${index + 1}`} />\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nRow12.propTypes = {\r\n  index: PropTypes.number,\r\n  style: PropTypes.object\r\n};\r\n\r\nexport default function ListsExamplesPage() {\r\n  // Example 1\r\n  const classes1 = useStyles1();\r\n\r\n  // Example 2\r\n  const classes2 = useStyles2();\r\n  const [open2, setOpen2] = React.useState(true);\r\n\r\n  function handleClick2() {\r\n    setOpen2(!open2);\r\n  }\r\n\r\n  // Example 3\r\n  const classes3 = useStyles3();\r\n\r\n  // Example 4\r\n  const classes4 = useStyles4();\r\n  const [dense4, setDense4] = React.useState(false);\r\n  const [secondary4, setSecondary4] = React.useState(false);\r\n\r\n  // Example 5\r\n  const classes5 = useStyles5();\r\n  const [selectedIndex5, setSelectedIndex5] = React.useState(1);\r\n\r\n  function handleListItemClick5(event, index) {\r\n    setSelectedIndex5(index);\r\n  }\r\n\r\n  // Example 6\r\n  const classes6 = useStyles6();\r\n\r\n  // Example 7\r\n  const classes7 = useStyles7();\r\n  const [checked7, setChecked7] = React.useState([0]);\r\n\r\n  const handleToggle7 = value => () => {\r\n    const currentIndex = checked7.indexOf(value);\r\n    const newChecked = [...checked7];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked7(newChecked);\r\n  };\r\n\r\n  // Example 8\r\n  const classes8 = useStyles8();\r\n  const [checked8, setChecked8] = React.useState([1]);\r\n\r\n  const handleToggle8 = value => () => {\r\n    const currentIndex = checked8.indexOf(value);\r\n    const newChecked = [...checked8];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked8(newChecked);\r\n  };\r\n\r\n  // Example 9\r\n  const classes9 = useStyles9();\r\n  const [checked9, setChecked9] = React.useState([\"wifi\"]);\r\n\r\n  const handleToggle9 = value => () => {\r\n    const currentIndex = checked9.indexOf(value);\r\n    const newChecked = [...checked9];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked9(newChecked);\r\n  };\r\n\r\n  // Example 10\r\n  const classes10 = useStyles10();\r\n\r\n  // Example 11\r\n  const classes11 = useStyles11();\r\n\r\n  // Example 12\r\n  const classes12 = useStyles12();\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>Lists are continuous, vertical indexes of text or images.</span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/lists/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode1}\r\n            beforeCodeTitle=\"Simple List\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <div className={classes1.root}>\r\n              <List component=\"nav\" aria-label=\"Main mailbox folders\">\r\n                <ListItem button>\r\n                  <ListItemIcon>\r\n                    <InboxIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Inbox\" />\r\n                </ListItem>\r\n                <ListItem button>\r\n                  <ListItemIcon>\r\n                    <DraftsIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Drafts\" />\r\n                </ListItem>\r\n              </List>\r\n              <Divider />\r\n              <List component=\"nav\" aria-label=\"Secondary mailbox folders\">\r\n                <ListItem button>\r\n                  <ListItemText primary=\"Trash\" />\r\n                </ListItem>\r\n                <ListItemLink1 href=\"#simple-list\">\r\n                  <ListItemText primary=\"Spam\" />\r\n                </ListItemLink1>\r\n              </List>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode3}\r\n            beforeCodeTitle=\"Folder List\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <List className={classes3.root}>\r\n              <ListItem>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <ImageIcon />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText primary=\"Photos\" secondary=\"Jan 9, 2014\" />\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <WorkIcon />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText primary=\"Work\" secondary=\"Jan 7, 2014\" />\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <BeachAccessIcon />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText primary=\"Vacation\" secondary=\"July 20, 2014\" />\r\n              </ListItem>\r\n            </List>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode5}\r\n            beforeCodeTitle=\"Selected ListItem\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <div className={classes5.root}>\r\n              <List component=\"nav\" aria-label=\"Main mailbox folders\">\r\n                <ListItem\r\n                  button\r\n                  selected={selectedIndex5 === 0}\r\n                  onClick={event => handleListItemClick5(event, 0)}\r\n                >\r\n                  <ListItemIcon>\r\n                    <InboxIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Inbox\" />\r\n                </ListItem>\r\n                <ListItem\r\n                  button\r\n                  selected={selectedIndex5 === 1}\r\n                  onClick={event => handleListItemClick5(event, 1)}\r\n                >\r\n                  <ListItemIcon>\r\n                    <DraftsIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Drafts\" />\r\n                </ListItem>\r\n              </List>\r\n              <Divider />\r\n              <List component=\"nav\" aria-label=\"Secondary mailbox folder\">\r\n                <ListItem\r\n                  button\r\n                  selected={selectedIndex5 === 2}\r\n                  onClick={event => handleListItemClick5(event, 2)}\r\n                >\r\n                  <ListItemText primary=\"Trash\" />\r\n                </ListItem>\r\n                <ListItem\r\n                  button\r\n                  selected={selectedIndex5 === 3}\r\n                  onClick={event => handleListItemClick5(event, 3)}\r\n                >\r\n                  <ListItemText primary=\"Spam\" />\r\n                </ListItem>\r\n              </List>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode6}\r\n            beforeCodeTitle=\"Align list items\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              You should change the list item alignment when displaying 3 lines\r\n              or more, set the <code>alignItems=\"flex-start\"</code> property.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <List className={classes6.root}>\r\n              <ListItem alignItems=\"flex-start\">\r\n                <ListItemAvatar>\r\n                  <Avatar\r\n                    alt=\"Remy Sharp\"\r\n                    src=\"https://material-ui.com/static/images/avatar/1.jpg\"\r\n                  />\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary=\"Brunch this weekend?\"\r\n                  secondary={\r\n                    <React.Fragment>\r\n                      <Typography\r\n                        component=\"span\"\r\n                        variant=\"body2\"\r\n                        className={classes6.inline}\r\n                        color=\"textPrimary\"\r\n                      >\r\n                        Ali Connors\r\n                      </Typography>\r\n                      {\" — I'll be in your neighborhood doing errands this…\"}\r\n                    </React.Fragment>\r\n                  }\r\n                />\r\n              </ListItem>\r\n              <Divider variant=\"inset\" component=\"li\" />\r\n              <ListItem alignItems=\"flex-start\">\r\n                <ListItemAvatar>\r\n                  <Avatar\r\n                    alt=\"Remy Sharp\"\r\n                    src=\"https://material-ui.com/static/images/avatar/2.jpg\"\r\n                  />\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary=\"Summer BBQ\"\r\n                  secondary={\r\n                    <React.Fragment>\r\n                      <Typography\r\n                        component=\"span\"\r\n                        variant=\"body2\"\r\n                        className={classes6.inline}\r\n                        color=\"textPrimary\"\r\n                      >\r\n                        to Scott, Alex, Jennifer\r\n                      </Typography>\r\n                      {\" — Wish I could come, but I'm out of town this…\"}\r\n                    </React.Fragment>\r\n                  }\r\n                />\r\n              </ListItem>\r\n              <Divider variant=\"inset\" component=\"li\" />\r\n              <ListItem alignItems=\"flex-start\">\r\n                <ListItemAvatar>\r\n                  <Avatar\r\n                    alt=\"Remy Sharp\"\r\n                    src=\"https://material-ui.com/static/images/avatar/3.jpg\"\r\n                  />\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary=\"Oui Oui\"\r\n                  secondary={\r\n                    <React.Fragment>\r\n                      <Typography\r\n                        component=\"span\"\r\n                        variant=\"body2\"\r\n                        className={classes6.inline}\r\n                        color=\"textPrimary\"\r\n                      >\r\n                        Sandra Adams\r\n                      </Typography>\r\n                      {\" — Do you have Paris recommendations? Have you ever…\"}\r\n                    </React.Fragment>\r\n                  }\r\n                />\r\n              </ListItem>\r\n            </List>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode7}\r\n            beforeCodeTitle=\"Checkbox\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span className=\"pb-3\">\r\n              A checkbox can either be a primary action or a secondary action.\r\n            </span>\r\n            <div>\r\n              The checkbox is the primary action and the state indicator for the\r\n              list item. The comment button is a secondary action and a separate\r\n              target.\r\n            </div>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <List className={classes7.root}>\r\n              {[0, 1, 2, 3].map(value => {\r\n                const labelId = `checkbox-list-label-${value}`;\r\n\r\n                return (\r\n                  <ListItem\r\n                    key={value}\r\n                    role={undefined}\r\n                    dense\r\n                    button\r\n                    onClick={handleToggle7(value)}\r\n                  >\r\n                    <ListItemIcon>\r\n                      <Checkbox\r\n                        edge=\"start\"\r\n                        checked={checked7.indexOf(value) !== -1}\r\n                        tabIndex={-1}\r\n                        disableRipple\r\n                        inputProps={{ \"aria-labelledby\": labelId }}\r\n                      />\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      id={labelId}\r\n                      primary={`Line item ${value + 1}`}\r\n                    />\r\n                    <ListItemSecondaryAction>\r\n                      <IconButton edge=\"end\" aria-label=\"Comments\">\r\n                        <CommentIcon />\r\n                      </IconButton>\r\n                    </ListItemSecondaryAction>\r\n                  </ListItem>\r\n                );\r\n              })}\r\n            </List>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode9}\r\n            beforeCodeTitle=\"Switch\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              The switch is the secondary action and a separate target.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <List\r\n              subheader={<ListSubheader>Settings</ListSubheader>}\r\n              className={classes9.root}\r\n            >\r\n              <ListItem>\r\n                <ListItemIcon>\r\n                  <WifiIcon />\r\n                </ListItemIcon>\r\n                <ListItemText id=\"switch-list-label-wifi\" primary=\"Wi-Fi\" />\r\n                <ListItemSecondaryAction>\r\n                  <Switch\r\n                    edge=\"end\"\r\n                    onChange={handleToggle9(\"wifi\")}\r\n                    checked={checked9.indexOf(\"wifi\") !== -1}\r\n                    inputProps={{\r\n                      \"aria-labelledby\": \"switch-list-label-wifi\"\r\n                    }}\r\n                  />\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemIcon>\r\n                  <BluetoothIcon />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  id=\"switch-list-label-bluetooth\"\r\n                  primary=\"Bluetooth\"\r\n                />\r\n                <ListItemSecondaryAction>\r\n                  <Switch\r\n                    edge=\"end\"\r\n                    onChange={handleToggle9(\"bluetooth\")}\r\n                    checked={checked9.indexOf(\"bluetooth\") !== -1}\r\n                    inputProps={{\r\n                      \"aria-labelledby\": \"switch-list-label-bluetooth\"\r\n                    }}\r\n                  />\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            </List>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode11}\r\n            beforeCodeTitle=\"Inset List\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <List\r\n              component=\"nav\"\r\n              className={classes11.root}\r\n              aria-label=\"Contacts\"\r\n            >\r\n              <ListItem button>\r\n                <ListItemIcon>\r\n                  <StarIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Chelsea Otakan\" />\r\n              </ListItem>\r\n              <ListItem button>\r\n                <ListItemText inset primary=\"Eric Hoffman\" />\r\n              </ListItem>\r\n            </List>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode2}\r\n            beforeCodeTitle=\"Nested List\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <List\r\n              component=\"nav\"\r\n              aria-labelledby=\"nested-list-subheader\"\r\n              subheader={\r\n                <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n                  Nested List Items\r\n                </ListSubheader>\r\n              }\r\n              className={classes2.root}\r\n            >\r\n              <ListItem button>\r\n                <ListItemIcon>\r\n                  <SendIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Sent mail\" />\r\n              </ListItem>\r\n              <ListItem button>\r\n                <ListItemIcon>\r\n                  <DraftsIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Drafts\" />\r\n              </ListItem>\r\n              <ListItem button onClick={handleClick2}>\r\n                <ListItemIcon>\r\n                  <InboxIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Inbox\" />\r\n                {open2 ? <ExpandLess /> : <ExpandMore />}\r\n              </ListItem>\r\n              <Collapse in={open2} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding>\r\n                  <ListItem button className={classes2.nested}>\r\n                    <ListItemIcon>\r\n                      <StarBorder />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Starred\" />\r\n                  </ListItem>\r\n                </List>\r\n              </Collapse>\r\n            </List>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode4}\r\n            beforeCodeTitle=\"Interactive\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              Below is an interactive demo that lets you explore the visual\r\n              results of the different settings:\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes4.root}>\r\n              <FormGroup row>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={dense4}\r\n                      onChange={event => setDense4(event.target.checked)}\r\n                      value=\"dense\"\r\n                    />\r\n                  }\r\n                  label=\"Enable dense\"\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={secondary4}\r\n                      onChange={event => setSecondary4(event.target.checked)}\r\n                      value=\"secondary\"\r\n                    />\r\n                  }\r\n                  label=\"Enable secondary text\"\r\n                />\r\n              </FormGroup>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} md={6}>\r\n                  <Typography variant=\"h6\" className={classes4.title}>\r\n                    Text only\r\n                  </Typography>\r\n                  <div className={classes4.demo}>\r\n                    <List dense={dense4}>\r\n                      {generate(\r\n                        <ListItem>\r\n                          <ListItemText\r\n                            primary=\"Single-line item\"\r\n                            secondary={secondary4 ? \"Secondary text\" : null}\r\n                          />\r\n                        </ListItem>\r\n                      )}\r\n                    </List>\r\n                  </div>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <Typography variant=\"h6\" className={classes4.title}>\r\n                    Icon with text\r\n                  </Typography>\r\n                  <div className={classes4.demo}>\r\n                    <List dense={dense4}>\r\n                      {generate(\r\n                        <ListItem>\r\n                          <ListItemIcon>\r\n                            <FolderIcon />\r\n                          </ListItemIcon>\r\n                          <ListItemText\r\n                            primary=\"Single-line item\"\r\n                            secondary={secondary4 ? \"Secondary text\" : null}\r\n                          />\r\n                        </ListItem>\r\n                      )}\r\n                    </List>\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} md={6}>\r\n                  <Typography variant=\"h6\" className={classes4.title}>\r\n                    Avatar with text\r\n                  </Typography>\r\n                  <div className={classes4.demo}>\r\n                    <List dense={dense4}>\r\n                      {generate(\r\n                        <ListItem>\r\n                          <ListItemAvatar>\r\n                            <Avatar>\r\n                              <FolderIcon />\r\n                            </Avatar>\r\n                          </ListItemAvatar>\r\n                          <ListItemText\r\n                            primary=\"Single-line item\"\r\n                            secondary={secondary4 ? \"Secondary text\" : null}\r\n                          />\r\n                        </ListItem>\r\n                      )}\r\n                    </List>\r\n                  </div>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <Typography variant=\"h6\" className={classes4.title}>\r\n                    Avatar with text and icon\r\n                  </Typography>\r\n                  <div className={classes4.demo}>\r\n                    <List dense={dense4}>\r\n                      {generate(\r\n                        <ListItem>\r\n                          <ListItemAvatar>\r\n                            <Avatar>\r\n                              <FolderIcon />\r\n                            </Avatar>\r\n                          </ListItemAvatar>\r\n                          <ListItemText\r\n                            primary=\"Single-line item\"\r\n                            secondary={secondary4 ? \"Secondary text\" : null}\r\n                          />\r\n                          <ListItemSecondaryAction>\r\n                            <IconButton edge=\"end\" aria-label=\"Delete\">\r\n                              <DeleteIcon />\r\n                            </IconButton>\r\n                          </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                      )}\r\n                    </List>\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode8}\r\n            beforeCodeTitle=\"Checkbox\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              The checkbox is the secondary action for the list item and a\r\n              separate target.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <List dense className={classes8.root}>\r\n              {[0, 1, 2, 3].map(value => {\r\n                const labelId = `checkbox-list-secondary-label-${value}`;\r\n                return (\r\n                  <ListItem key={value} button>\r\n                    <ListItemAvatar>\r\n                      <Avatar\r\n                        alt={`Avatar n°${value + 1}`}\r\n                        src={`https://material-ui.com/static/images/avatar/${value +\r\n                          1}.jpg`}\r\n                      />\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      id={labelId}\r\n                      primary={`Line item ${value + 1}`}\r\n                    />\r\n                    <ListItemSecondaryAction>\r\n                      <Checkbox\r\n                        edge=\"end\"\r\n                        onChange={handleToggle8(value)}\r\n                        checked={checked8.indexOf(value) !== -1}\r\n                        inputProps={{ \"aria-labelledby\": labelId }}\r\n                      />\r\n                    </ListItemSecondaryAction>\r\n                  </ListItem>\r\n                );\r\n              })}\r\n            </List>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode10}\r\n            beforeCodeTitle=\"Pinned Subheader List\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              Upon scrolling, subheaders remain pinned to the top of the screen\r\n              until pushed off screen by the next subheader.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <List className={classes10.root} subheader={<li />}>\r\n              {[0, 1, 2, 3, 4].map(sectionId => (\r\n                <li\r\n                  key={`section-${sectionId}`}\r\n                  className={classes10.listSection}\r\n                >\r\n                  <ul className={classes10.ul}>\r\n                    <ListSubheader>{`I'm sticky ${sectionId}`}</ListSubheader>\r\n                    {[0, 1, 2].map(item => (\r\n                      <ListItem key={`item-${sectionId}-${item}`}>\r\n                        <ListItemText primary={`Item ${item}`} />\r\n                      </ListItem>\r\n                    ))}\r\n                  </ul>\r\n                </li>\r\n              ))}\r\n            </List>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode12}\r\n            beforeCodeTitle=\"Virtualized List\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              In the following example, we demonstrate how to use{\" \"}\r\n              <code>react-window</code> with the <code>List</code> component. It\r\n              renders 200 rows and can easily handle more. Virtualization helps\r\n              with performance issues.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes12.root}>\r\n              <FixedSizeList\r\n                height={400}\r\n                width={360}\r\n                itemSize={46}\r\n                itemCount={200}\r\n              >\r\n                {Row12}\r\n              </FixedSizeList>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nfunction ListItemLink(props) {\r\n  return <ListItem button component=\"a\" {...props} />;\r\n}\r\n\r\nexport default function SimpleList() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <List component=\"nav\" aria-label=\"Main mailbox folders\">\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <InboxIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Inbox\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <DraftsIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Drafts\" />\r\n        </ListItem>\r\n      </List>\r\n      <Divider />\r\n      <List component=\"nav\" aria-label=\"Secondary mailbox folders\">\r\n        <ListItem button>\r\n          <ListItemText primary=\"Trash\" />\r\n        </ListItem>\r\n        <ListItemLink href=\"#simple-list\">\r\n          <ListItemText primary=\"Spam\" />\r\n        </ListItemLink>\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport StarBorder from '@material-ui/icons/StarBorder';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nexport default function NestedList() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  function handleClick() {\r\n    setOpen(!open);\r\n  }\r\n\r\n  return (\r\n    <List\r\n      component=\"nav\"\r\n      aria-labelledby=\"nested-list-subheader\"\r\n      subheader={\r\n        <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n          Nested List Items\r\n        </ListSubheader>\r\n      }\r\n      className={classes.root}\r\n    >\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n          <SendIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Sent mail\" />\r\n      </ListItem>\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n          <DraftsIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Drafts\" />\r\n      </ListItem>\r\n      <ListItem button onClick={handleClick}>\r\n        <ListItemIcon>\r\n          <InboxIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Inbox\" />\r\n        {open ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          <ListItem button className={classes.nested}>\r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Starred\" />\r\n          </ListItem>\r\n        </List>\r\n      </Collapse>\r\n    </List>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function FolderList() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n          <Avatar>\r\n            <ImageIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Photos\" secondary=\"Jan 9, 2014\" />\r\n      </ListItem>\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n          <Avatar>\r\n            <WorkIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Work\" secondary=\"Jan 7, 2014\" />\r\n      </ListItem>\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n          <Avatar>\r\n            <BeachAccessIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Vacation\" secondary=\"July 20, 2014\" />\r\n      </ListItem>\r\n    </List>\r\n  );\r\n}\r\n`;\r\nconst jsCode4 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 752,\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  title: {\r\n    margin: theme.spacing(4, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction generate(element) {\r\n  return [0, 1, 2].map(value =>\r\n    React.cloneElement(element, {\r\n      key: value,\r\n    }),\r\n  );\r\n}\r\n\r\nexport default function InteractiveList() {\r\n  const classes = useStyles();\r\n  const [dense, setDense] = React.useState(false);\r\n  const [secondary, setSecondary] = React.useState(false);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormGroup row>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={dense}\r\n              onChange={event => setDense(event.target.checked)}\r\n              value=\"dense\"\r\n            />\r\n          }\r\n          label=\"Enable dense\"\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={secondary}\r\n              onChange={event => setSecondary(event.target.checked)}\r\n              value=\"secondary\"\r\n            />\r\n          }\r\n          label=\"Enable secondary text\"\r\n        />\r\n      </FormGroup>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} md={6}>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Text only\r\n          </Typography>\r\n          <div className={classes.demo}>\r\n            <List dense={dense}>\r\n              {generate(\r\n                <ListItem>\r\n                  <ListItemText\r\n                    primary=\"Single-line item\"\r\n                    secondary={secondary ? 'Secondary text' : null}\r\n                  />\r\n                </ListItem>,\r\n              )}\r\n            </List>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Icon with text\r\n          </Typography>\r\n          <div className={classes.demo}>\r\n            <List dense={dense}>\r\n              {generate(\r\n                <ListItem>\r\n                  <ListItemIcon>\r\n                    <FolderIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primary=\"Single-line item\"\r\n                    secondary={secondary ? 'Secondary text' : null}\r\n                  />\r\n                </ListItem>,\r\n              )}\r\n            </List>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} md={6}>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Avatar with text\r\n          </Typography>\r\n          <div className={classes.demo}>\r\n            <List dense={dense}>\r\n              {generate(\r\n                <ListItem>\r\n                  <ListItemAvatar>\r\n                    <Avatar>\r\n                      <FolderIcon />\r\n                    </Avatar>\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    primary=\"Single-line item\"\r\n                    secondary={secondary ? 'Secondary text' : null}\r\n                  />\r\n                </ListItem>,\r\n              )}\r\n            </List>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Avatar with text and icon\r\n          </Typography>\r\n          <div className={classes.demo}>\r\n            <List dense={dense}>\r\n              {generate(\r\n                <ListItem>\r\n                  <ListItemAvatar>\r\n                    <Avatar>\r\n                      <FolderIcon />\r\n                    </Avatar>\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    primary=\"Single-line item\"\r\n                    secondary={secondary ? 'Secondary text' : null}\r\n                  />\r\n                  <ListItemSecondaryAction>\r\n                    <IconButton edge=\"end\" aria-label=\"Delete\">\r\n                      <DeleteIcon />\r\n                    </IconButton>\r\n                  </ListItemSecondaryAction>\r\n                </ListItem>,\r\n              )}\r\n            </List>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode5 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function SelectedListItem() {\r\n  const classes = useStyles();\r\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\r\n\r\n  function handleListItemClick(event, index) {\r\n    setSelectedIndex(index);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <List component=\"nav\" aria-label=\"Main mailbox folders\">\r\n        <ListItem\r\n          button\r\n          selected={selectedIndex === 0}\r\n          onClick={event => handleListItemClick(event, 0)}\r\n        >\r\n          <ListItemIcon>\r\n            <InboxIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Inbox\" />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          selected={selectedIndex === 1}\r\n          onClick={event => handleListItemClick(event, 1)}\r\n        >\r\n          <ListItemIcon>\r\n            <DraftsIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Drafts\" />\r\n        </ListItem>\r\n      </List>\r\n      <Divider />\r\n      <List component=\"nav\" aria-label=\"Secondary mailbox folder\">\r\n        <ListItem\r\n          button\r\n          selected={selectedIndex === 2}\r\n          onClick={event => handleListItemClick(event, 2)}\r\n        >\r\n          <ListItemText primary=\"Trash\" />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          selected={selectedIndex === 3}\r\n          onClick={event => handleListItemClick(event, 3)}\r\n        >\r\n          <ListItemText primary=\"Spam\" />\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode6 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n}));\r\n\r\nexport default function AlignItemsList() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      <ListItem alignItems=\"flex-start\">\r\n        <ListItemAvatar>\r\n          <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n        </ListItemAvatar>\r\n        <ListItemText\r\n          primary=\"Brunch this weekend?\"\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                className={classes.inline}\r\n                color=\"textPrimary\"\r\n              >\r\n                Ali Connors\r\n              </Typography>\r\n              {\" — I'll be in your neighborhood doing errands this…\"}\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </ListItem>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n      <ListItem alignItems=\"flex-start\">\r\n        <ListItemAvatar>\r\n          <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/2.jpg\" />\r\n        </ListItemAvatar>\r\n        <ListItemText\r\n          primary=\"Summer BBQ\"\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                className={classes.inline}\r\n                color=\"textPrimary\"\r\n              >\r\n                to Scott, Alex, Jennifer\r\n              </Typography>\r\n              {\" — Wish I could come, but I'm out of town this…\"}\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </ListItem>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n      <ListItem alignItems=\"flex-start\">\r\n        <ListItemAvatar>\r\n          <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/3.jpg\" />\r\n        </ListItemAvatar>\r\n        <ListItemText\r\n          primary=\"Oui Oui\"\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                className={classes.inline}\r\n                color=\"textPrimary\"\r\n              >\r\n                Sandra Adams\r\n              </Typography>\r\n              {' — Do you have Paris recommendations? Have you ever…'}\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </ListItem>\r\n    </List>\r\n  );\r\n}\r\n`;\r\nconst jsCode7 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function CheckboxList() {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = React.useState([0]);\r\n\r\n  const handleToggle = value => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      {[0, 1, 2, 3].map(value => {\r\n        const labelId = \\`checkbox-list-label-\\${value}\\`;\r\n\r\n        return (\r\n          <ListItem key={value} role={undefined} dense button onClick={handleToggle(value)}>\r\n            <ListItemIcon>\r\n              <Checkbox\r\n                edge=\"start\"\r\n                checked={checked.indexOf(value) !== -1}\r\n                tabIndex={-1}\r\n                disableRipple\r\n                inputProps={{ 'aria-labelledby': labelId }}\r\n              />\r\n            </ListItemIcon>\r\n            <ListItemText id={labelId} primary={\\`Line item \\${value + 1}\\`} />\r\n            <ListItemSecondaryAction>\r\n              <IconButton edge=\"end\" aria-label=\"Comments\">\r\n                <CommentIcon />\r\n              </IconButton>\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n}\r\n`;\r\nconst jsCode8 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function CheckboxListSecondary() {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = React.useState([1]);\r\n\r\n  const handleToggle = value => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  return (\r\n    <List dense className={classes.root}>\r\n      {[0, 1, 2, 3].map(value => {\r\n        const labelId = \\`checkbox-list-secondary-label-\\${value}\\`;\r\n        return (\r\n          <ListItem key={value} button>\r\n            <ListItemAvatar>\r\n              <Avatar\r\n                alt={\\`Avatar n°\\${value + 1}\\`}\r\n                src={\\`/static/images/avatar/\\${value + 1}.jpg\\`}\r\n              />\r\n            </ListItemAvatar>\r\n            <ListItemText id={labelId} primary={\\`Line item \\${value + 1}\\`} />\r\n            <ListItemSecondaryAction>\r\n              <Checkbox\r\n                edge=\"end\"\r\n                onChange={handleToggle(value)}\r\n                checked={checked.indexOf(value) !== -1}\r\n                inputProps={{ 'aria-labelledby': labelId }}\r\n              />\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n}\r\n`;\r\nconst jsCode9 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport WifiIcon from '@material-ui/icons/Wifi';\r\nimport BluetoothIcon from '@material-ui/icons/Bluetooth';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function SwitchListSecondary() {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = React.useState(['wifi']);\r\n\r\n  const handleToggle = value => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  return (\r\n    <List subheader={<ListSubheader>Settings</ListSubheader>} className={classes.root}>\r\n      <ListItem>\r\n        <ListItemIcon>\r\n          <WifiIcon />\r\n        </ListItemIcon>\r\n        <ListItemText id=\"switch-list-label-wifi\" primary=\"Wi-Fi\" />\r\n        <ListItemSecondaryAction>\r\n          <Switch\r\n            edge=\"end\"\r\n            onChange={handleToggle('wifi')}\r\n            checked={checked.indexOf('wifi') !== -1}\r\n            inputProps={{ 'aria-labelledby': 'switch-list-label-wifi' }}\r\n          />\r\n        </ListItemSecondaryAction>\r\n      </ListItem>\r\n      <ListItem>\r\n        <ListItemIcon>\r\n          <BluetoothIcon />\r\n        </ListItemIcon>\r\n        <ListItemText id=\"switch-list-label-bluetooth\" primary=\"Bluetooth\" />\r\n        <ListItemSecondaryAction>\r\n          <Switch\r\n            edge=\"end\"\r\n            onChange={handleToggle('bluetooth')}\r\n            checked={checked.indexOf('bluetooth') !== -1}\r\n            inputProps={{ 'aria-labelledby': 'switch-list-label-bluetooth' }}\r\n          />\r\n        </ListItemSecondaryAction>\r\n      </ListItem>\r\n    </List>\r\n  );\r\n}\r\n`;\r\nconst jsCode10 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n    position: 'relative',\r\n    overflow: 'auto',\r\n    maxHeight: 300,\r\n  },\r\n  listSection: {\r\n    backgroundColor: 'inherit',\r\n  },\r\n  ul: {\r\n    backgroundColor: 'inherit',\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nexport default function PinnedSubheaderList() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List className={classes.root} subheader={<li />}>\r\n      {[0, 1, 2, 3, 4].map(sectionId => (\r\n        <li key={\\`section-\\${sectionId}\\`} className={classes.listSection}>\r\n          <ul className={classes.ul}>\r\n            <ListSubheader>{\\`I'm sticky \\${sectionId}\\`}</ListSubheader>\r\n            {[0, 1, 2].map(item => (\r\n              <ListItem key={\\`item-\\${sectionId}-\\${item}\\`}>\r\n                <ListItemText primary={\\`Item \\${item}\\`} />\r\n              </ListItem>\r\n            ))}\r\n          </ul>\r\n        </li>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n`;\r\nconst jsCode11 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport StarIcon from '@material-ui/icons/Star';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function InsetList() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List component=\"nav\" className={classes.root} aria-label=\"Contacts\">\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n          <StarIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Chelsea Otakan\" />\r\n      </ListItem>\r\n      <ListItem button>\r\n        <ListItemText inset primary=\"Eric Hoffman\" />\r\n      </ListItem>\r\n    </List>\r\n  );\r\n}\r\n`;\r\nconst jsCode12 = `\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { FixedSizeList } from 'react-window';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    height: 400,\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nfunction Row(props) {\r\n  const { index, style } = props;\r\n\r\n  return (\r\n    <ListItem button style={style} key={index}>\r\n      <ListItemText primary={\\`Item \\${index + 1}\\`} />\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nRow.propTypes = {\r\n  index: PropTypes.number,\r\n  style: PropTypes.object,\r\n};\r\n\r\nexport default function VirtualizedList() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FixedSizeList height={400} width={360} itemSize={46} itemCount={200}>\r\n        {Row}\r\n      </FixedSizeList>\r\n    </div>\r\n  );\r\n}\r\n`;\r\n","/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  makeStyles,\r\n  lighten,\r\n  withStyles,\r\n  useTheme\r\n} from \"@material-ui/core/styles\";\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Checkbox,\r\n  Toolbar,\r\n  Typography,\r\n  Tooltip,\r\n  IconButton,\r\n  TableSortLabel,\r\n  TablePagination,\r\n  Switch,\r\n  FormControlLabel,\r\n  TableFooter\r\n} from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n    overflowX: \"auto\"\r\n  },\r\n  table: {\r\n    minWidth: 650\r\n  }\r\n}));\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\r\n  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\r\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\r\n  createData(\"Cupcake\", 305, 3.7, 67, 4.3),\r\n  createData(\"Gingerbread\", 356, 16.0, 49, 3.9)\r\n];\r\n\r\n// Example 2\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    width: \"100%\",\r\n    overflowX: \"auto\",\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  table: {\r\n    minWidth: 650\r\n  }\r\n}));\r\n\r\n// Example 3\r\nfunction desc3(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort3(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => desc3(a, b, orderBy)\r\n    : (a, b) => -desc3(a, b, orderBy);\r\n}\r\n\r\nconst headRows3 = [\r\n  {\r\n    id: \"name\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Dessert (100g serving)\"\r\n  },\r\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Calories\" },\r\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\r\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\r\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" }\r\n];\r\n\r\nfunction EnhancedTableHead3(props) {\r\n  const {\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort\r\n  } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"Select all desserts\" }}\r\n          />\r\n        </TableCell>\r\n        {headRows3.map(row => (\r\n          <TableCell\r\n            key={row.id}\r\n            align={row.numeric ? \"right\" : \"left\"}\r\n            padding={row.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === row.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === row.id}\r\n              direction={order}\r\n              onClick={createSortHandler(row.id)}\r\n            >\r\n              {row.label}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead3.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.string.isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired\r\n};\r\n\r\nconst useToolbarStyles3 = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1)\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85)\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark\r\n        },\r\n  spacer: {\r\n    flex: \"1 1 100%\"\r\n  },\r\n  actions: {\r\n    color: theme.palette.text.secondary\r\n  },\r\n  title: {\r\n    flex: \"0 0 auto\"\r\n  }\r\n}));\r\n\r\nconst EnhancedTableToolbar3 = props => {\r\n  const classes = useToolbarStyles3();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0\r\n      })}\r\n    >\r\n      <div className={classes.title}>\r\n        {numSelected > 0 ? (\r\n          <Typography color=\"inherit\" variant=\"subtitle1\">\r\n            {numSelected} selected\r\n          </Typography>\r\n        ) : (\r\n          <Typography variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n      </div>\r\n      <div className={classes.spacer} />\r\n      <div className={classes.actions}>\r\n        {numSelected > 0 ? (\r\n          <Tooltip title=\"Delete\">\r\n            <IconButton aria-label=\"Delete\">\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"Filter list\">\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar3.propTypes = {\r\n  numSelected: PropTypes.number.isRequired\r\n};\r\n\r\nconst useStyles3 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  table: {\r\n    minWidth: 750\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\"\r\n  }\r\n}));\r\n\r\n// Example 4\r\nconst useStyles4 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n    overflowX: \"auto\"\r\n  },\r\n  table: {\r\n    minWidth: 700\r\n  }\r\n}));\r\n\r\nconst StyledTableCell4 = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white\r\n  },\r\n  body: {\r\n    fontSize: 14\r\n  }\r\n}))(TableCell);\r\n\r\nconst StyledTableRow4 = withStyles(theme => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.background.default\r\n    }\r\n  }\r\n}))(TableRow);\r\n\r\n// Example 5\r\nconst useStyles52 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  table: {\r\n    minWidth: 500\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\"\r\n  }\r\n}));\r\n\r\nconst useStyles51 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5)\r\n  }\r\n}));\r\n\r\nfunction TablePaginationActions5(props) {\r\n  const classes = useStyles51();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"First Page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"Previous Page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"Next Page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"Last Page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions5.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired\r\n};\r\n\r\nfunction createData5(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\nconst rows5 = [\r\n  createData5(\"Cupcake\", 305, 3.7),\r\n  createData5(\"Donut\", 452, 25.0),\r\n  createData5(\"Eclair\", 262, 16.0),\r\n  createData5(\"Frozen yoghurt\", 159, 6.0),\r\n  createData5(\"Gingerbread\", 356, 16.0),\r\n  createData5(\"Honeycomb\", 408, 3.2),\r\n  createData5(\"Ice cream sandwich\", 237, 9.0),\r\n  createData5(\"Jelly Bean\", 375, 0.0),\r\n  createData5(\"KitKat\", 518, 26.0),\r\n  createData5(\"Lollipop\", 392, 0.2),\r\n  createData5(\"Marshmallow\", 318, 0),\r\n  createData5(\"Nougat\", 360, 19.0),\r\n  createData5(\"Oreo\", 437, 18.0)\r\n].sort((a, b) => (a.calories < b.calories ? -1 : 1));\r\n\r\n// Example 6\r\nconst TAX_RATE = 0.07;\r\n\r\nconst useStyles6 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n    overflowX: \"auto\"\r\n  },\r\n  table: {\r\n    minWidth: 700\r\n  }\r\n}));\r\n\r\nfunction ccyFormat6(num) {\r\n  return `${num.toFixed(2)}`;\r\n}\r\n\r\nfunction priceRow6(qty, unit) {\r\n  return qty * unit;\r\n}\r\n\r\nfunction createRow6(desc, qty, unit) {\r\n  const price = priceRow6(qty, unit);\r\n  return { desc, qty, unit, price };\r\n}\r\n\r\nfunction subtotal6(items) {\r\n  return items.map(({ price }) => price).reduce((sum, i) => sum + i, 0);\r\n}\r\n\r\nconst rows6 = [\r\n  createRow6(\"Paperclips (Box)\", 100, 1.15),\r\n  createRow6(\"Paper (Case)\", 10, 45.99),\r\n  createRow6(\"Waste Basket\", 2, 17.99)\r\n];\r\n\r\nconst invoiceSubtotal6 = subtotal6(rows6);\r\nconst invoiceTaxes6 = TAX_RATE * invoiceSubtotal6;\r\nconst invoiceTotal6 = invoiceTaxes6 + invoiceSubtotal6;\r\n\r\nexport default function TablesExamplesPage() {\r\n  // Example 1\r\n  const classes1 = useStyles1();\r\n\r\n  // Example 2\r\n  const classes2 = useStyles2();\r\n\r\n  // Example 3\r\n  const classes3 = useStyles3();\r\n  const [order3, setOrder3] = React.useState(\"asc\");\r\n  const [orderBy3, setOrderBy3] = React.useState(\"calories\");\r\n  const [selected3, setSelected3] = React.useState([]);\r\n  const [page3, setPage3] = React.useState(0);\r\n  const [dense3, setDense3] = React.useState(false);\r\n  const [rowsPerPage3, setRowsPerPage3] = React.useState(5);\r\n\r\n  function handleRequestSort3(event, property) {\r\n    const isDesc = orderBy3 === property && order3 === \"desc\";\r\n    setOrder3(isDesc ? \"asc\" : \"desc\");\r\n    setOrderBy3(property);\r\n  }\r\n\r\n  function handleSelectAllClick3(event) {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map(n => n.name);\r\n      setSelected3(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected3([]);\r\n  }\r\n\r\n  function handleClick3(event, name) {\r\n    const selectedIndex = selected3.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected3, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected3.slice(1));\r\n    } else if (selectedIndex === selected3.length - 1) {\r\n      newSelected = newSelected.concat(selected3.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected3.slice(0, selectedIndex),\r\n        selected3.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected3(newSelected);\r\n  }\r\n\r\n  function handleChangePage3(event, newPage) {\r\n    setPage3(newPage);\r\n  }\r\n\r\n  function handleChangeRowsPerPage3(event) {\r\n    setRowsPerPage3(+event.target.value);\r\n  }\r\n\r\n  function handleChangeDense3(event) {\r\n    setDense3(event.target.checked);\r\n  }\r\n\r\n  const isSelected3 = name => selected3.indexOf(name) !== -1;\r\n\r\n  const emptyRows3 =\r\n    rowsPerPage3 - Math.min(rowsPerPage3, rows.length - page3 * rowsPerPage3);\r\n\r\n  // Example 4\r\n  const classes4 = useStyles4();\r\n\r\n  // Example 5\r\n  const classes5 = useStyles52();\r\n  const [page5, setPage5] = React.useState(0);\r\n  const [rowsPerPage5, setRowsPerPage5] = React.useState(5);\r\n\r\n  const emptyRows5 =\r\n    rowsPerPage5 - Math.min(rowsPerPage5, rows5.length - page5 * rowsPerPage5);\r\n\r\n  function handleChangePage5(event, newPage) {\r\n    setPage5(newPage);\r\n  }\r\n\r\n  function handleChangeRowsPerPage5(event) {\r\n    setRowsPerPage5(parseInt(event.target.value, 10));\r\n  }\r\n\r\n  // Example 6\r\n  const classes6 = useStyles6();\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          Data tables display sets of data. They can be fully customized.\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/tables/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode1}\r\n            beforeCodeTitle=\"Simple Table\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>A simple example with no frills.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <Paper className={classes1.root}>\r\n              <Table className={classes1.table}>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Dessert (100g serving)</TableCell>\r\n                    <TableCell align=\"right\">Calories</TableCell>\r\n                    <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n                    <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n                    <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {rows.map(row => (\r\n                    <TableRow key={row.name}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.calories}</TableCell>\r\n                      <TableCell align=\"right\">{row.fat}</TableCell>\r\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein}</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Paper>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode3}\r\n            beforeCodeTitle=\"Sorting & Selecting\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              This example demonstrates the use of <code>Checkbox</code> and\r\n              clickable rows for selection, with a custom <code>Toolbar</code>.\r\n              It uses the <code>TableSortLabel</code> component to help style\r\n              column headings.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes3.root}>\r\n              <Paper className={classes3.paper}>\r\n                <EnhancedTableToolbar3 numSelected={selected3.length} />\r\n                <div className={classes3.tableWrapper}>\r\n                  <Table\r\n                    className={classes3.table}\r\n                    aria-labelledby=\"tableTitle\"\r\n                    size={dense3 ? \"small\" : \"medium\"}\r\n                  >\r\n                    <EnhancedTableHead3\r\n                      numSelected={selected3.length}\r\n                      order={order3}\r\n                      orderBy={orderBy3}\r\n                      onSelectAllClick={handleSelectAllClick3}\r\n                      onRequestSort={handleRequestSort3}\r\n                      rowCount={rows.length}\r\n                    />\r\n                    <TableBody>\r\n                      {stableSort3(rows, getSorting(order3, orderBy3))\r\n                        .slice(\r\n                          page3 * rowsPerPage3,\r\n                          page3 * rowsPerPage3 + rowsPerPage3\r\n                        )\r\n                        .map((row, index) => {\r\n                          const isItemSelected = isSelected3(row.name);\r\n                          const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              onClick={event => handleClick3(event, row.name)}\r\n                              role=\"checkbox\"\r\n                              aria-checked={isItemSelected}\r\n                              tabIndex={-1}\r\n                              key={row.name}\r\n                              selected={isItemSelected}\r\n                            >\r\n                              <TableCell padding=\"checkbox\">\r\n                                <Checkbox\r\n                                  checked={isItemSelected}\r\n                                  inputProps={{\r\n                                    \"aria-labelledby\": labelId\r\n                                  }}\r\n                                />\r\n                              </TableCell>\r\n                              <TableCell\r\n                                component=\"th\"\r\n                                id={labelId}\r\n                                scope=\"row\"\r\n                                padding=\"none\"\r\n                              >\r\n                                {row.name}\r\n                              </TableCell>\r\n                              <TableCell align=\"right\">\r\n                                {row.calories}\r\n                              </TableCell>\r\n                              <TableCell align=\"right\">{row.fat}</TableCell>\r\n                              <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                              <TableCell align=\"right\">{row.protein}</TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                      {emptyRows3 > 0 && (\r\n                        <TableRow style={{ height: 49 * emptyRows3 }}>\r\n                          <TableCell colSpan={6} />\r\n                        </TableRow>\r\n                      )}\r\n                    </TableBody>\r\n                  </Table>\r\n                </div>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[5, 10, 25]}\r\n                  component=\"div\"\r\n                  count={rows.length}\r\n                  rowsPerPage={rowsPerPage3}\r\n                  page={page3}\r\n                  backIconButtonProps={{\r\n                    \"aria-label\": \"Previous Page\"\r\n                  }}\r\n                  nextIconButtonProps={{\r\n                    \"aria-label\": \"Next Page\"\r\n                  }}\r\n                  onChangePage={handleChangePage3}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage3}\r\n                />\r\n              </Paper>\r\n              <FormControlLabel\r\n                control={\r\n                  <Switch checked={dense3} onChange={handleChangeDense3} />\r\n                }\r\n                label=\"Dense padding\"\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode5}\r\n            beforeCodeTitle=\"Custom Table Pagination Action\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              The <code>Action</code> property of the{\" \"}\r\n              <code>TablePagination</code> component allows the implementation\r\n              of custom actions.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <Paper className={classes5.root}>\r\n              <div className={classes5.tableWrapper}>\r\n                <Table className={classes5.table}>\r\n                  <TableBody>\r\n                    {rows5\r\n                      .slice(\r\n                        page5 * rowsPerPage5,\r\n                        page5 * rowsPerPage5 + rowsPerPage5\r\n                      )\r\n                      .map(row => (\r\n                        <TableRow key={row.name}>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {row.name}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">{row.calories}</TableCell>\r\n                          <TableCell align=\"right\">{row.fat}</TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n\r\n                    {emptyRows5 > 0 && (\r\n                      <TableRow style={{ height: 48 * emptyRows5 }}>\r\n                        <TableCell colSpan={6} />\r\n                      </TableRow>\r\n                    )}\r\n                  </TableBody>\r\n                  <TableFooter>\r\n                    <TableRow>\r\n                      <TablePagination\r\n                        rowsPerPageOptions={[5, 10, 25]}\r\n                        colSpan={3}\r\n                        count={rows5.length}\r\n                        rowsPerPage={rowsPerPage5}\r\n                        page={page5}\r\n                        SelectProps={{\r\n                          inputProps: { \"aria-label\": \"Rows per page\" },\r\n                          native: true\r\n                        }}\r\n                        onChangePage={handleChangePage5}\r\n                        onChangeRowsPerPage={handleChangeRowsPerPage5}\r\n                        ActionsComponent={TablePaginationActions5}\r\n                      />\r\n                    </TableRow>\r\n                  </TableFooter>\r\n                </Table>\r\n              </div>\r\n            </Paper>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode2}\r\n            beforeCodeTitle=\"Dense Table\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>A simple example of a dense table with no frills.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes2.root}>\r\n              <Paper className={classes2.paper}>\r\n                <Table className={classes2.table} size=\"small\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Dessert (100g serving)</TableCell>\r\n                      <TableCell align=\"right\">Calories</TableCell>\r\n                      <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n                      <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n                      <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {rows.map(row => (\r\n                      <TableRow key={row.name}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {row.name}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{row.calories}</TableCell>\r\n                        <TableCell align=\"right\">{row.fat}</TableCell>\r\n                        <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                        <TableCell align=\"right\">{row.protein}</TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </Paper>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode4}\r\n            beforeCodeTitle=\"Customized tables\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>Here is an example of customizing the component.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <Paper className={classes4.root}>\r\n              <Table className={classes4.table}>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <StyledTableCell4>Dessert (100g serving)</StyledTableCell4>\r\n                    <StyledTableCell4 align=\"right\">Calories</StyledTableCell4>\r\n                    <StyledTableCell4 align=\"right\">\r\n                      Fat&nbsp;(g)\r\n                    </StyledTableCell4>\r\n                    <StyledTableCell4 align=\"right\">\r\n                      Carbs&nbsp;(g)\r\n                    </StyledTableCell4>\r\n                    <StyledTableCell4 align=\"right\">\r\n                      Protein&nbsp;(g)\r\n                    </StyledTableCell4>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {rows.map(row => (\r\n                    <StyledTableRow4 key={row.name}>\r\n                      <StyledTableCell4 component=\"th\" scope=\"row\">\r\n                        {row.name}\r\n                      </StyledTableCell4>\r\n                      <StyledTableCell4 align=\"right\">\r\n                        {row.calories}\r\n                      </StyledTableCell4>\r\n                      <StyledTableCell4 align=\"right\">\r\n                        {row.fat}\r\n                      </StyledTableCell4>\r\n                      <StyledTableCell4 align=\"right\">\r\n                        {row.carbs}\r\n                      </StyledTableCell4>\r\n                      <StyledTableCell4 align=\"right\">\r\n                        {row.protein}\r\n                      </StyledTableCell4>\r\n                    </StyledTableRow4>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Paper>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode6}\r\n            beforeCodeTitle=\"Spanning Table\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>A simple example with spanning rows & columns.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <Paper className={classes6.root}>\r\n              <Table className={classes6.table}>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Desc</TableCell>\r\n                    <TableCell align=\"right\">Qty.</TableCell>\r\n                    <TableCell align=\"right\">@</TableCell>\r\n                    <TableCell align=\"right\">Price</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {rows6.map(row => (\r\n                    <TableRow key={row.desc}>\r\n                      <TableCell>{row.desc}</TableCell>\r\n                      <TableCell align=\"right\">{row.qty}</TableCell>\r\n                      <TableCell align=\"right\">{row.unit}</TableCell>\r\n                      <TableCell align=\"right\">\r\n                        {ccyFormat6(row.price)}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n\r\n                  <TableRow>\r\n                    <TableCell rowSpan={3} />\r\n                    <TableCell colSpan={2}>Subtotal</TableCell>\r\n                    <TableCell align=\"right\">\r\n                      {ccyFormat6(invoiceSubtotal6)}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell>Tax</TableCell>\r\n                    <TableCell align=\"right\">{`${(TAX_RATE * 100).toFixed(\r\n                      0\r\n                    )} %`}</TableCell>\r\n                    <TableCell align=\"right\">\r\n                      {ccyFormat6(invoiceTaxes6)}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell colSpan={2}>Total</TableCell>\r\n                    <TableCell align=\"right\">\r\n                      {ccyFormat6(invoiceTotal6)}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableBody>\r\n              </Table>\r\n            </Paper>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n}));\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nexport default function SimpleTable() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Dessert (100g serving)</TableCell>\r\n            <TableCell align=\"right\">Calories</TableCell>\r\n            <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n            <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n            <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map(row => (\r\n            <TableRow key={row.name}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.calories}</TableCell>\r\n              <TableCell align=\"right\">{row.fat}</TableCell>\r\n              <TableCell align=\"right\">{row.carbs}</TableCell>\r\n              <TableCell align=\"right\">{row.protein}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    width: '100%',\r\n    overflowX: 'auto',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n}));\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nexport default function DenseTable() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <Table className={classes.table} size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Dessert (100g serving)</TableCell>\r\n              <TableCell align=\"right\">Calories</TableCell>\r\n              <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n              <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n              <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map(row => (\r\n              <TableRow key={row.name}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.name}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{row.calories}</TableCell>\r\n                <TableCell align=\"right\">{row.fat}</TableCell>\r\n                <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                <TableCell align=\"right\">{row.protein}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Donut', 452, 25.0, 51, 4.9),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n  createData('Honeycomb', 408, 3.2, 87, 6.5),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Jelly Bean', 375, 0.0, 94, 0.0),\r\n  createData('KitKat', 518, 26.0, 65, 7.0),\r\n  createData('Lollipop', 392, 0.2, 98, 0.0),\r\n  createData('Marshmallow', 318, 0, 81, 2.0),\r\n  createData('Nougat', 360, 19.0, 9, 37.0),\r\n  createData('Oreo', 437, 18.0, 63, 4.0),\r\n];\r\n\r\nfunction desc(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\nconst headRows = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'Select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headRows.map(row => (\r\n          <TableCell\r\n            key={row.id}\r\n            align={row.numeric ? 'right' : 'left'}\r\n            padding={row.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === row.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === row.id}\r\n              direction={order}\r\n              onClick={createSortHandler(row.id)}\r\n            >\r\n              {row.label}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.string.isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  spacer: {\r\n    flex: '1 1 100%',\r\n  },\r\n  actions: {\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  title: {\r\n    flex: '0 0 auto',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      <div className={classes.title}>\r\n        {numSelected > 0 ? (\r\n          <Typography color=\"inherit\" variant=\"subtitle1\">\r\n            {numSelected} selected\r\n          </Typography>\r\n        ) : (\r\n          <Typography variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n      </div>\r\n      <div className={classes.spacer} />\r\n      <div className={classes.actions}>\r\n        {numSelected > 0 ? (\r\n          <Tooltip title=\"Delete\">\r\n            <IconButton aria-label=\"Delete\">\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"Filter list\">\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  function handleRequestSort(event, property) {\r\n    const isDesc = orderBy === property && order === 'desc';\r\n    setOrder(isDesc ? 'asc' : 'desc');\r\n    setOrderBy(property);\r\n  }\r\n\r\n  function handleSelectAllClick(event) {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map(n => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  }\r\n\r\n  function handleClick(event, name) {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  }\r\n\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(+event.target.value);\r\n  }\r\n\r\n  function handleChangeDense(event) {\r\n    setDense(event.target.checked);\r\n  }\r\n\r\n  const isSelected = name => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n          >\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getSorting(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = \\`enhanced-table-checkbox-\\${index}\\`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={event => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.calories}</TableCell>\r\n                      <TableCell align=\"right\">{row.fat}</TableCell>\r\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 49 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          backIconButtonProps={{\r\n            'aria-label': 'Previous Page',\r\n          }}\r\n          nextIconButtonProps={{\r\n            'aria-label': 'Next Page',\r\n          }}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode4 = `\r\nimport React from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst StyledTableCell = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles(theme => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.background.default,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n}));\r\n\r\nexport default function CustomizedTables() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>Dessert (100g serving)</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Calories</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Fat&nbsp;(g)</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Carbs&nbsp;(g)</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Protein&nbsp;(g)</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map(row => (\r\n            <StyledTableRow key={row.name}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.calories}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.fat}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.carbs}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.protein}</StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n`;\r\nconst jsCode5 = `\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"First Page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"Previous Page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"Next Page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"Last Page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\nconst rows = [\r\n  createData('Cupcake', 305, 3.7),\r\n  createData('Donut', 452, 25.0),\r\n  createData('Eclair', 262, 16.0),\r\n  createData('Frozen yoghurt', 159, 6.0),\r\n  createData('Gingerbread', 356, 16.0),\r\n  createData('Honeycomb', 408, 3.2),\r\n  createData('Ice cream sandwich', 237, 9.0),\r\n  createData('Jelly Bean', 375, 0.0),\r\n  createData('KitKat', 518, 26.0),\r\n  createData('Lollipop', 392, 0.2),\r\n  createData('Marshmallow', 318, 0),\r\n  createData('Nougat', 360, 19.0),\r\n  createData('Oreo', 437, 18.0),\r\n].sort((a, b) => (a.calories < b.calories ? -1 : 1));\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nexport default function CustomPaginationActionsTable() {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table}>\r\n          <TableBody>\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\r\n              <TableRow key={row.name}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.name}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{row.calories}</TableCell>\r\n                <TableCell align=\"right\">{row.fat}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n\r\n            {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                colSpan={3}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'Rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n`;\r\nconst jsCode6 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst TAX_RATE = 0.07;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n}));\r\n\r\nfunction ccyFormat(num) {\r\n  return \\`\\${num.toFixed(2)}\\`;\r\n}\r\n\r\nfunction priceRow(qty, unit) {\r\n  return qty * unit;\r\n}\r\n\r\nfunction createRow(desc, qty, unit) {\r\n  const price = priceRow(qty, unit);\r\n  return { desc, qty, unit, price };\r\n}\r\n\r\nfunction subtotal(items) {\r\n  return items.map(({ price }) => price).reduce((sum, i) => sum + i, 0);\r\n}\r\n\r\nconst rows = [\r\n  createRow('Paperclips (Box)', 100, 1.15),\r\n  createRow('Paper (Case)', 10, 45.99),\r\n  createRow('Waste Basket', 2, 17.99),\r\n];\r\n\r\nconst invoiceSubtotal = subtotal(rows);\r\nconst invoiceTaxes = TAX_RATE * invoiceSubtotal;\r\nconst invoiceTotal = invoiceTaxes + invoiceSubtotal;\r\n\r\nexport default function SpanningTable() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Desc</TableCell>\r\n            <TableCell align=\"right\">Qty.</TableCell>\r\n            <TableCell align=\"right\">@</TableCell>\r\n            <TableCell align=\"right\">Price</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map(row => (\r\n            <TableRow key={row.desc}>\r\n              <TableCell>{row.desc}</TableCell>\r\n              <TableCell align=\"right\">{row.qty}</TableCell>\r\n              <TableCell align=\"right\">{row.unit}</TableCell>\r\n              <TableCell align=\"right\">{ccyFormat(row.price)}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n\r\n          <TableRow>\r\n            <TableCell rowSpan={3} />\r\n            <TableCell colSpan={2}>Subtotal</TableCell>\r\n            <TableCell align=\"right\">{ccyFormat(invoiceSubtotal)}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>Tax</TableCell>\r\n            <TableCell align=\"right\">{\\`\\${(TAX_RATE * 100).toFixed(0)} %\\`}</TableCell>\r\n            <TableCell align=\"right\">{ccyFormat(invoiceTaxes)}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell colSpan={2}>Total</TableCell>\r\n            <TableCell align=\"right\">{ccyFormat(invoiceTotal)}</TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n`;\r\n","/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport {makeStyles, withStyles} from \"@material-ui/core/styles\";\r\nimport {\r\n  Tooltip,\r\n  Fab,\r\n  IconButton,\r\n  Grid,\r\n  Button,\r\n  Typography,\r\n  ClickAwayListener,\r\n  Fade,\r\n  Zoom\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n// Example 1\r\nconst useStyles1 = makeStyles(theme => ({\r\n  fab: {\r\n    margin: theme.spacing(2)\r\n  },\r\n  absolute: {\r\n    position: \"absolute\",\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(3)\r\n  }\r\n}));\r\n\r\n// Example 2\r\nconst useStyles2 = makeStyles({\r\n  root: {\r\n    width: 500\r\n  }\r\n});\r\n\r\n// Example 3\r\nfunction arrowGenerator3(color) {\r\n  return {\r\n    '&[x-placement*=\"bottom\"] $arrow': {\r\n      top: 0,\r\n      left: 0,\r\n      marginTop: \"-0.95em\",\r\n      width: \"3em\",\r\n      height: \"1em\",\r\n      \"&::before\": {\r\n        borderWidth: \"0 1em 1em 1em\",\r\n        borderColor: `transparent transparent ${color} transparent`\r\n      }\r\n    },\r\n    '&[x-placement*=\"top\"] $arrow': {\r\n      bottom: 0,\r\n      left: 0,\r\n      marginBottom: \"-0.95em\",\r\n      width: \"3em\",\r\n      height: \"1em\",\r\n      \"&::before\": {\r\n        borderWidth: \"1em 1em 0 1em\",\r\n        borderColor: `${color} transparent transparent transparent`\r\n      }\r\n    },\r\n    '&[x-placement*=\"right\"] $arrow': {\r\n      left: 0,\r\n      marginLeft: \"-0.95em\",\r\n      height: \"3em\",\r\n      width: \"1em\",\r\n      \"&::before\": {\r\n        borderWidth: \"1em 1em 1em 0\",\r\n        borderColor: `transparent ${color} transparent transparent`\r\n      }\r\n    },\r\n    '&[x-placement*=\"left\"] $arrow': {\r\n      right: 0,\r\n      marginRight: \"-0.95em\",\r\n      height: \"3em\",\r\n      width: \"1em\",\r\n      \"&::before\": {\r\n        borderWidth: \"1em 0 1em 1em\",\r\n        borderColor: `transparent transparent transparent ${color}`\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nconst LightTooltip3 = withStyles(theme => ({\r\n  tooltip: {\r\n    backgroundColor: theme.palette.common.white,\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: 11\r\n  }\r\n}))(Tooltip);\r\n\r\nconst useStylesArrow3 = makeStyles(theme => ({\r\n  arrow: {\r\n    position: \"absolute\",\r\n    fontSize: 6,\r\n    width: \"3em\",\r\n    height: \"3em\",\r\n    \"&::before\": {\r\n      content: '\"\"',\r\n      margin: \"auto\",\r\n      display: \"block\",\r\n      width: 0,\r\n      height: 0,\r\n      borderStyle: \"solid\"\r\n    }\r\n  },\r\n  popper: arrowGenerator3(theme.palette.grey[700])\r\n}));\r\n\r\nfunction ArrowTooltip3(props) {\r\n  const { arrow, ...classes } = useStylesArrow3();\r\n  const [arrowRef, setArrowRef] = React.useState(null);\r\n\r\n  return (\r\n    <Tooltip\r\n      classes={classes}\r\n      PopperProps={{\r\n        popperOptions: {\r\n          modifiers: {\r\n            arrow: {\r\n              enabled: Boolean(arrowRef),\r\n              element: arrowRef\r\n            }\r\n          }\r\n        }\r\n      }}\r\n      {...props}\r\n      title={\r\n        <React.Fragment>\r\n          {props.title}\r\n          <span className={arrow} ref={setArrowRef} />\r\n        </React.Fragment>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nArrowTooltip3.propTypes = {\r\n  title: PropTypes.node\r\n};\r\n\r\nconst useStylesBootstrap3 = makeStyles(theme => ({\r\n  arrow: {\r\n    position: \"absolute\",\r\n    fontSize: 6,\r\n    width: \"3em\",\r\n    height: \"3em\",\r\n    \"&::before\": {\r\n      content: '\"\"',\r\n      margin: \"auto\",\r\n      display: \"block\",\r\n      width: 0,\r\n      height: 0,\r\n      borderStyle: \"solid\"\r\n    }\r\n  },\r\n  popper: arrowGenerator3(theme.palette.common.black),\r\n  tooltip: {\r\n    backgroundColor: theme.palette.common.black\r\n  },\r\n  tooltipPlacementLeft: {\r\n    margin: \"0 8px\"\r\n  },\r\n  tooltipPlacementRight: {\r\n    margin: \"0 8px\"\r\n  },\r\n  tooltipPlacementTop: {\r\n    margin: \"8px 0\"\r\n  },\r\n  tooltipPlacementBottom: {\r\n    margin: \"8px 0\"\r\n  }\r\n}));\r\n\r\nfunction BootstrapTooltip3(props) {\r\n  const { arrow, ...classes } = useStylesBootstrap3();\r\n  const [arrowRef, setArrowRef] = React.useState(null);\r\n\r\n  return (\r\n    <Tooltip\r\n      classes={classes}\r\n      PopperProps={{\r\n        popperOptions: {\r\n          modifiers: {\r\n            arrow: {\r\n              enabled: Boolean(arrowRef),\r\n              element: arrowRef\r\n            }\r\n          }\r\n        }\r\n      }}\r\n      {...props}\r\n      title={\r\n        <React.Fragment>\r\n          {props.title}\r\n          <span className={arrow} ref={setArrowRef} />\r\n        </React.Fragment>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nBootstrapTooltip3.propTypes = {\r\n  title: PropTypes.node\r\n};\r\n\r\nconst HtmlTooltip3 = withStyles(theme => ({\r\n  tooltip: {\r\n    backgroundColor: \"#f5f5f9\",\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    maxWidth: 220,\r\n    fontSize: theme.typography.pxToRem(12),\r\n    border: \"1px solid #dadde9\"\r\n  }\r\n}))(Tooltip);\r\n\r\n// Example 6\r\nconst useStyles6 = makeStyles(theme => ({\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  customWidth: {\r\n    maxWidth: 500\r\n  },\r\n  noMaxWidth: {\r\n    maxWidth: \"none\"\r\n  }\r\n}));\r\n\r\nconst longText6 = `\r\nAliquam eget finibus ante, non facilisis lectus. Sed vitae dignissim est, vel aliquam tellus.\r\nPraesent non nunc mollis, fermentum neque at, semper arcu.\r\nNullam eget est sed sem iaculis gravida eget vitae justo.\r\n`;\r\n\r\n// Example 7\r\nconst useStyles7 = makeStyles(theme => ({\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nexport default function TooltipsExamplesPage() {\r\n  // Example 1\r\n  const classes1 = useStyles1();\r\n\r\n  // Example 2\r\n  const classes2 = useStyles2();\r\n\r\n  // Example 4\r\n  const [open4, setOpen4] = React.useState(false);\r\n\r\n  function handleTooltipClose4() {\r\n    setOpen4(false);\r\n  }\r\n\r\n  function handleTooltipOpen4() {\r\n    setOpen4(true);\r\n  }\r\n\r\n  // Example 5\r\n  const [open5, setOpen5] = React.useState(false);\r\n\r\n  function handleTooltipClose5() {\r\n    setOpen5(false);\r\n  }\r\n\r\n  function handleTooltipOpen5() {\r\n    setOpen5(true);\r\n  }\r\n\r\n  // Example 6\r\n  const classes6 = useStyles6();\r\n\r\n  // Example 7\r\n  const classes7 = useStyles7();\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          Tooltips display informative text when users hover over, focus on, or\r\n          tap an element.\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/tooltips/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Simple Tooltips\">\r\n            <div>\r\n              <Tooltip title=\"Delete\">\r\n                <IconButton aria-label=\"Delete\">\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n              <Tooltip title=\"Add\" aria-label=\"Add\">\r\n                <Fab color=\"primary\" className={classes1.fab}>\r\n                  <AddIcon />\r\n                </Fab>\r\n              </Tooltip>\r\n              <Tooltip title=\"Add\" aria-label=\"Add\">\r\n                <Fab color=\"secondary\" className={classes1.fab}>\r\n                  <AddIcon />\r\n                </Fab>\r\n              </Tooltip>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode3} beforeCodeTitle=\"Customized tooltips\">\r\n            <span>\r\n              Here are some examples of customizing the component. You can learn\r\n              more about this in the overrides documentation page.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <LightTooltip3 title=\"Add\">\r\n                <Button>Light</Button>\r\n              </LightTooltip3>\r\n              <ArrowTooltip3 title=\"Add\">\r\n                <Button>Arrow</Button>\r\n              </ArrowTooltip3>\r\n              <BootstrapTooltip3 title=\"Add\">\r\n                <Button>Bootstrap</Button>\r\n              </BootstrapTooltip3>\r\n              <HtmlTooltip3\r\n                title={\r\n                  <React.Fragment>\r\n                    <Typography color=\"inherit\">Tooltip with HTML</Typography>\r\n                    <em>{\"And here's\"}</em> <b>{\"some\"}</b>{\" \"}\r\n                    <u>{\"amazing content\"}</u>. {\"It's very engaging. Right?\"}\r\n                  </React.Fragment>\r\n                }\r\n              >\r\n                <Button>HTML</Button>\r\n              </HtmlTooltip3>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode5} beforeCodeTitle=\"Controlled Tooltips\">\r\n            <span>\r\n              You can use the <code>open</code>, <code>onOpen</code> and{\" \"}\r\n              <code>onClose</code> properties to control the behavior of the\r\n              tooltip.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <Tooltip\r\n              onClose={handleTooltipClose5}\r\n              onOpen={handleTooltipOpen5}\r\n              open={open5}\r\n              title=\"Add\"\r\n            >\r\n              <Button>Controlled</Button>\r\n            </Tooltip>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode7} beforeCodeTitle=\"Interactive\">\r\n            <span>\r\n              A tooltip can be interactive. It won't close when the user hovers\r\n              over the tooltip before the <code>leaveDelay</code> is expired.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <Tooltip title=\"Add\" interactive>\r\n                <Button className={classes7.button}>Interactive</Button>\r\n              </Tooltip>\r\n              <Tooltip title=\"Add\">\r\n                <Button className={classes7.button}>Non Interactive</Button>\r\n              </Tooltip>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode9} beforeCodeTitle=\"Transitions\">\r\n            <span>Use a different transition.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <Tooltip title=\"Add\">\r\n                <Button>Grow</Button>\r\n              </Tooltip>\r\n              <Tooltip\r\n                TransitionComponent={Fade}\r\n                TransitionProps={{ timeout: 600 }}\r\n                title=\"Add\"\r\n              >\r\n                <Button>Fade</Button>\r\n              </Tooltip>\r\n              <Tooltip TransitionComponent={Zoom} title=\"Add\">\r\n                <Button>Zoom</Button>\r\n              </Tooltip>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"Positioned Tooltips\">\r\n            <span>\r\n              The <code>Tooltip</code> has 12 placements choice. They don’t have\r\n              directional arrows; instead, they rely on motion emanating from\r\n              the source to convey direction.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\" />\r\n            <div className={classes2.root}>\r\n              <Grid container justify=\"center\">\r\n                <Grid item>\r\n                  <Tooltip title=\"Add\" placement=\"top-start\">\r\n                    <Button>top-start</Button>\r\n                  </Tooltip>\r\n                  <Tooltip title=\"Add\" placement=\"top\">\r\n                    <Button>top</Button>\r\n                  </Tooltip>\r\n                  <Tooltip title=\"Add\" placement=\"top-end\">\r\n                    <Button>top-end</Button>\r\n                  </Tooltip>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container justify=\"center\">\r\n                <Grid item xs={6}>\r\n                  <Tooltip title=\"Add\" placement=\"left-start\">\r\n                    <Button>left-start</Button>\r\n                  </Tooltip>\r\n                  <br />\r\n                  <Tooltip title=\"Add\" placement=\"left\">\r\n                    <Button>left</Button>\r\n                  </Tooltip>\r\n                  <br />\r\n                  <Tooltip title=\"Add\" placement=\"left-end\">\r\n                    <Button>left-end</Button>\r\n                  </Tooltip>\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  container\r\n                  xs={6}\r\n                  alignItems=\"flex-end\"\r\n                  direction=\"column\"\r\n                >\r\n                  <Grid item>\r\n                    <Tooltip title=\"Add\" placement=\"right-start\">\r\n                      <Button>right-start</Button>\r\n                    </Tooltip>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Tooltip title=\"Add\" placement=\"right\">\r\n                      <Button>right</Button>\r\n                    </Tooltip>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Tooltip title=\"Add\" placement=\"right-end\">\r\n                      <Button>right-end</Button>\r\n                    </Tooltip>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container justify=\"center\">\r\n                <Grid item>\r\n                  <Tooltip title=\"Add\" placement=\"bottom-start\">\r\n                    <Button>bottom-start</Button>\r\n                  </Tooltip>\r\n                  <Tooltip title=\"Add\" placement=\"bottom\">\r\n                    <Button>bottom</Button>\r\n                  </Tooltip>\r\n                  <Tooltip title=\"Add\" placement=\"bottom-end\">\r\n                    <Button>bottom-end</Button>\r\n                  </Tooltip>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode4} beforeCodeTitle=\"Triggers\">\r\n            <span>\r\n              You can define the types of events that cause a tooltip to show.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <Grid container justify=\"center\">\r\n                <Grid item>\r\n                  <Tooltip disableFocusListener title=\"Add\">\r\n                    <Button>Hover or touch</Button>\r\n                  </Tooltip>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Tooltip disableHoverListener title=\"Add\">\r\n                    <Button>Focus or touch</Button>\r\n                  </Tooltip>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Tooltip\r\n                    disableFocusListener\r\n                    disableTouchListener\r\n                    title=\"Add\"\r\n                  >\r\n                    <Button>Hover</Button>\r\n                  </Tooltip>\r\n                </Grid>\r\n                <Grid item>\r\n                  <ClickAwayListener onClickAway={handleTooltipClose4}>\r\n                    <div>\r\n                      <Tooltip\r\n                        PopperProps={{\r\n                          disablePortal: true\r\n                        }}\r\n                        onClose={handleTooltipClose4}\r\n                        open={open4}\r\n                        disableFocusListener\r\n                        disableHoverListener\r\n                        disableTouchListener\r\n                        title=\"Add\"\r\n                      >\r\n                        <Button onClick={handleTooltipOpen4}>Click</Button>\r\n                      </Tooltip>\r\n                    </div>\r\n                  </ClickAwayListener>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode6} beforeCodeTitle=\"Variable Width\">\r\n            <span>\r\n              The <code>Tooltip</code> wraps long text by default to make it\r\n              readable.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <Tooltip title={longText6}>\r\n                <Button className={classes6.button}>\r\n                  Default Width [300px]\r\n                </Button>\r\n              </Tooltip>\r\n              <Tooltip\r\n                title={longText6}\r\n                classes={{ tooltip: classes6.customWidth }}\r\n              >\r\n                <Button className={classes6.button}>\r\n                  Custom Width [500px]\r\n                </Button>\r\n              </Tooltip>\r\n              <Tooltip\r\n                title={longText6}\r\n                classes={{ tooltip: classes6.noMaxWidth }}\r\n              >\r\n                <Button className={classes6.button}>No wrapping</Button>\r\n              </Tooltip>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode8} beforeCodeTitle=\"Disabled Elements\">\r\n            <span>\r\n              By default disabled elements like <code>&lt;button&gt;</code> do\r\n              not trigger user interactions so a <code>Tooltip</code> will not\r\n              activate on normal events like hover. To accommodate disabled\r\n              elements, add a simple wrapper element like a <code>span</code>.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <Tooltip title=\"You don't have permission to do this\">\r\n              <span>\r\n                <Button disabled>A Disabled Button</Button>\r\n              </span>\r\n            </Tooltip>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode10} beforeCodeTitle=\"Showing and hiding\">\r\n            <span>\r\n              The tooltip is normally shown immediately when the user's mouse\r\n              hovers over the element, and hides immediately when the user's\r\n              mouse leaves. A delay in showing or hiding the tooltip can be\r\n              added through the properties <code>enterDelay</code> and{\" \"}\r\n              <code>leaveDelay</code>.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n\r\n            <Tooltip title=\"Add\" enterDelay={500} leaveDelay={200}>\r\n              <Button>[500ms, 200ms]</Button>\r\n            </Tooltip>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  fab: {\r\n    margin: theme.spacing(2),\r\n  },\r\n  absolute: {\r\n    position: 'absolute',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function SimpleTooltips() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Tooltip title=\"Delete\">\r\n        <IconButton aria-label=\"Delete\">\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Tooltip title=\"Add\" aria-label=\"Add\">\r\n        <Fab color=\"primary\" className={classes.fab}>\r\n          <AddIcon />\r\n        </Fab>\r\n      </Tooltip>\r\n      <Tooltip title=\"Add\" aria-label=\"Add\">\r\n        <Fab color=\"secondary\" className={classes.absolute}>\r\n          <AddIcon />\r\n        </Fab>\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 500,\r\n  },\r\n});\r\n\r\nexport default function PositionedTooltips() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container justify=\"center\">\r\n        <Grid item>\r\n          <Tooltip title=\"Add\" placement=\"top-start\">\r\n            <Button>top-start</Button>\r\n          </Tooltip>\r\n          <Tooltip title=\"Add\" placement=\"top\">\r\n            <Button>top</Button>\r\n          </Tooltip>\r\n          <Tooltip title=\"Add\" placement=\"top-end\">\r\n            <Button>top-end</Button>\r\n          </Tooltip>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container justify=\"center\">\r\n        <Grid item xs={6}>\r\n          <Tooltip title=\"Add\" placement=\"left-start\">\r\n            <Button>left-start</Button>\r\n          </Tooltip>\r\n          <br />\r\n          <Tooltip title=\"Add\" placement=\"left\">\r\n            <Button>left</Button>\r\n          </Tooltip>\r\n          <br />\r\n          <Tooltip title=\"Add\" placement=\"left-end\">\r\n            <Button>left-end</Button>\r\n          </Tooltip>\r\n        </Grid>\r\n        <Grid item container xs={6} alignItems=\"flex-end\" direction=\"column\">\r\n          <Grid item>\r\n            <Tooltip title=\"Add\" placement=\"right-start\">\r\n              <Button>right-start</Button>\r\n            </Tooltip>\r\n          </Grid>\r\n          <Grid item>\r\n            <Tooltip title=\"Add\" placement=\"right\">\r\n              <Button>right</Button>\r\n            </Tooltip>\r\n          </Grid>\r\n          <Grid item>\r\n            <Tooltip title=\"Add\" placement=\"right-end\">\r\n              <Button>right-end</Button>\r\n            </Tooltip>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container justify=\"center\">\r\n        <Grid item>\r\n          <Tooltip title=\"Add\" placement=\"bottom-start\">\r\n            <Button>bottom-start</Button>\r\n          </Tooltip>\r\n          <Tooltip title=\"Add\" placement=\"bottom\">\r\n            <Button>bottom</Button>\r\n          </Tooltip>\r\n          <Tooltip title=\"Add\" placement=\"bottom-end\">\r\n            <Button>bottom-end</Button>\r\n          </Tooltip>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction arrowGenerator(color) {\r\n  return {\r\n    '&[x-placement*=\"bottom\"] $arrow': {\r\n      top: 0,\r\n      left: 0,\r\n      marginTop: '-0.95em',\r\n      width: '3em',\r\n      height: '1em',\r\n      '&::before': {\r\n        borderWidth: '0 1em 1em 1em',\r\n        borderColor: \\`transparent transparent \\${color} transparent\\`,\r\n      },\r\n    },\r\n    '&[x-placement*=\"top\"] $arrow': {\r\n      bottom: 0,\r\n      left: 0,\r\n      marginBottom: '-0.95em',\r\n      width: '3em',\r\n      height: '1em',\r\n      '&::before': {\r\n        borderWidth: '1em 1em 0 1em',\r\n        borderColor: \\`\\${color} transparent transparent transparent\\`,\r\n      },\r\n    },\r\n    '&[x-placement*=\"right\"] $arrow': {\r\n      left: 0,\r\n      marginLeft: '-0.95em',\r\n      height: '3em',\r\n      width: '1em',\r\n      '&::before': {\r\n        borderWidth: '1em 1em 1em 0',\r\n        borderColor: \\`transparent \\${color} transparent transparent\\`,\r\n      },\r\n    },\r\n    '&[x-placement*=\"left\"] $arrow': {\r\n      right: 0,\r\n      marginRight: '-0.95em',\r\n      height: '3em',\r\n      width: '1em',\r\n      '&::before': {\r\n        borderWidth: '1em 0 1em 1em',\r\n        borderColor: \\`transparent transparent transparent \\${color}\\`,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nconst LightTooltip = withStyles(theme => ({\r\n  tooltip: {\r\n    backgroundColor: theme.palette.common.white,\r\n    color: 'rgba(0, 0, 0, 0.87)',\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: 11,\r\n  },\r\n}))(Tooltip);\r\n\r\nconst useStylesArrow = makeStyles(theme => ({\r\n  arrow: {\r\n    position: 'absolute',\r\n    fontSize: 6,\r\n    width: '3em',\r\n    height: '3em',\r\n    '&::before': {\r\n      content: '\"\"',\r\n      margin: 'auto',\r\n      display: 'block',\r\n      width: 0,\r\n      height: 0,\r\n      borderStyle: 'solid',\r\n    },\r\n  },\r\n  popper: arrowGenerator(theme.palette.grey[700]),\r\n}));\r\n\r\nfunction ArrowTooltip(props) {\r\n  const { arrow, ...classes } = useStylesArrow();\r\n  const [arrowRef, setArrowRef] = React.useState(null);\r\n\r\n  return (\r\n    <Tooltip\r\n      classes={classes}\r\n      PopperProps={{\r\n        popperOptions: {\r\n          modifiers: {\r\n            arrow: {\r\n              enabled: Boolean(arrowRef),\r\n              element: arrowRef,\r\n            },\r\n          },\r\n        },\r\n      }}\r\n      {...props}\r\n      title={\r\n        <React.Fragment>\r\n          {props.title}\r\n          <span className={arrow} ref={setArrowRef} />\r\n        </React.Fragment>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nArrowTooltip.propTypes = {\r\n  title: PropTypes.node,\r\n};\r\n\r\nconst useStylesBootstrap = makeStyles(theme => ({\r\n  arrow: {\r\n    position: 'absolute',\r\n    fontSize: 6,\r\n    width: '3em',\r\n    height: '3em',\r\n    '&::before': {\r\n      content: '\"\"',\r\n      margin: 'auto',\r\n      display: 'block',\r\n      width: 0,\r\n      height: 0,\r\n      borderStyle: 'solid',\r\n    },\r\n  },\r\n  popper: arrowGenerator(theme.palette.common.black),\r\n  tooltip: {\r\n    backgroundColor: theme.palette.common.black,\r\n  },\r\n  tooltipPlacementLeft: {\r\n    margin: '0 8px',\r\n  },\r\n  tooltipPlacementRight: {\r\n    margin: '0 8px',\r\n  },\r\n  tooltipPlacementTop: {\r\n    margin: '8px 0',\r\n  },\r\n  tooltipPlacementBottom: {\r\n    margin: '8px 0',\r\n  },\r\n}));\r\n\r\nfunction BootstrapTooltip(props) {\r\n  const { arrow, ...classes } = useStylesBootstrap();\r\n  const [arrowRef, setArrowRef] = React.useState(null);\r\n\r\n  return (\r\n    <Tooltip\r\n      classes={classes}\r\n      PopperProps={{\r\n        popperOptions: {\r\n          modifiers: {\r\n            arrow: {\r\n              enabled: Boolean(arrowRef),\r\n              element: arrowRef,\r\n            },\r\n          },\r\n        },\r\n      }}\r\n      {...props}\r\n      title={\r\n        <React.Fragment>\r\n          {props.title}\r\n          <span className={arrow} ref={setArrowRef} />\r\n        </React.Fragment>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nBootstrapTooltip.propTypes = {\r\n  title: PropTypes.node,\r\n};\r\n\r\nconst HtmlTooltip = withStyles(theme => ({\r\n  tooltip: {\r\n    backgroundColor: '#f5f5f9',\r\n    color: 'rgba(0, 0, 0, 0.87)',\r\n    maxWidth: 220,\r\n    fontSize: theme.typography.pxToRem(12),\r\n    border: '1px solid #dadde9',\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default function CustomizedTooltips() {\r\n  return (\r\n    <div>\r\n      <LightTooltip title=\"Add\">\r\n        <Button>Light</Button>\r\n      </LightTooltip>\r\n      <ArrowTooltip title=\"Add\">\r\n        <Button>Arrow</Button>\r\n      </ArrowTooltip>\r\n      <BootstrapTooltip title=\"Add\">\r\n        <Button>Bootstrap</Button>\r\n      </BootstrapTooltip>\r\n      <HtmlTooltip\r\n        title={\r\n          <React.Fragment>\r\n            <Typography color=\"inherit\">Tooltip with HTML</Typography>\r\n            <em>{\"And here's\"}</em> <b>{'some'}</b> <u>{'amazing content'}</u>.{' '}\r\n            {\"It's very engaging. Right?\"}\r\n          </React.Fragment>\r\n        }\r\n      >\r\n        <Button>HTML</Button>\r\n      </HtmlTooltip>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode4 = `\r\nimport React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\n\r\nexport default function TriggersTooltips() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleTooltipClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  function handleTooltipOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Grid container justify=\"center\">\r\n        <Grid item>\r\n          <Tooltip disableFocusListener title=\"Add\">\r\n            <Button>Hover or touch</Button>\r\n          </Tooltip>\r\n        </Grid>\r\n        <Grid item>\r\n          <Tooltip disableHoverListener title=\"Add\">\r\n            <Button>Focus or touch</Button>\r\n          </Tooltip>\r\n        </Grid>\r\n        <Grid item>\r\n          <Tooltip disableFocusListener disableTouchListener title=\"Add\">\r\n            <Button>Hover</Button>\r\n          </Tooltip>\r\n        </Grid>\r\n        <Grid item>\r\n          <ClickAwayListener onClickAway={handleTooltipClose}>\r\n            <div>\r\n              <Tooltip\r\n                PopperProps={{\r\n                  disablePortal: true,\r\n                }}\r\n                onClose={handleTooltipClose}\r\n                open={open}\r\n                disableFocusListener\r\n                disableHoverListener\r\n                disableTouchListener\r\n                title=\"Add\"\r\n              >\r\n                <Button onClick={handleTooltipOpen}>Click</Button>\r\n              </Tooltip>\r\n            </div>\r\n          </ClickAwayListener>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode5 = `\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nexport default function ControlledTooltips() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleTooltipClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  function handleTooltipOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  return (\r\n    <Tooltip onClose={handleTooltipClose} onOpen={handleTooltipOpen} open={open} title=\"Add\">\r\n      <Button>Controlled</Button>\r\n    </Tooltip>\r\n  );\r\n}\r\n`;\r\nconst jsCode6 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  customWidth: {\r\n    maxWidth: 500,\r\n  },\r\n  noMaxWidth: {\r\n    maxWidth: 'none',\r\n  },\r\n}));\r\n\r\nconst longText = \\`\r\nAliquam eget finibus ante, non facilisis lectus. Sed vitae dignissim est, vel aliquam tellus.\r\nPraesent non nunc mollis, fermentum neque at, semper arcu.\r\nNullam eget est sed sem iaculis gravida eget vitae justo.\r\n\\`;\r\n\r\nexport default function VariableWidth() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Tooltip title={longText}>\r\n        <Button className={classes.button}>Default Width [300px]</Button>\r\n      </Tooltip>\r\n      <Tooltip title={longText} classes={{ tooltip: classes.customWidth }}>\r\n        <Button className={classes.button}>Custom Width [500px]</Button>\r\n      </Tooltip>\r\n      <Tooltip title={longText} classes={{ tooltip: classes.noMaxWidth }}>\r\n        <Button className={classes.button}>No wrapping</Button>\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode7 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function InteractiveTooltips() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Tooltip title=\"Add\" interactive>\r\n        <Button className={classes.button}>Interactive</Button>\r\n      </Tooltip>\r\n      <Tooltip title=\"Add\">\r\n        <Button className={classes.button}>Non Interactive</Button>\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode8 = `\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nexport default function DisabledTooltips() {\r\n  return (\r\n    <Tooltip title=\"You don't have permission to do this\">\r\n      <span>\r\n        <Button disabled>A Disabled Button</Button>\r\n      </span>\r\n    </Tooltip>\r\n  );\r\n}\r\n`;\r\nconst jsCode9 = `\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\nexport default function TransitionsTooltips() {\r\n  return (\r\n    <div>\r\n      <Tooltip title=\"Add\">\r\n        <Button>Grow</Button>\r\n      </Tooltip>\r\n      <Tooltip TransitionComponent={Fade} TransitionProps={{ timeout: 600 }} title=\"Add\">\r\n        <Button>Fade</Button>\r\n      </Tooltip>\r\n      <Tooltip TransitionComponent={Zoom} title=\"Add\">\r\n        <Button>Zoom</Button>\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode10 = `\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nexport default function DelayTooltips() {\r\n  return (\r\n    <Tooltip title=\"Add\" enterDelay={500} leaveDelay={200}>\r\n      <Button>[500ms, 200ms]</Button>\r\n    </Tooltip>\r\n  );\r\n}\r\n`;\r\n","/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n// Example 1\r\nconst useStyles1 = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 500\r\n  }\r\n});\r\n\r\n// Example 2\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    ...theme.typography.button,\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nexport default function TypographyExamplesPage() {\r\n  // Example 1\r\n  const classes1 = useStyles1();\r\n\r\n  // Example 2\r\n  const classes2 = useStyles2();\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          Use typography to present your design and content as clearly and\r\n          efficiently as possible.\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/typography/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Component\">\r\n            <div className={classes1.root}>\r\n              <Typography variant=\"h1\" component=\"h2\" gutterBottom>\r\n                h1. Heading\r\n              </Typography>\r\n              <Typography variant=\"h2\" gutterBottom>\r\n                h2. Heading\r\n              </Typography>\r\n              <Typography variant=\"h3\" gutterBottom>\r\n                h3. Heading\r\n              </Typography>\r\n              <Typography variant=\"h4\" gutterBottom>\r\n                h4. Heading\r\n              </Typography>\r\n              <Typography variant=\"h5\" gutterBottom>\r\n                h5. Heading\r\n              </Typography>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                h6. Heading\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                subtitle1. Lorem ipsum dolor sit amet, consectetur adipisicing\r\n                elit. Quos blanditiis tenetur\r\n              </Typography>\r\n              <Typography variant=\"subtitle2\" gutterBottom>\r\n                subtitle2. Lorem ipsum dolor sit amet, consectetur adipisicing\r\n                elit. Quos blanditiis tenetur\r\n              </Typography>\r\n              <Typography variant=\"body1\" gutterBottom>\r\n                body1. Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n                Quos blanditiis tenetur unde suscipit, quam beatae rerum\r\n                inventore consectetur, neque doloribus, cupiditate numquam\r\n                dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.\r\n              </Typography>\r\n              <Typography variant=\"body2\" gutterBottom>\r\n                body2. Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n                Quos blanditiis tenetur unde suscipit, quam beatae rerum\r\n                inventore consectetur, neque doloribus, cupiditate numquam\r\n                dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.\r\n              </Typography>\r\n              <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n                button text\r\n              </Typography>\r\n              <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                caption text\r\n              </Typography>\r\n              <Typography variant=\"overline\" display=\"block\" gutterBottom>\r\n                overline text\r\n              </Typography>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"Theme\">\r\n            <span>\r\n              In some situations you might not be able to use the{\" \"}\r\n              <code>Typography</code> component. Hopefully, you might be able to\r\n              take advantage of the <code>typography</code> keys of the theme.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes2.root}>\r\n              {\"This div's text looks like that of a button.\"}\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 500,\r\n  },\r\n});\r\n\r\nexport default function Types() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography variant=\"h1\" component=\"h2\" gutterBottom>\r\n        h1. Heading\r\n      </Typography>\r\n      <Typography variant=\"h2\" gutterBottom>\r\n        h2. Heading\r\n      </Typography>\r\n      <Typography variant=\"h3\" gutterBottom>\r\n        h3. Heading\r\n      </Typography>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        h4. Heading\r\n      </Typography>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        h5. Heading\r\n      </Typography>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        h6. Heading\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" gutterBottom>\r\n        subtitle1. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\r\n      </Typography>\r\n      <Typography variant=\"subtitle2\" gutterBottom>\r\n        subtitle2. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\r\n      </Typography>\r\n      <Typography variant=\"body1\" gutterBottom>\r\n        body1. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\r\n        unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam\r\n        dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.\r\n      </Typography>\r\n      <Typography variant=\"body2\" gutterBottom>\r\n        body2. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\r\n        unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam\r\n        dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.\r\n      </Typography>\r\n      <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n        button text\r\n      </Typography>\r\n      <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n        caption text\r\n      </Typography>\r\n      <Typography variant=\"overline\" display=\"block\" gutterBottom>\r\n        overline text\r\n      </Typography>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    ...theme.typography.button,\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function TypographyTheme() {\r\n  const classes = useStyles();\r\n\r\n  return <div className={classes.root}>{\"This div's text looks like that of a button.\"}</div>;\r\n}\r\n`;\r\n","import React from \"react\";\r\nimport { Redirect, Switch } from \"react-router-dom\";\r\nimport { ContentRoute } from \"../../../../_metronic/layout\";\r\nimport AvatarsExamplesPage from \"./AvatarsExamplesPage\";\r\nimport BadgesExamplesPage from \"./BadgesExamplesPage\";\r\nimport ChipsExamplesPage from \"./ChipsExamplesPage\";\r\nimport DividersExamplesPage from \"./DividersExamplesPage\";\r\nimport IconsExamplesPage from \"./IconsExamplesPage\";\r\nimport ListsExamplesPage from \"./ListsExamplesPage\";\r\nimport TablesExamplesPage from \"./TablesExamplesPage\";\r\nimport TooltipsExamplesPage from \"./TooltipsExamplesPage\";\r\nimport TypographyExamplesPage from \"./TypographyExamplesPage\";\r\n\r\nexport function DataDisplaysPage() {\r\n  return (\r\n    <Switch>\r\n      <Redirect\r\n        exact={true}\r\n        from=\"/google-material\"\r\n        to=\"/google-material/data-displays/avatars\"\r\n      />\r\n      <ContentRoute\r\n        path=\"/google-material/data-displays/avatars\"\r\n        component={AvatarsExamplesPage}\r\n      />\r\n      <ContentRoute\r\n        path=\"/google-material/data-displays/badges\"\r\n        component={BadgesExamplesPage}\r\n      />\r\n      <ContentRoute\r\n        path=\"/google-material/data-displays/chips\"\r\n        component={ChipsExamplesPage}\r\n      />\r\n      <ContentRoute\r\n        path=\"/google-material/data-displays/dividers\"\r\n        component={DividersExamplesPage}\r\n      />\r\n      <ContentRoute\r\n        path=\"/google-material/data-displays/icons\"\r\n        component={IconsExamplesPage}\r\n      />\r\n      <ContentRoute\r\n        path=\"/google-material/data-displays/lists\"\r\n        component={ListsExamplesPage}\r\n      />\r\n      <ContentRoute\r\n        path=\"/google-material/data-displays/tables\"\r\n        component={TablesExamplesPage}\r\n      />\r\n      <ContentRoute\r\n        path=\"/google-material/data-displays/tooltips\"\r\n        component={TooltipsExamplesPage}\r\n      />\r\n      <ContentRoute\r\n        path=\"/google-material/data-displays/typography\"\r\n        component={TypographyExamplesPage}\r\n      />\r\n    </Switch>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport {makeStyles, withStyles, lighten} from \"@material-ui/core/styles\";\r\nimport {\r\n  CircularProgress,\r\n  Fab,\r\n  Button,\r\n  LinearProgress,\r\n  Fade,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport {green} from \"@material-ui/core/colors\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n// Example 1\r\nconst useStyles1 = makeStyles(theme => ({\r\n  progress: {\r\n    margin: theme.spacing(2)\r\n  }\r\n}));\r\n\r\n// Example 2\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  },\r\n  wrapper: {\r\n    margin: theme.spacing(1),\r\n    position: \"relative\"\r\n  },\r\n  buttonSuccess: {\r\n    backgroundColor: green[500],\r\n    \"&:hover\": {\r\n      backgroundColor: green[700]\r\n    }\r\n  },\r\n  fabProgress: {\r\n    color: green[500],\r\n    position: \"absolute\",\r\n    top: -6,\r\n    left: -6,\r\n    zIndex: 1\r\n  },\r\n  buttonProgress: {\r\n    color: green[500],\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    marginTop: -12,\r\n    marginLeft: -12\r\n  }\r\n}));\r\n\r\n// Example 3\r\nconst useStyles3 = makeStyles(theme => ({\r\n  progress: {\r\n    margin: theme.spacing(2)\r\n  }\r\n}));\r\n\r\n// Example 4\r\nconst useStyles4 = makeStyles(theme => ({\r\n  progress: {\r\n    margin: theme.spacing(2)\r\n  }\r\n}));\r\n\r\n// Example 5\r\nconst useStyles5 = makeStyles({\r\n  root: {\r\n    flexGrow: 1\r\n  }\r\n});\r\n\r\n// Example 6\r\nconst useStyles6 = makeStyles({\r\n  root: {\r\n    flexGrow: 1\r\n  }\r\n});\r\n\r\n// Example 7\r\nconst useStyles7 = makeStyles({\r\n  root: {\r\n    flexGrow: 1\r\n  }\r\n});\r\n\r\n// Example 8\r\nconst useStyles8 = makeStyles({\r\n  root: {\r\n    flexGrow: 1\r\n  }\r\n});\r\n\r\n// Example 9\r\nconst ColorCircularProgress9 = withStyles({\r\n  root: {\r\n    color: \"#00695c\"\r\n  }\r\n})(CircularProgress);\r\n\r\nconst ColorLinearProgress9 = withStyles({\r\n  colorPrimary: {\r\n    backgroundColor: \"#b2dfdb\"\r\n  },\r\n  barColorPrimary: {\r\n    backgroundColor: \"#00695c\"\r\n  }\r\n})(LinearProgress);\r\n\r\nconst BorderLinearProgress9 = withStyles({\r\n  root: {\r\n    height: 10,\r\n    backgroundColor: lighten(\"#ff6c5c\", 0.5)\r\n  },\r\n  bar: {\r\n    borderRadius: 20,\r\n    backgroundColor: \"#ff6c5c\"\r\n  }\r\n})(LinearProgress);\r\n\r\n// Inspired by the Facebook spinners.\r\nconst useStylesFacebook9 = makeStyles({\r\n  root: {\r\n    position: \"relative\"\r\n  },\r\n  top: {\r\n    color: \"#eef3fd\"\r\n  },\r\n  bottom: {\r\n    color: \"#6798e5\",\r\n    animationDuration: \"550ms\",\r\n    position: \"absolute\",\r\n    left: 0\r\n  }\r\n});\r\n\r\nfunction FacebookProgress9(props) {\r\n  const classes = useStylesFacebook9();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress\r\n        variant=\"determinate\"\r\n        value={100}\r\n        className={classes.top}\r\n        size={24}\r\n        thickness={4}\r\n        {...props}\r\n      />\r\n      <CircularProgress\r\n        variant=\"indeterminate\"\r\n        disableShrink\r\n        className={classes.bottom}\r\n        size={24}\r\n        thickness={4}\r\n        {...props}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles9 = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\n// Example 10\r\nconst useStyles10 = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  button: {\r\n    margin: theme.spacing(2)\r\n  },\r\n  placeholder: {\r\n    height: 40\r\n  }\r\n}));\r\n\r\nexport default function ProgressExamplesPage() {\r\n  // Example 1\r\n  const classes1 = useStyles1();\r\n\r\n  // Example 2\r\n  const classes2 = useStyles2();\r\n  const [loading2, setLoading2] = React.useState(false);\r\n  const [success2, setSuccess2] = React.useState(false);\r\n  const timer2 = React.useRef();\r\n\r\n  const buttonClassname2 = clsx({\r\n    [classes2.buttonSuccess]: success2\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    return () => {\r\n      clearTimeout(timer2.current);\r\n    };\r\n  }, []);\r\n\r\n  function handleButtonClick2() {\r\n    if (!loading2) {\r\n      setSuccess2(false);\r\n      setLoading2(true);\r\n      timer2.current = setTimeout(() => {\r\n        setSuccess2(true);\r\n        setLoading2(false);\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  // Example 3\r\n  const classes3 = useStyles3();\r\n  const [progress3, setProgress3] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    function tick() {\r\n      // reset when reaching 100%\r\n      setProgress3(oldProgress => (oldProgress >= 100 ? 0 : oldProgress + 1));\r\n    }\r\n\r\n    const timer3 = setInterval(tick, 20);\r\n    return () => {\r\n      clearInterval(timer3);\r\n    };\r\n  }, []);\r\n\r\n  // Example 4\r\n  const classes4 = useStyles4();\r\n  const [completed4, setCompleted4] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    function progress() {\r\n      setCompleted4(prevCompleted =>\r\n        prevCompleted >= 100 ? 0 : prevCompleted + 10\r\n      );\r\n    }\r\n\r\n    const timer4 = setInterval(progress, 1000);\r\n    return () => {\r\n      clearInterval(timer4);\r\n    };\r\n  }, []);\r\n\r\n  // Example 5\r\n  const classes5 = useStyles5();\r\n\r\n  // Example 6\r\n  const classes6 = useStyles6();\r\n  const [completed6, setCompleted6] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    function progress() {\r\n      setCompleted6(oldCompleted => {\r\n        if (oldCompleted === 100) {\r\n          return 0;\r\n        }\r\n        const diff = Math.random() * 10;\r\n        return Math.min(oldCompleted + diff, 100);\r\n      });\r\n    }\r\n\r\n    const timer6 = setInterval(progress, 500);\r\n    return () => {\r\n      clearInterval(timer6);\r\n    };\r\n  }, []);\r\n\r\n  // Example 7\r\n  const classes7 = useStyles7();\r\n  const [completed7, setCompleted7] = React.useState(0);\r\n  const [buffer7, setBuffer7] = React.useState(10);\r\n\r\n  const progress = React.useRef(() => {});\r\n  React.useEffect(() => {\r\n    progress.current = () => {\r\n      if (completed7 > 100) {\r\n        setCompleted7(0);\r\n        setBuffer7(10);\r\n      } else {\r\n        const diff = Math.random() * 10;\r\n        const diff2 = Math.random() * 10;\r\n        setCompleted7(completed7 + diff);\r\n        setBuffer7(completed7 + diff + diff2);\r\n      }\r\n    };\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    function tick() {\r\n      progress.current();\r\n    }\r\n    const timer7 = setInterval(tick, 500);\r\n\r\n    return () => {\r\n      clearInterval(timer7);\r\n    };\r\n  }, []);\r\n\r\n  // Example 8\r\n  const classes8 = useStyles8();\r\n\r\n  // Example 9\r\n  const classes9 = useStyles9();\r\n\r\n  // Example 10\r\n  const classes10 = useStyles10();\r\n  const [loading10, setLoading10] = React.useState(false);\r\n  const [query10, setQuery10] = React.useState(\"idle\");\r\n  const timerRef10 = React.useRef();\r\n\r\n  React.useEffect(\r\n    () => () => {\r\n      clearTimeout(timerRef10.current);\r\n    },\r\n    []\r\n  );\r\n\r\n  function handleClickLoading10() {\r\n    setLoading10(prevLoading => !prevLoading);\r\n  }\r\n\r\n  function handleClickQuery10() {\r\n    clearTimeout(timerRef10.current);\r\n\r\n    if (query10 !== \"idle\") {\r\n      setQuery10(\"idle\");\r\n      return;\r\n    }\r\n\r\n    setQuery10(\"progress\");\r\n    timerRef10.current = setTimeout(() => {\r\n      setQuery10(\"success\");\r\n    }, 2000);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          Progress indicators commonly known as spinners, express an unspecified\r\n          wait time or display the length of a process. The animation works with\r\n          CSS, not JavaScript\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/progress/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <Notice className=\"notice-paragraph\">Circular</Notice>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode1}\r\n            beforeCodeTitle=\"Circular Indeterminate\"\r\n          >\r\n            <div>\r\n              <CircularProgress className={classes1.progress} />\r\n              <CircularProgress\r\n                className={classes1.progress}\r\n                color=\"secondary\"\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode3}\r\n            beforeCodeTitle=\"Circular Determinate\"\r\n          >\r\n            <div>\r\n              <CircularProgress\r\n                className={classes3.progress}\r\n                variant=\"determinate\"\r\n                value={progress3}\r\n              />\r\n              <CircularProgress\r\n                className={classes3.progress}\r\n                variant=\"determinate\"\r\n                value={progress3}\r\n                color=\"secondary\"\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode5}\r\n            beforeCodeTitle=\"Linear Indeterminate\"\r\n          >\r\n            <div className={classes5.root}>\r\n              <LinearProgress />\r\n              <br />\r\n              <LinearProgress color=\"secondary\" />\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode7} beforeCodeTitle=\"Linear Buffer\">\r\n            <div className={classes7.root}>\r\n              <LinearProgress\r\n                variant=\"buffer\"\r\n                value={completed7}\r\n                valueBuffer={buffer7}\r\n              />\r\n              <br />\r\n              <LinearProgress\r\n                color=\"secondary\"\r\n                variant=\"buffer\"\r\n                value={completed7}\r\n                valueBuffer={buffer7}\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode9}\r\n            beforeCodeTitle=\"Customized progress bars\"\r\n          >\r\n            <span>Here are some examples of customizing the component.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes9.root}>\r\n              <ColorCircularProgress9 size={30} thickness={5} />\r\n              <ColorLinearProgress9 className={classes9.margin} />\r\n              <BorderLinearProgress9\r\n                className={classes9.margin}\r\n                variant=\"determinate\"\r\n                color=\"secondary\"\r\n                value={50}\r\n              />\r\n              <FacebookProgress9 />\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode11} beforeCodeTitle=\"Limitations\">\r\n            <span className=\"pb-3\">\r\n              Under heavy load, you might lose the stroke dash animation or see\r\n              random CircularProgress ring widths. You should run processor\r\n              intensive operations in a web worker or by batch in order not to\r\n              block the main rendering thread.\r\n            </span>\r\n            <div>\r\n              When it's not possible, you can leverage the{\" \"}\r\n              <code>disableShrink</code> property to mitigate the issue.\r\n            </div>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n\r\n            <CircularProgress disableShrink />\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode2}\r\n            beforeCodeTitle=\"Interactive Integration\"\r\n          >\r\n            <div className={classes2.root}>\r\n              <div className={classes2.wrapper}>\r\n                <Fab\r\n                  aria-label=\"Save\"\r\n                  color=\"primary\"\r\n                  className={buttonClassname2}\r\n                  onClick={handleButtonClick2}\r\n                >\r\n                  {success2 ? <CheckIcon /> : <SaveIcon />}\r\n                </Fab>\r\n                {loading2 && (\r\n                  <CircularProgress\r\n                    size={68}\r\n                    className={classes2.fabProgress}\r\n                  />\r\n                )}\r\n              </div>\r\n              <div className={classes2.wrapper}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={buttonClassname2}\r\n                  disabled={loading2}\r\n                  onClick={handleButtonClick2}\r\n                >\r\n                  Accept terms\r\n                </Button>\r\n                {loading2 && (\r\n                  <CircularProgress\r\n                    size={24}\r\n                    className={classes2.buttonProgress}\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode4} beforeCodeTitle=\"Circular Static\">\r\n            <div>\r\n              <CircularProgress\r\n                className={classes4.progress}\r\n                variant=\"static\"\r\n                value={5}\r\n              />\r\n              <CircularProgress\r\n                className={classes4.progress}\r\n                variant=\"static\"\r\n                value={25}\r\n              />\r\n              <CircularProgress\r\n                className={classes4.progress}\r\n                variant=\"static\"\r\n                value={50}\r\n              />\r\n              <CircularProgress\r\n                className={classes4.progress}\r\n                variant=\"static\"\r\n                value={75}\r\n              />\r\n              <CircularProgress\r\n                className={classes4.progress}\r\n                variant=\"static\"\r\n                value={100}\r\n              />\r\n              <CircularProgress\r\n                className={classes4.progress}\r\n                variant=\"static\"\r\n                value={completed4}\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode6} beforeCodeTitle=\"Linear Determinate\">\r\n            <div className={classes6.root}>\r\n              <LinearProgress variant=\"determinate\" value={completed6} />\r\n              <br />\r\n              <LinearProgress\r\n                color=\"secondary\"\r\n                variant=\"determinate\"\r\n                value={completed6}\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode8} beforeCodeTitle=\"Linear Query\">\r\n            <div className={classes8.root}>\r\n              <LinearProgress variant=\"query\" />\r\n              <br />\r\n              <LinearProgress color=\"secondary\" variant=\"query\" />\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode10}\r\n            beforeCodeTitle=\"Delaying appearance\"\r\n          >\r\n            <span>\r\n              There are 3 important limits to know around response time. The\r\n              ripple effect of the <code>ButtonBase</code> component ensures\r\n              that the user feels that the system is reacting instantaneously.\r\n              Normally, no special feedback is necessary during delays of more\r\n              than 0.1 but less than 1.0 second. After 1.0 second, you can\r\n              display a loader to keep user's flow of thought uninterrupted.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes10.root}>\r\n              <div className={classes10.placeholder}>\r\n                <Fade\r\n                  in={loading10}\r\n                  style={{\r\n                    transitionDelay: loading10 ? \"800ms\" : \"0ms\"\r\n                  }}\r\n                  unmountOnExit\r\n                >\r\n                  <CircularProgress />\r\n                </Fade>\r\n              </div>\r\n              <Button\r\n                onClick={handleClickLoading10}\r\n                className={classes10.button}\r\n              >\r\n                {loading10 ? \"Stop loading\" : \"Loading\"}\r\n              </Button>\r\n              <div className={classes10.placeholder}>\r\n                {query10 === \"success\" ? (\r\n                  <Typography>Success!</Typography>\r\n                ) : (\r\n                  <Fade\r\n                    in={query10 === \"progress\"}\r\n                    style={{\r\n                      transitionDelay: query10 === \"progress\" ? \"800ms\" : \"0ms\"\r\n                    }}\r\n                    unmountOnExit\r\n                  >\r\n                    <CircularProgress />\r\n                  </Fade>\r\n                )}\r\n              </div>\r\n              <Button onClick={handleClickQuery10} className={classes10.button}>\r\n                {query10 !== \"idle\" ? \"Reset\" : \"Simulate a load\"}\r\n              </Button>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  progress: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function CircularIndeterminate() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <CircularProgress className={classes.progress} />\r\n      <CircularProgress className={classes.progress} color=\"secondary\" />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { green } from '@material-ui/core/colors';\r\nimport Button from '@material-ui/core/Button';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  wrapper: {\r\n    margin: theme.spacing(1),\r\n    position: 'relative',\r\n  },\r\n  buttonSuccess: {\r\n    backgroundColor: green[500],\r\n    '&:hover': {\r\n      backgroundColor: green[700],\r\n    },\r\n  },\r\n  fabProgress: {\r\n    color: green[500],\r\n    position: 'absolute',\r\n    top: -6,\r\n    left: -6,\r\n    zIndex: 1,\r\n  },\r\n  buttonProgress: {\r\n    color: green[500],\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n  },\r\n}));\r\n\r\nexport default function CircularIntegration() {\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [success, setSuccess] = React.useState(false);\r\n  const timer = React.useRef();\r\n\r\n  const buttonClassname = clsx({\r\n    [classes.buttonSuccess]: success,\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    return () => {\r\n      clearTimeout(timer.current);\r\n    };\r\n  }, []);\r\n\r\n  function handleButtonClick() {\r\n    if (!loading) {\r\n      setSuccess(false);\r\n      setLoading(true);\r\n      timer.current = setTimeout(() => {\r\n        setSuccess(true);\r\n        setLoading(false);\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.wrapper}>\r\n        <Fab\r\n          aria-label=\"Save\"\r\n          color=\"primary\"\r\n          className={buttonClassname}\r\n          onClick={handleButtonClick}\r\n        >\r\n          {success ? <CheckIcon /> : <SaveIcon />}\r\n        </Fab>\r\n        {loading && <CircularProgress size={68} className={classes.fabProgress} />}\r\n      </div>\r\n      <div className={classes.wrapper}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={buttonClassname}\r\n          disabled={loading}\r\n          onClick={handleButtonClick}\r\n        >\r\n          Accept terms\r\n        </Button>\r\n        {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  progress: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function CircularDeterminate() {\r\n  const classes = useStyles();\r\n  const [progress, setProgress] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    function tick() {\r\n      // reset when reaching 100%\r\n      setProgress(oldProgress => (oldProgress >= 100 ? 0 : oldProgress + 1));\r\n    }\r\n\r\n    const timer = setInterval(tick, 20);\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <CircularProgress className={classes.progress} variant=\"determinate\" value={progress} />\r\n      <CircularProgress\r\n        className={classes.progress}\r\n        variant=\"determinate\"\r\n        value={progress}\r\n        color=\"secondary\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode4 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  progress: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function CircularStatic() {\r\n  const classes = useStyles();\r\n  const [completed, setCompleted] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    function progress() {\r\n      setCompleted(prevCompleted => (prevCompleted >= 100 ? 0 : prevCompleted + 10));\r\n    }\r\n\r\n    const timer = setInterval(progress, 1000);\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <CircularProgress className={classes.progress} variant=\"static\" value={5} />\r\n      <CircularProgress className={classes.progress} variant=\"static\" value={25} />\r\n      <CircularProgress className={classes.progress} variant=\"static\" value={50} />\r\n      <CircularProgress className={classes.progress} variant=\"static\" value={75} />\r\n      <CircularProgress className={classes.progress} variant=\"static\" value={100} />\r\n      <CircularProgress className={classes.progress} variant=\"static\" value={completed} />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode5 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nexport default function LinearIndeterminate() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <LinearProgress />\r\n      <br />\r\n      <LinearProgress color=\"secondary\" />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode6 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nexport default function LinearDeterminate() {\r\n  const classes = useStyles();\r\n  const [completed, setCompleted] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    function progress() {\r\n      setCompleted(oldCompleted => {\r\n        if (oldCompleted === 100) {\r\n          return 0;\r\n        }\r\n        const diff = Math.random() * 10;\r\n        return Math.min(oldCompleted + diff, 100);\r\n      });\r\n    }\r\n\r\n    const timer = setInterval(progress, 500);\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <LinearProgress variant=\"determinate\" value={completed} />\r\n      <br />\r\n      <LinearProgress color=\"secondary\" variant=\"determinate\" value={completed} />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode7 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nexport default function LinearBuffer() {\r\n  const classes = useStyles();\r\n  const [completed, setCompleted] = React.useState(0);\r\n  const [buffer, setBuffer] = React.useState(10);\r\n\r\n  const progress = React.useRef(() => {});\r\n  React.useEffect(() => {\r\n    progress.current = () => {\r\n      if (completed > 100) {\r\n        setCompleted(0);\r\n        setBuffer(10);\r\n      } else {\r\n        const diff = Math.random() * 10;\r\n        const diff2 = Math.random() * 10;\r\n        setCompleted(completed + diff);\r\n        setBuffer(completed + diff + diff2);\r\n      }\r\n    };\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    function tick() {\r\n      progress.current();\r\n    }\r\n    const timer = setInterval(tick, 500);\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <LinearProgress variant=\"buffer\" value={completed} valueBuffer={buffer} />\r\n      <br />\r\n      <LinearProgress color=\"secondary\" variant=\"buffer\" value={completed} valueBuffer={buffer} />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode8 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nexport default function LinearQuery() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <LinearProgress variant=\"query\" />\r\n      <br />\r\n      <LinearProgress color=\"secondary\" variant=\"query\" />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode9 = `\r\nimport React from 'react';\r\nimport { lighten, makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst ColorCircularProgress = withStyles({\r\n  root: {\r\n    color: '#00695c',\r\n  },\r\n})(CircularProgress);\r\n\r\nconst ColorLinearProgress = withStyles({\r\n  colorPrimary: {\r\n    backgroundColor: '#b2dfdb',\r\n  },\r\n  barColorPrimary: {\r\n    backgroundColor: '#00695c',\r\n  },\r\n})(LinearProgress);\r\n\r\nconst BorderLinearProgress = withStyles({\r\n  root: {\r\n    height: 10,\r\n    backgroundColor: lighten('#ff6c5c', 0.5),\r\n  },\r\n  bar: {\r\n    borderRadius: 20,\r\n    backgroundColor: '#ff6c5c',\r\n  },\r\n})(LinearProgress);\r\n\r\n// Inspired by the Facebook spinners.\r\nconst useStylesFacebook = makeStyles({\r\n  root: {\r\n    position: 'relative',\r\n  },\r\n  top: {\r\n    color: '#eef3fd',\r\n  },\r\n  bottom: {\r\n    color: '#6798e5',\r\n    animationDuration: '550ms',\r\n    position: 'absolute',\r\n    left: 0,\r\n  },\r\n});\r\n\r\nfunction FacebookProgress(props) {\r\n  const classes = useStylesFacebook();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress\r\n        variant=\"determinate\"\r\n        value={100}\r\n        className={classes.top}\r\n        size={24}\r\n        thickness={4}\r\n        {...props}\r\n      />\r\n      <CircularProgress\r\n        variant=\"indeterminate\"\r\n        disableShrink\r\n        className={classes.bottom}\r\n        size={24}\r\n        thickness={4}\r\n        {...props}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function CustomizedProgressBars() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ColorCircularProgress size={30} thickness={5} />\r\n      <ColorLinearProgress className={classes.margin} />\r\n      <BorderLinearProgress\r\n        className={classes.margin}\r\n        variant=\"determinate\"\r\n        color=\"secondary\"\r\n        value={50}\r\n      />\r\n      <FacebookProgress />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode10 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  button: {\r\n    margin: theme.spacing(2),\r\n  },\r\n  placeholder: {\r\n    height: 40,\r\n  },\r\n}));\r\n\r\nexport default function DelayingAppearance() {\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [query, setQuery] = React.useState('idle');\r\n  const timerRef = React.useRef();\r\n\r\n  React.useEffect(\r\n    () => () => {\r\n      clearTimeout(timerRef.current);\r\n    },\r\n    [],\r\n  );\r\n\r\n  function handleClickLoading() {\r\n    setLoading(prevLoading => !prevLoading);\r\n  }\r\n\r\n  function handleClickQuery() {\r\n    clearTimeout(timerRef.current);\r\n\r\n    if (query !== 'idle') {\r\n      setQuery('idle');\r\n      return;\r\n    }\r\n\r\n    setQuery('progress');\r\n    timerRef.current = setTimeout(() => {\r\n      setQuery('success');\r\n    }, 2000);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.placeholder}>\r\n        <Fade\r\n          in={loading}\r\n          style={{\r\n            transitionDelay: loading ? '800ms' : '0ms',\r\n          }}\r\n          unmountOnExit\r\n        >\r\n          <CircularProgress />\r\n        </Fade>\r\n      </div>\r\n      <Button onClick={handleClickLoading} className={classes.button}>\r\n        {loading ? 'Stop loading' : 'Loading'}\r\n      </Button>\r\n      <div className={classes.placeholder}>\r\n        {query === 'success' ? (\r\n          <Typography>Success!</Typography>\r\n        ) : (\r\n          <Fade\r\n            in={query === 'progress'}\r\n            style={{\r\n              transitionDelay: query === 'progress' ? '800ms' : '0ms',\r\n            }}\r\n            unmountOnExit\r\n          >\r\n            <CircularProgress />\r\n          </Fade>\r\n        )}\r\n      </div>\r\n      <Button onClick={handleClickQuery} className={classes.button}>\r\n        {query !== 'idle' ? 'Reset' : 'Simulate a load'}\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode11 = `\r\nimport React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nexport default function CircularUnderLoad() {\r\n  return <CircularProgress disableShrink />;\r\n}\r\n`;\r\n","/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Draggable from \"react-draggable\";\r\nimport {makeStyles, withStyles, useTheme} from \"@material-ui/core/styles\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  ListItemText,\r\n  Typography,\r\n  Button,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  Slide,\r\n  TextField,\r\n  IconButton,\r\n  AppBar,\r\n  Toolbar,\r\n  Divider,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  FormControlLabel,\r\n  Switch,\r\n  useMediaQuery,\r\n  RadioGroup,\r\n  Radio,\r\n  Paper\r\n} from \"@material-ui/core\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n// Example 1\r\nconst emails = [\"username@gmail.com\", \"user02@gmail.com\"];\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    backgroundColor: blue[100],\r\n    color: blue[600]\r\n  }\r\n});\r\n\r\nfunction SimpleDialog(props) {\r\n  const classes = useStyles();\r\n  const { onClose, selectedValue, ...other } = props;\r\n\r\n  function handleClose() {\r\n    onClose(selectedValue);\r\n  }\r\n\r\n  function handleListItemClick(value) {\r\n    onClose(value);\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      onClose={handleClose}\r\n      aria-labelledby=\"simple-dialog-title\"\r\n      {...other}\r\n    >\r\n      <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\r\n      <List>\r\n        {emails.map(email => (\r\n          <ListItem\r\n            button\r\n            onClick={() => handleListItemClick(email)}\r\n            key={email}\r\n          >\r\n            <ListItemAvatar>\r\n              <Avatar className={classes.avatar}>\r\n                <PersonIcon />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText primary={email} />\r\n          </ListItem>\r\n        ))}\r\n\r\n        <ListItem button onClick={() => handleListItemClick(\"addAccount\")}>\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n              <AddIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"add account\" />\r\n        </ListItem>\r\n      </List>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nSimpleDialog.propTypes = {\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool,\r\n  selectedValue: PropTypes.string\r\n};\r\n\r\n// Example 3\r\nconst Transition3 = React.forwardRef(function Transition5(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n// Example 5\r\nconst styles5 = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2)\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500]\r\n  }\r\n});\r\n\r\nconst DialogTitle5 = withStyles(styles5)(props => {\r\n  const { children, classes, onClose } = props;\r\n  return (\r\n    <DialogTitle disableTypography className={classes.root}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"Close\"\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </DialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent5 = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2)\r\n  }\r\n}))(DialogContent);\r\n\r\nconst DialogActions5 = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1)\r\n  }\r\n}))(DialogActions);\r\n\r\n// Example 6\r\nconst useStyles6 = makeStyles(theme => ({\r\n  appBar: {\r\n    position: \"relative\"\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1\r\n  }\r\n}));\r\n\r\nconst Transition6 = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n// Example 7\r\nconst useStyles7 = makeStyles(theme => ({\r\n  form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    margin: \"auto\",\r\n    width: \"fit-content\"\r\n  },\r\n  formControl: {\r\n    marginTop: theme.spacing(2),\r\n    minWidth: 120\r\n  },\r\n  formControlLabel: {\r\n    marginTop: theme.spacing(1)\r\n  }\r\n}));\r\n\r\n// Example 9\r\nconst options9 = [\r\n  \"None\",\r\n  \"Atria\",\r\n  \"Callisto\",\r\n  \"Dione\",\r\n  \"Ganymede\",\r\n  \"Hangouts Call\",\r\n  \"Luna\",\r\n  \"Oberon\",\r\n  \"Phobos\",\r\n  \"Pyxis\",\r\n  \"Sedna\",\r\n  \"Titania\",\r\n  \"Triton\",\r\n  \"Umbriel\"\r\n];\r\n\r\nfunction ConfirmationDialogRaw9(props) {\r\n  const { onClose, value: valueProp, open, ...other } = props;\r\n  const [value, setValue] = React.useState(valueProp);\r\n  const radioGroupRef = React.useRef(null);\r\n\r\n  React.useEffect(() => {\r\n    if (!open) {\r\n      setValue(valueProp);\r\n    }\r\n  }, [valueProp, open]);\r\n\r\n  function handleEntering() {\r\n    if (radioGroupRef.current != null) {\r\n      radioGroupRef.current.focus();\r\n    }\r\n  }\r\n\r\n  function handleCancel() {\r\n    onClose();\r\n  }\r\n\r\n  function handleOk() {\r\n    onClose(value);\r\n  }\r\n\r\n  function handleChange(event, newValue) {\r\n    setValue(newValue);\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      maxWidth=\"xs\"\r\n      onEntering={handleEntering}\r\n      aria-labelledby=\"confirmation-dialog-title\"\r\n      open={open}\r\n      {...other}\r\n    >\r\n      <DialogTitle id=\"confirmation-dialog-title\">Phone Ringtone</DialogTitle>\r\n      <DialogContent dividers>\r\n        <RadioGroup\r\n          ref={radioGroupRef}\r\n          aria-label=\"Ringtone\"\r\n          name=\"ringtone\"\r\n          value={value}\r\n          onChange={handleChange}\r\n        >\r\n          {options9.map(option => (\r\n            <FormControlLabel\r\n              value={option}\r\n              key={option}\r\n              control={<Radio />}\r\n              label={option}\r\n            />\r\n          ))}\r\n        </RadioGroup>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleOk} color=\"primary\">\r\n          Ok\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nConfirmationDialogRaw9.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  value: PropTypes.string.isRequired\r\n};\r\n\r\nconst useStyles9 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  paper: {\r\n    width: \"80%\",\r\n    maxHeight: 435\r\n  }\r\n}));\r\n\r\n// Example 11\r\nfunction PaperComponent11(props) {\r\n  return (\r\n    <Draggable cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function DialogsExamplesPage() {\r\n  // Example 1\r\n  const [open, setOpen] = React.useState(false);\r\n  const [selectedValue, setSelectedValue] = React.useState(emails[1]);\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleClose = value => {\r\n    setOpen(false);\r\n    setSelectedValue(value);\r\n  };\r\n\r\n  // Example 2\r\n  const [open2, setOpen2] = React.useState(false);\r\n\r\n  function handleClickOpen2() {\r\n    setOpen2(true);\r\n  }\r\n\r\n  function handleClose2() {\r\n    setOpen2(false);\r\n  }\r\n\r\n  // Example 3\r\n  const [open3, setOpen3] = React.useState(false);\r\n\r\n  function handleClickOpen3() {\r\n    setOpen3(true);\r\n  }\r\n\r\n  function handleClose3() {\r\n    setOpen3(false);\r\n  }\r\n\r\n  // Example 4\r\n  const [open4, setOpen4] = React.useState(false);\r\n\r\n  function handleClickOpen4() {\r\n    setOpen4(true);\r\n  }\r\n\r\n  function handleClose4() {\r\n    setOpen4(false);\r\n  }\r\n\r\n  // Example 5\r\n  const [open5, setOpen5] = React.useState(false);\r\n\r\n  function handleClickOpen5() {\r\n    setOpen5(true);\r\n  }\r\n\r\n  function handleClose5() {\r\n    setOpen5(false);\r\n  }\r\n\r\n  // Example 6\r\n  const classes6 = useStyles6();\r\n  const [open6, setOpen6] = React.useState(false);\r\n\r\n  function handleClickOpen6() {\r\n    setOpen6(true);\r\n  }\r\n\r\n  function handleClose6() {\r\n    setOpen6(false);\r\n  }\r\n\r\n  // Example 7\r\n  const classes7 = useStyles7();\r\n  const [open7, setOpen7] = React.useState(false);\r\n  const [fullWidth7, setFullWidth7] = React.useState(true);\r\n  const [maxWidth7, setMaxWidth7] = React.useState(\"sm\");\r\n\r\n  function handleClickOpen7() {\r\n    setOpen7(true);\r\n  }\r\n\r\n  function handleClose7() {\r\n    setOpen7(false);\r\n  }\r\n\r\n  function handleMaxWidthChange7(event) {\r\n    setMaxWidth7(event.target.value);\r\n  }\r\n\r\n  function handleFullWidthChange7(event) {\r\n    setFullWidth7(event.target.checked);\r\n  }\r\n\r\n  // Example 8\r\n  const [open8, setOpen8] = React.useState(false);\r\n  const theme8 = useTheme();\r\n  const fullScreen8 = useMediaQuery(theme8.breakpoints.down(\"sm\"));\r\n\r\n  function handleClickOpen8() {\r\n    setOpen8(true);\r\n  }\r\n\r\n  function handleClose8() {\r\n    setOpen8(false);\r\n  }\r\n\r\n  // Example 9\r\n  const classes9 = useStyles9();\r\n  const [open9, setOpen9] = React.useState(false);\r\n  const [value9, setValue9] = React.useState(\"Dione\");\r\n\r\n  function handleClickListItem9() {\r\n    setOpen9(true);\r\n  }\r\n\r\n  function handleClose9(newValue) {\r\n    setOpen9(false);\r\n\r\n    if (newValue) {\r\n      setValue9(newValue);\r\n    }\r\n  }\r\n\r\n  // Example 10\r\n  const [open10, setOpen10] = React.useState(false);\r\n  const [scroll10, setScroll10] = React.useState(\"paper\");\r\n\r\n  const handleClickOpen10 = scrollType => () => {\r\n    setOpen10(true);\r\n    setScroll10(scrollType);\r\n  };\r\n\r\n  function handleClose10() {\r\n    setOpen10(false);\r\n  }\r\n\r\n  // Example 11\r\n  const [open11, setOpen11] = React.useState(false);\r\n\r\n  const handleClickOpen11 = () => {\r\n    setOpen11(true);\r\n  };\r\n\r\n  const handleClose11 = () => {\r\n    setOpen11(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          Dialogs inform users about a task and can contain critical\r\n          information, require decisions, or involve multiple tasks\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/dialogs/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode1}\r\n            beforeCodeTitle=\"Simple Dialogs\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              Simple dialogs can provide additional details or actions about a\r\n              list item. For example, they can display avatars, icons,\r\n              clarifying subtext, or orthogonal actions (such as adding an\r\n              account).\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <Typography variant=\"subtitle1\">\r\n                Selected: {selectedValue}\r\n              </Typography>\r\n              <br />\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen}\r\n              >\r\n                Open simple dialog\r\n              </Button>\r\n              <SimpleDialog\r\n                selectedValue={selectedValue}\r\n                open={open}\r\n                onClose={handleClose}\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode3}\r\n            beforeCodeTitle=\"Transitions\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              You can also swap out the transition, the next example uses{\" \"}\r\n              <code>Slide</code>.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen3}\r\n              >\r\n                Slide in alert dialog\r\n              </Button>\r\n              <Dialog\r\n                open={open3}\r\n                TransitionComponent={Transition3}\r\n                keepMounted\r\n                onClose={handleClose3}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n              >\r\n                <DialogTitle id=\"alert-dialog-slide-title\">\r\n                  {\"Use Google's location service?\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                  <DialogContentText id=\"alert-dialog-slide-description\">\r\n                    Let Google help apps determine location. This means sending\r\n                    anonymous location data to Google, even when no apps are\r\n                    running.\r\n                  </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button onClick={handleClose3} color=\"primary\">\r\n                    Disagree\r\n                  </Button>\r\n                  <Button onClick={handleClose3} color=\"primary\">\r\n                    Agree\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode5}\r\n            beforeCodeTitle=\"Customized dialogs\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>Here is an example of customizing the component.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                onClick={handleClickOpen5}\r\n              >\r\n                Open dialog\r\n              </Button>\r\n              <Dialog\r\n                onClose={handleClose5}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={open5}\r\n              >\r\n                <DialogTitle5\r\n                  id=\"customized-dialog-title\"\r\n                  onClose={handleClose5}\r\n                >\r\n                  Modal title\r\n                </DialogTitle5>\r\n                <DialogContent5 dividers>\r\n                  <Typography gutterBottom>\r\n                    Cras mattis consectetur purus sit amet fermentum. Cras justo\r\n                    odio, dapibus ac facilisis in, egestas eget quam. Morbi leo\r\n                    risus, porta ac consectetur ac, vestibulum at eros.\r\n                  </Typography>\r\n                  <Typography gutterBottom>\r\n                    Praesent commodo cursus magna, vel scelerisque nisl\r\n                    consectetur et. Vivamus sagittis lacus vel augue laoreet\r\n                    rutrum faucibus dolor auctor.\r\n                  </Typography>\r\n                  <Typography gutterBottom>\r\n                    Aenean lacinia bibendum nulla sed consectetur. Praesent\r\n                    commodo cursus magna, vel scelerisque nisl consectetur et.\r\n                    Donec sed odio dui. Donec ullamcorper nulla non metus auctor\r\n                    fringilla.\r\n                  </Typography>\r\n                </DialogContent5>\r\n                <DialogActions5>\r\n                  <Button onClick={handleClose5} color=\"primary\">\r\n                    Save changes\r\n                  </Button>\r\n                </DialogActions5>\r\n              </Dialog>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode7}\r\n            beforeCodeTitle=\"Optional sizes\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              You can set a dialog maximum width by using the{\" \"}\r\n              <code>maxWidth</code> enumerable in combination with the{\" \"}\r\n              <code>fullWidth</code> boolean. When the <code>fullWidth</code>{\" \"}\r\n              property is true, the dialog will adapt based on the{\" \"}\r\n              <code>maxWidth</code> value.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <React.Fragment>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen7}\r\n              >\r\n                Open max-width dialog\r\n              </Button>\r\n              <Dialog\r\n                fullWidth={fullWidth7}\r\n                maxWidth={maxWidth7}\r\n                open={open7}\r\n                onClose={handleClose7}\r\n                aria-labelledby=\"max-width-dialog-title\"\r\n              >\r\n                <DialogTitle id=\"max-width-dialog-title\">\r\n                  Optional sizes\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                  <DialogContentText>\r\n                    You can set my maximum width and whether to adapt or not.\r\n                  </DialogContentText>\r\n                  <form className={classes7.form} noValidate>\r\n                    <FormControl className={classes7.formControl}>\r\n                      <InputLabel htmlFor=\"max-width\">maxWidth</InputLabel>\r\n                      <Select\r\n                        value={maxWidth7}\r\n                        onChange={handleMaxWidthChange7}\r\n                        inputProps={{\r\n                          name: \"max-width\",\r\n                          id: \"max-width\"\r\n                        }}\r\n                      >\r\n                        <MenuItem value={false}>false</MenuItem>\r\n                        <MenuItem value=\"xs\">xs</MenuItem>\r\n                        <MenuItem value=\"sm\">sm</MenuItem>\r\n                        <MenuItem value=\"md\">md</MenuItem>\r\n                        <MenuItem value=\"lg\">lg</MenuItem>\r\n                        <MenuItem value=\"xl\">xl</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                    <FormControlLabel\r\n                      className={classes7.formControlLabel}\r\n                      control={\r\n                        <Switch\r\n                          checked={fullWidth7}\r\n                          onChange={handleFullWidthChange7}\r\n                          value=\"fullWidth\"\r\n                        />\r\n                      }\r\n                      label=\"Full width\"\r\n                    />\r\n                  </form>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button onClick={handleClose7} color=\"primary\">\r\n                    Close\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n            </React.Fragment>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode9}\r\n            beforeCodeTitle=\"Confirmation dialogs\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              Confirmation dialogs require users to explicitly confirm their\r\n              choice before an option is committed. For example, users can\r\n              listen to multiple ringtones but only make a final selection upon\r\n              touching “OK”.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes9.root}>\r\n              <List component=\"div\" role=\"list\">\r\n                <ListItem button divider disabled role=\"listitem\">\r\n                  <ListItemText primary=\"Interruptions\" />\r\n                </ListItem>\r\n                <ListItem\r\n                  button\r\n                  divider\r\n                  aria-haspopup=\"true\"\r\n                  aria-controls=\"ringtone-menu\"\r\n                  aria-label=\"Phone ringtone\"\r\n                  onClick={handleClickListItem9}\r\n                  role=\"listitem\"\r\n                >\r\n                  <ListItemText primary=\"Phone ringtone\" secondary={value9} />\r\n                </ListItem>\r\n                <ListItem button divider disabled role=\"listitem\">\r\n                  <ListItemText\r\n                    primary=\"Default notification ringtone\"\r\n                    secondary=\"Tethys\"\r\n                  />\r\n                </ListItem>\r\n                <ConfirmationDialogRaw9\r\n                  classes={{\r\n                    paper: classes9.paper\r\n                  }}\r\n                  id=\"ringtone-menu\"\r\n                  keepMounted\r\n                  open={open9}\r\n                  onClose={handleClose9}\r\n                  value={value9}\r\n                />\r\n              </List>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode2}\r\n            beforeCodeTitle=\"Alerts\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              Alerts are urgent interruptions, requiring acknowledgement, that\r\n              inform the user about a situation.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen2}\r\n              >\r\n                Open alert dialog\r\n              </Button>\r\n              <Dialog\r\n                open={open2}\r\n                onClose={handleClose2}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n              >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                  {\"Use Google's location service?\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                  <DialogContentText id=\"alert-dialog-description\">\r\n                    Let Google help apps determine location. This means sending\r\n                    anonymous location data to Google, even when no apps are\r\n                    running.\r\n                  </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button onClick={handleClose2} color=\"primary\">\r\n                    Disagree\r\n                  </Button>\r\n                  <Button onClick={handleClose2} color=\"primary\" autoFocus>\r\n                    Agree\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode4}\r\n            beforeCodeTitle=\"Form dialogs\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              Form dialogs allow users to fill out form fields within a dialog.\r\n              For example, if your site prompts for potential subscribers to\r\n              fill in their email address, they can fill out the email field and\r\n              touch 'Submit'.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen4}\r\n              >\r\n                Open form dialog\r\n              </Button>\r\n              <Dialog\r\n                open={open4}\r\n                onClose={handleClose4}\r\n                aria-labelledby=\"form-dialog-title\"\r\n              >\r\n                <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n                <DialogContent>\r\n                  <DialogContentText>\r\n                    To subscribe to this website, please enter your email\r\n                    address here. We will send updates occasionally.\r\n                  </DialogContentText>\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Email Address\"\r\n                    type=\"email\"\r\n                    fullWidth\r\n                  />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button onClick={handleClose4} color=\"primary\">\r\n                    Cancel\r\n                  </Button>\r\n                  <Button onClick={handleClose4} color=\"primary\">\r\n                    Subscribe\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode6}\r\n            beforeCodeTitle=\"Full-screen dialogs\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <div>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen6}\r\n              >\r\n                Open full-screen dialog\r\n              </Button>\r\n              <Dialog\r\n                fullScreen\r\n                open={open6}\r\n                onClose={handleClose6}\r\n                TransitionComponent={Transition6}\r\n              >\r\n                <AppBar className={classes6.appBar}>\r\n                  <Toolbar>\r\n                    <IconButton\r\n                      edge=\"start\"\r\n                      color=\"inherit\"\r\n                      onClick={handleClose6}\r\n                      aria-label=\"Close\"\r\n                    >\r\n                      <CloseIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes6.title}>\r\n                      Sound\r\n                    </Typography>\r\n                    <Button color=\"inherit\" onClick={handleClose6}>\r\n                      save\r\n                    </Button>\r\n                  </Toolbar>\r\n                </AppBar>\r\n                <List>\r\n                  <ListItem button>\r\n                    <ListItemText\r\n                      primary=\"Phone ringtone\"\r\n                      secondary=\"Titania\"\r\n                    />\r\n                  </ListItem>\r\n                  <Divider />\r\n                  <ListItem button>\r\n                    <ListItemText\r\n                      primary=\"Default notification ringtone\"\r\n                      secondary=\"Tethys\"\r\n                    />\r\n                  </ListItem>\r\n                </List>\r\n              </Dialog>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode8}\r\n            beforeCodeTitle=\"Responsive full-screen\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              You may make a dialog responsively full screen using{\" \"}\r\n              <code>useMediaQuery</code>.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen8}\r\n              >\r\n                Open responsive dialog\r\n              </Button>\r\n              <Dialog\r\n                fullScreen={fullScreen8}\r\n                open={open8}\r\n                onClose={handleClose8}\r\n                aria-labelledby=\"responsive-dialog-title\"\r\n              >\r\n                <DialogTitle id=\"responsive-dialog-title\">\r\n                  {\"Use Google's location service?\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                  <DialogContentText>\r\n                    Let Google help apps determine location. This means sending\r\n                    anonymous location data to Google, even when no apps are\r\n                    running.\r\n                  </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button onClick={handleClose8} color=\"primary\">\r\n                    Disagree\r\n                  </Button>\r\n                  <Button onClick={handleClose8} color=\"primary\" autoFocus>\r\n                    Agree\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode10}\r\n            beforeCodeTitle=\"Scrolling long content\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              When dialogs become too long for the user’s viewport or device,\r\n              they scroll.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <Button onClick={handleClickOpen10(\"paper\")}>scroll=paper</Button>\r\n              <Button onClick={handleClickOpen10(\"body\")}>scroll=body</Button>\r\n              <Dialog\r\n                open={open10}\r\n                onClose={handleClose10}\r\n                scroll={scroll10}\r\n                aria-labelledby=\"scroll-dialog-title\"\r\n              >\r\n                <DialogTitle id=\"scroll-dialog-title\">Subscribe</DialogTitle>\r\n                <DialogContent dividers={scroll10 === \"paper\"}>\r\n                  <DialogContentText>\r\n                    {[...new Array(50)]\r\n                      .map(\r\n                        () => `Cras mattis consectetur purus sit amet fermentum.\r\n              Cras justo odio, dapibus ac facilisis in, egestas eget quam.\r\n              Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\r\n              Praesent commodo cursus magna, vel scelerisque nisl consectetur et.`\r\n                      )\r\n                      .join(\"\\n\")}\r\n                  </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button onClick={handleClose10} color=\"primary\">\r\n                    Cancel\r\n                  </Button>\r\n                  <Button onClick={handleClose10} color=\"primary\">\r\n                    Subscribe\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode11}\r\n            beforeCodeTitle=\"Draggable dialog\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <div>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen11}\r\n              >\r\n                Open form dialog\r\n              </Button>\r\n              <Dialog\r\n                open={open11}\r\n                onClose={handleClose11}\r\n                PaperComponent={PaperComponent11}\r\n                aria-labelledby=\"draggable-dialog-title\"\r\n              >\r\n                <DialogTitle\r\n                  style={{ cursor: \"move\" }}\r\n                  id=\"draggable-dialog-title\"\r\n                >\r\n                  Subscribe\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                  <DialogContentText>\r\n                    To subscribe to this website, please enter your email\r\n                    address here. We will send updates occasionally.\r\n                  </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button onClick={handleClose11} color=\"primary\">\r\n                    Cancel\r\n                  </Button>\r\n                  <Button onClick={handleClose11} color=\"primary\">\r\n                    Subscribe\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { blue } from '@material-ui/core/colors';\r\n\r\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    backgroundColor: blue[100],\r\n    color: blue[600],\r\n  },\r\n});\r\n\r\nfunction SimpleDialog(props) {\r\n  const classes = useStyles();\r\n  const { onClose, selectedValue, ...other } = props;\r\n\r\n  function handleClose() {\r\n    onClose(selectedValue);\r\n  }\r\n\r\n  function handleListItemClick(value) {\r\n    onClose(value);\r\n  }\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" {...other}>\r\n      <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\r\n      <List>\r\n        {emails.map(email => (\r\n          <ListItem button onClick={() => handleListItemClick(email)} key={email}>\r\n            <ListItemAvatar>\r\n              <Avatar className={classes.avatar}>\r\n                <PersonIcon />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText primary={email} />\r\n          </ListItem>\r\n        ))}\r\n\r\n        <ListItem button onClick={() => handleListItemClick('addAccount')}>\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n              <AddIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"add account\" />\r\n        </ListItem>\r\n      </List>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nSimpleDialog.propTypes = {\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool,\r\n  selectedValue: PropTypes.string,\r\n};\r\n\r\nexport default function SimpleDialogDemo() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [selectedValue, setSelectedValue] = React.useState(emails[1]);\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleClose = value => {\r\n    setOpen(false);\r\n    setSelectedValue(value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"subtitle1\">Selected: {selectedValue}</Typography>\r\n      <br />\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open simple dialog\r\n      </Button>\r\n      <SimpleDialog selectedValue={selectedValue} open={open} onClose={handleClose} />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function AlertDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open alert dialog\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Let Google help apps determine location. This means sending anonymous location data to\r\n            Google, even when no apps are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function AlertDialogSlide() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Slide in alert dialog\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">{\"Use Google's location service?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Let Google help apps determine location. This means sending anonymous location data to\r\n            Google, even when no apps are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode4 = `\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function FormDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open form dialog\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            To subscribe to this website, please enter your email address here. We will send updates\r\n            occasionally.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Email Address\"\r\n            type=\"email\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Subscribe\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode5 = `\r\nimport React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"Close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nclass CustomizedDialogs extends React.Component {\r\n  state = {\r\n    open: false,\r\n  };\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({\r\n      open: true,\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button variant=\"outlined\" color=\"secondary\" onClick={this.handleClickOpen}>\r\n          Open dialog\r\n        </Button>\r\n        <Dialog\r\n          onClose={this.handleClose}\r\n          aria-labelledby=\"customized-dialog-title\"\r\n          open={this.state.open}\r\n        >\r\n          <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>\r\n            Modal title\r\n          </DialogTitle>\r\n          <DialogContent dividers>\r\n            <Typography gutterBottom>\r\n              Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac\r\n              facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum\r\n              at eros.\r\n            </Typography>\r\n            <Typography gutterBottom>\r\n              Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\r\n              lacus vel augue laoreet rutrum faucibus dolor auctor.\r\n            </Typography>\r\n            <Typography gutterBottom>\r\n              Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\r\n              scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\r\n              auctor fringilla.\r\n            </Typography>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              Save changes\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomizedDialogs;\r\n`;\r\nconst jsCode6 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function FullScreenDialog() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open full-screen dialog\r\n      </Button>\r\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"Close\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Sound\r\n            </Typography>\r\n            <Button color=\"inherit\" onClick={handleClose}>\r\n              save\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <List>\r\n          <ListItem button>\r\n            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem button>\r\n            <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\r\n          </ListItem>\r\n        </List>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode7 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: 'auto',\r\n    width: 'fit-content',\r\n  },\r\n  formControl: {\r\n    marginTop: theme.spacing(2),\r\n    minWidth: 120,\r\n  },\r\n  formControlLabel: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function MaxWidthDialog() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [fullWidth, setFullWidth] = React.useState(true);\r\n  const [maxWidth, setMaxWidth] = React.useState('sm');\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  function handleMaxWidthChange(event) {\r\n    setMaxWidth(event.target.value);\r\n  }\r\n\r\n  function handleFullWidthChange(event) {\r\n    setFullWidth(event.target.checked);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open max-width dialog\r\n      </Button>\r\n      <Dialog\r\n        fullWidth={fullWidth}\r\n        maxWidth={maxWidth}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"max-width-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"max-width-dialog-title\">Optional sizes</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            You can set my maximum width and whether to adapt or not.\r\n          </DialogContentText>\r\n          <form className={classes.form} noValidate>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"max-width\">maxWidth</InputLabel>\r\n              <Select\r\n                value={maxWidth}\r\n                onChange={handleMaxWidthChange}\r\n                inputProps={{\r\n                  name: 'max-width',\r\n                  id: 'max-width',\r\n                }}\r\n              >\r\n                <MenuItem value={false}>false</MenuItem>\r\n                <MenuItem value=\"xs\">xs</MenuItem>\r\n                <MenuItem value=\"sm\">sm</MenuItem>\r\n                <MenuItem value=\"md\">md</MenuItem>\r\n                <MenuItem value=\"lg\">lg</MenuItem>\r\n                <MenuItem value=\"xl\">xl</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <FormControlLabel\r\n              className={classes.formControlLabel}\r\n              control={\r\n                <Switch checked={fullWidth} onChange={handleFullWidthChange} value=\"fullWidth\" />\r\n              }\r\n              label=\"Full width\"\r\n            />\r\n          </form>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n}\r\n`;\r\nconst jsCode8 = `\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nexport default function ResponsiveDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open responsive dialog\r\n      </Button>\r\n      <Dialog\r\n        fullScreen={fullScreen}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Let Google help apps determine location. This means sending anonymous location data to\r\n            Google, even when no apps are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode9 = `\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nconst options = [\r\n  'None',\r\n  'Atria',\r\n  'Callisto',\r\n  'Dione',\r\n  'Ganymede',\r\n  'Hangouts Call',\r\n  'Luna',\r\n  'Oberon',\r\n  'Phobos',\r\n  'Pyxis',\r\n  'Sedna',\r\n  'Titania',\r\n  'Triton',\r\n  'Umbriel',\r\n];\r\n\r\nfunction ConfirmationDialogRaw(props) {\r\n  const { onClose, value: valueProp, open, ...other } = props;\r\n  const [value, setValue] = React.useState(valueProp);\r\n  const radioGroupRef = React.useRef(null);\r\n\r\n  React.useEffect(() => {\r\n    if (!open) {\r\n      setValue(valueProp);\r\n    }\r\n  }, [valueProp, open]);\r\n\r\n  function handleEntering() {\r\n    if (radioGroupRef.current != null) {\r\n      radioGroupRef.current.focus();\r\n    }\r\n  }\r\n\r\n  function handleCancel() {\r\n    onClose();\r\n  }\r\n\r\n  function handleOk() {\r\n    onClose(value);\r\n  }\r\n\r\n  function handleChange(event, newValue) {\r\n    setValue(newValue);\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      maxWidth=\"xs\"\r\n      onEntering={handleEntering}\r\n      aria-labelledby=\"confirmation-dialog-title\"\r\n      open={open}\r\n      {...other}\r\n    >\r\n      <DialogTitle id=\"confirmation-dialog-title\">Phone Ringtone</DialogTitle>\r\n      <DialogContent dividers>\r\n        <RadioGroup\r\n          ref={radioGroupRef}\r\n          aria-label=\"Ringtone\"\r\n          name=\"ringtone\"\r\n          value={value}\r\n          onChange={handleChange}\r\n        >\r\n          {options.map(option => (\r\n            <FormControlLabel value={option} key={option} control={<Radio />} label={option} />\r\n          ))}\r\n        </RadioGroup>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleOk} color=\"primary\">\r\n          Ok\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nConfirmationDialogRaw.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  paper: {\r\n    width: '80%',\r\n    maxHeight: 435,\r\n  },\r\n}));\r\n\r\nexport default function ConfirmationDialog() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [value, setValue] = React.useState('Dione');\r\n\r\n  function handleClickListItem() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose(newValue) {\r\n    setOpen(false);\r\n\r\n    if (newValue) {\r\n      setValue(newValue);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <List component=\"div\" role=\"list\">\r\n        <ListItem button divider disabled role=\"listitem\">\r\n          <ListItemText primary=\"Interruptions\" />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          divider\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"ringtone-menu\"\r\n          aria-label=\"Phone ringtone\"\r\n          onClick={handleClickListItem}\r\n          role=\"listitem\"\r\n        >\r\n          <ListItemText primary=\"Phone ringtone\" secondary={value} />\r\n        </ListItem>\r\n        <ListItem button divider disabled role=\"listitem\">\r\n          <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\r\n        </ListItem>\r\n        <ConfirmationDialogRaw\r\n          classes={{\r\n            paper: classes.paper,\r\n          }}\r\n          id=\"ringtone-menu\"\r\n          keepMounted\r\n          open={open}\r\n          onClose={handleClose}\r\n          value={value}\r\n        />\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode10 = `\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function ScrollDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [scroll, setScroll] = React.useState('paper');\r\n\r\n  const handleClickOpen = scrollType => () => {\r\n    setOpen(true);\r\n    setScroll(scrollType);\r\n  };\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClickOpen('paper')}>scroll=paper</Button>\r\n      <Button onClick={handleClickOpen('body')}>scroll=body</Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        scroll={scroll}\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"scroll-dialog-title\">Subscribe</DialogTitle>\r\n        <DialogContent dividers={scroll === 'paper'}>\r\n          <DialogContentText>\r\n            {[...new Array(50)]\r\n              .map(\r\n                () => \\`Cras mattis consectetur purus sit amet fermentum.\r\nCras justo odio, dapibus ac facilisis in, egestas eget quam.\r\nMorbi leo risus, porta ac consectetur ac, vestibulum at eros.\r\nPraesent commodo cursus magna, vel scelerisque nisl consectetur et.\\`,\r\n              )\r\n              .join('\\n')}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Subscribe\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode11 = `\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Draggable from 'react-draggable';\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function DraggableDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open form dialog\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperComponent={PaperComponent}\r\n        aria-labelledby=\"draggable-dialog-title\"\r\n      >\r\n        <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n          Subscribe\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            To subscribe to this website, please enter your email address here. We will send updates\r\n            occasionally.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Subscribe\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n`;\r\n","/* eslint-disable no-func-assign */\r\n/* eslint-disable no-undef */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {\r\n  Button,\r\n  Snackbar,\r\n  IconButton,\r\n  SnackbarContent,\r\n  Fade,\r\n  Slide,\r\n  Grow,\r\n  CssBaseline,\r\n  Toolbar,\r\n  AppBar,\r\n  Typography,\r\n  Fab\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport {amber, green} from \"@material-ui/core/colors\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n// Example 1\r\nconst useStyles1 = makeStyles(theme => ({\r\n  close: {\r\n    padding: theme.spacing(0.5)\r\n  }\r\n}));\r\n\r\n// Example 2\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon\r\n};\r\n\r\nconst useStyles21 = makeStyles(theme => ({\r\n  success: {\r\n    backgroundColor: green[600]\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.main\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700]\r\n  },\r\n  icon: {\r\n    fontSize: 20\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  message: {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  }\r\n}));\r\n\r\nfunction MySnackbarContentWrapper2(props) {\r\n  const classes = useStyles21();\r\n  const { className, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={clsx(classes[variant], className)}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton\r\n          key=\"close\"\r\n          aria-label=\"Close\"\r\n          color=\"inherit\"\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nMySnackbarContentWrapper2.propTypes = {\r\n  className: PropTypes.string,\r\n  message: PropTypes.node,\r\n  onClose: PropTypes.func,\r\n  variant: PropTypes.oneOf([\"success\", \"warning\", \"error\", \"info\"]).isRequired\r\n};\r\n\r\nconst useStyles22 = makeStyles(theme => ({\r\n  margin: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\n// Example 4\r\nconst action4 = (\r\n  <Button color=\"secondary\" size=\"small\">\r\n    lorem ipsum dolorem\r\n  </Button>\r\n);\r\n\r\nconst useStyles4 = makeStyles(theme => ({\r\n  root: {\r\n    maxWidth: 600\r\n  },\r\n  snackbar: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\n// Example 7\r\nfunction SlideTransition7(props) {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nfunction GrowTransition7(props) {\r\n  return <Grow {...props} />;\r\n}\r\n\r\n// Example 8\r\nfunction TransitionLeft(props) {\r\n  return <Slide {...props} direction=\"left\" />;\r\n}\r\n\r\nfunction TransitionUp(props) {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nfunction TransitionRight(props) {\r\n  return <Slide {...props} direction=\"right\" />;\r\n}\r\n\r\nfunction TransitionDown(props) {\r\n  return <Slide {...props} direction=\"down\" />;\r\n}\r\n\r\nexport default function SnackbarsExamplesPage() {\r\n  // Example 1\r\n  const classes1 = useStyles1();\r\n  const [open1, setOpen1] = React.useState(false);\r\n\r\n  function handleClick1() {\r\n    setOpen1(true);\r\n  }\r\n\r\n  function handleClose1(event, reason) {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen1(false);\r\n  }\r\n\r\n  // Example 2\r\n  const classes2 = useStyles22();\r\n  const [open2, setOpen2] = React.useState(false);\r\n\r\n  function handleClick2() {\r\n    setOpen2(true);\r\n  }\r\n\r\n  function handleClose2(event, reason) {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen2(false);\r\n  }\r\n\r\n  // Example 3\r\n  const [state, setState] = React.useState({\r\n    open: false,\r\n    vertical: \"top\",\r\n    horizontal: \"center\"\r\n  });\r\n\r\n  const { vertical, horizontal, open } = state;\r\n\r\n  const handleClick = newState => () => {\r\n    setState({ open: true, ...newState });\r\n  };\r\n\r\n  function handleClose() {\r\n    setState({ ...state, open: false });\r\n  }\r\n\r\n  // Example 4\r\n  const classes4 = useStyles4();\r\n\r\n  // Example 7\r\n  const [state7, setState7] = React.useState({\r\n    open7: false,\r\n    Transition7: Fade\r\n  });\r\n\r\n  const handleClick7 = Transition => () => {\r\n    setState7({\r\n      open7: true,\r\n      Transition7: Transition\r\n    });\r\n  };\r\n\r\n  function handleClose7() {\r\n    setState7({\r\n      ...state7,\r\n      open7: false\r\n    });\r\n  }\r\n\r\n  // Example 8\r\n  const [state8, setState8] = React.useState({\r\n    open8: false\r\n  });\r\n\r\n  const handleClick8 = Transition => {\r\n    return () => {\r\n      setState8({ open8: true, Transition });\r\n    };\r\n  };\r\n\r\n  const handleClose8 = () => {\r\n    setState8({ open8: false });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          Snackbars provide brief messages about app processes - typically at\r\n          the bottom of the screen.\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/snackbars/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Simple snackbars\">\r\n            <span>\r\n              A basic snackbar that aims to reproduce Google Keep's snackbar\r\n              behavior.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <Button onClick={handleClick1}>Open simple snackbar</Button>\r\n              <Snackbar\r\n                anchorOrigin={{\r\n                  vertical: \"bottom\",\r\n                  horizontal: \"left\"\r\n                }}\r\n                open={open1}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose1}\r\n                ContentProps={{\r\n                  \"aria-describedby\": \"message-id\"\r\n                }}\r\n                message={<span id=\"message-id\">Note archived</span>}\r\n                action={[\r\n                  <Button\r\n                    key=\"undo\"\r\n                    color=\"secondary\"\r\n                    size=\"small\"\r\n                    onClick={handleClose1}\r\n                  >\r\n                    UNDO\r\n                  </Button>,\r\n                  <IconButton\r\n                    key=\"close\"\r\n                    aria-label=\"Close\"\r\n                    color=\"inherit\"\r\n                    className={classes1.close}\r\n                    onClick={handleClose1}\r\n                  >\r\n                    <CloseIcon />\r\n                  </IconButton>\r\n                ]}\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode3}\r\n            beforeCodeTitle=\"Positioned snackbars\"\r\n          >\r\n            <span>\r\n              There may be circumstances when the placement of the snackbar\r\n              needs to be more flexible.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <Button\r\n                onClick={handleClick({\r\n                  vertical: \"top\",\r\n                  horizontal: \"center\"\r\n                })}\r\n              >\r\n                Top-Center\r\n              </Button>\r\n              <Button\r\n                onClick={handleClick({\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\"\r\n                })}\r\n              >\r\n                Top-Right\r\n              </Button>\r\n              <Button\r\n                onClick={handleClick({\r\n                  vertical: \"bottom\",\r\n                  horizontal: \"right\"\r\n                })}\r\n              >\r\n                Bottom-Right\r\n              </Button>\r\n              <Button\r\n                onClick={handleClick({\r\n                  vertical: \"bottom\",\r\n                  horizontal: \"center\"\r\n                })}\r\n              >\r\n                Bottom-Center\r\n              </Button>\r\n              <Button\r\n                onClick={handleClick({\r\n                  vertical: \"bottom\",\r\n                  horizontal: \"left\"\r\n                })}\r\n              >\r\n                Bottom-Left\r\n              </Button>\r\n              <Button\r\n                onClick={handleClick({\r\n                  vertical: \"top\",\r\n                  horizontal: \"left\"\r\n                })}\r\n              >\r\n                Top-Left\r\n              </Button>\r\n              <Snackbar\r\n                anchorOrigin={{ vertical, horizontal }}\r\n                key={`${vertical},${horizontal}`}\r\n                open={open}\r\n                onClose={handleClose}\r\n                ContentProps={{\r\n                  \"aria-describedby\": \"message-id\"\r\n                }}\r\n                message={<span id=\"message-id\">I love snacks</span>}\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode4} beforeCodeTitle=\"Message Length\">\r\n            <span>Some snackbars with varying message length.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes4.root}>\r\n              <SnackbarContent\r\n                className={classes4.snackbar}\r\n                message=\"I love snacks.\"\r\n                action={action4}\r\n              />\r\n              <SnackbarContent\r\n                className={classes4.snackbar}\r\n                message={\r\n                  \"I love candy. I love cookies. I love cupcakes. \\\r\n                      I love cheesecake. I love chocolate.\"\r\n                }\r\n              />\r\n              <SnackbarContent\r\n                className={classes4.snackbar}\r\n                message=\"I love candy. I love cookies. I love cupcakes.\"\r\n                action={action4}\r\n              />\r\n              <SnackbarContent\r\n                className={classes4.snackbar}\r\n                message={\r\n                  \"I love candy. I love cookies. I love cupcakes. \\\r\n                      I love cheesecake. I love chocolate.\"\r\n                }\r\n                action={action4}\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode7} beforeCodeTitle=\"Change Transition\">\r\n            <span>\r\n              Grow is the default transition but you can use a different one.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <Button onClick={handleClick7(GrowTransition7)}>\r\n                Grow Transition\r\n              </Button>\r\n              <Button onClick={handleClick7(Fade)}>Fade Transition</Button>\r\n              <Button onClick={handleClick7(SlideTransition7)}>\r\n                Slide Transition\r\n              </Button>\r\n              <Snackbar\r\n                open={state7.open7}\r\n                onClose={handleClose7}\r\n                TransitionComponent={state7.Transition7}\r\n                ContentProps={{\r\n                  \"aria-describedby\": \"message-id\"\r\n                }}\r\n                message={<span id=\"message-id\">I love snacks</span>}\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode2}\r\n            beforeCodeTitle=\"Customized snackbars\"\r\n          >\r\n            <span>Here are some examples of customizing the component.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <Button\r\n                variant=\"outlined\"\r\n                className={classes2.margin}\r\n                onClick={handleClick2}\r\n              >\r\n                Open success snackbar\r\n              </Button>\r\n              <Snackbar\r\n                anchorOrigin={{\r\n                  vertical: \"bottom\",\r\n                  horizontal: \"left\"\r\n                }}\r\n                open={open2}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose2}\r\n              >\r\n                <MySnackbarContentWrapper2\r\n                  onClose={handleClose2}\r\n                  variant=\"success\"\r\n                  message=\"This is a success message!\"\r\n                />\r\n              </Snackbar>\r\n              <MySnackbarContentWrapper2\r\n                variant=\"error\"\r\n                className={classes2.margin}\r\n                message=\"This is an error message!\"\r\n              />\r\n              <MySnackbarContentWrapper2\r\n                variant=\"warning\"\r\n                className={classes2.margin}\r\n                message=\"This is a warning message!\"\r\n              />\r\n              <MySnackbarContentWrapper2\r\n                variant=\"info\"\r\n                className={classes2.margin}\r\n                message=\"This is an information message!\"\r\n              />\r\n              <MySnackbarContentWrapper2\r\n                variant=\"success\"\r\n                className={classes2.margin}\r\n                message=\"This is a success message!\"\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode8}\r\n            beforeCodeTitle=\"Control Slide direction\"\r\n          >\r\n            <span>You can change the direction of the Slide transition.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <Button onClick={handleClick8(TransitionLeft)}>Right</Button>\r\n              <Button onClick={handleClick8(TransitionUp)}>Up</Button>\r\n              <Button onClick={handleClick8(TransitionRight)}>Left</Button>\r\n              <Button onClick={handleClick8(TransitionDown)}>Down</Button>\r\n              <Snackbar\r\n                open={state8.open8}\r\n                onClose={handleClose8}\r\n                TransitionComponent={state8.Transition}\r\n                ContentProps={{\r\n                  \"aria-describedby\": \"message-id\"\r\n                }}\r\n                message={<span id=\"message-id\">I love snacks</span>}\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  close: {\r\n    padding: theme.spacing(0.5),\r\n  },\r\n}));\r\n\r\nexport default function SimpleSnackbar() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleClick() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose(event, reason) {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClick}>Open simple snackbar</Button>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        ContentProps={{\r\n          'aria-describedby': 'message-id',\r\n        }}\r\n        message={<span id=\"message-id\">Note archived</span>}\r\n        action={[\r\n          <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={handleClose}>\r\n            UNDO\r\n          </Button>,\r\n          <IconButton\r\n            key=\"close\"\r\n            aria-label=\"Close\"\r\n            color=\"inherit\"\r\n            className={classes.close}\r\n            onClick={handleClose}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>,\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport Button from '@material-ui/core/Button';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { amber, green } from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon,\r\n};\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  success: {\r\n    backgroundColor: green[600],\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700],\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n  const classes = useStyles1();\r\n  const { className, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={clsx(classes[variant], className)}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>,\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n  className: PropTypes.string,\r\n  message: PropTypes.node,\r\n  onClose: PropTypes.func,\r\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n};\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function CustomizedSnackbars() {\r\n  const classes = useStyles2();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleClick() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose(event, reason) {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" className={classes.margin} onClick={handleClick}>\r\n        Open success snackbar\r\n      </Button>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n      >\r\n        <MySnackbarContentWrapper\r\n          onClose={handleClose}\r\n          variant=\"success\"\r\n          message=\"This is a success message!\"\r\n        />\r\n      </Snackbar>\r\n      <MySnackbarContentWrapper\r\n        variant=\"error\"\r\n        className={classes.margin}\r\n        message=\"This is an error message!\"\r\n      />\r\n      <MySnackbarContentWrapper\r\n        variant=\"warning\"\r\n        className={classes.margin}\r\n        message=\"This is a warning message!\"\r\n      />\r\n      <MySnackbarContentWrapper\r\n        variant=\"info\"\r\n        className={classes.margin}\r\n        message=\"This is an information message!\"\r\n      />\r\n      <MySnackbarContentWrapper\r\n        variant=\"success\"\r\n        className={classes.margin}\r\n        message=\"This is a success message!\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nexport default function PositionedSnackbar() {\r\n  const [state, setState] = React.useState({\r\n    open: false,\r\n    vertical: 'top',\r\n    horizontal: 'center',\r\n  });\r\n\r\n  const { vertical, horizontal, open } = state;\r\n\r\n  const handleClick = newState => () => {\r\n    setState({ open: true, ...newState });\r\n  };\r\n\r\n  function handleClose() {\r\n    setState({ ...state, open: false });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClick({ vertical: 'top', horizontal: 'center' })}>Top-Center</Button>\r\n      <Button onClick={handleClick({ vertical: 'top', horizontal: 'right' })}>Top-Right</Button>\r\n      <Button onClick={handleClick({ vertical: 'bottom', horizontal: 'right' })}>\r\n        Bottom-Right\r\n      </Button>\r\n      <Button onClick={handleClick({ vertical: 'bottom', horizontal: 'center' })}>\r\n        Bottom-Center\r\n      </Button>\r\n      <Button onClick={handleClick({ vertical: 'bottom', horizontal: 'left' })}>Bottom-Left</Button>\r\n      <Button onClick={handleClick({ vertical: 'top', horizontal: 'left' })}>Top-Left</Button>\r\n      <Snackbar\r\n        anchorOrigin={{ vertical, horizontal }}\r\n        key={\\`\\${vertical},\\${horizontal}\\`}\r\n        open={open}\r\n        onClose={handleClose}\r\n        ContentProps={{\r\n          'aria-describedby': 'message-id',\r\n        }}\r\n        message={<span id=\"message-id\">I love snacks</span>}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode4 = `\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\n\r\nconst action = (\r\n  <Button color=\"secondary\" size=\"small\">\r\n    lorem ipsum dolorem\r\n  </Button>\r\n);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    maxWidth: 600,\r\n  },\r\n  snackbar: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function LongTextSnackbar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <SnackbarContent className={classes.snackbar} message=\"I love snacks.\" action={action} />\r\n      <SnackbarContent\r\n        className={classes.snackbar}\r\n        message={\r\n          'I love candy. I love cookies. I love cupcakes. \\\r\n          I love cheesecake. I love chocolate.'\r\n        }\r\n      />\r\n      <SnackbarContent\r\n        className={classes.snackbar}\r\n        message=\"I love candy. I love cookies. I love cupcakes.\"\r\n        action={action}\r\n      />\r\n      <SnackbarContent\r\n        className={classes.snackbar}\r\n        message={\r\n          'I love candy. I love cookies. I love cupcakes. \\\r\n          I love cheesecake. I love chocolate.'\r\n        }\r\n        action={action}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode7 = `\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nfunction SlideTransition(props) {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nfunction GrowTransition(props) {\r\n  return <Grow {...props} />;\r\n}\r\n\r\nexport default function TransitionsSnackbar() {\r\n  const [state, setState] = React.useState({\r\n    open: false,\r\n    Transition: Fade,\r\n  });\r\n\r\n  const handleClick = Transition => () => {\r\n    setState({\r\n      open: true,\r\n      Transition,\r\n    });\r\n  };\r\n\r\n  function handleClose() {\r\n    setState({\r\n      ...state,\r\n      open: false,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClick(GrowTransition)}>Grow Transition</Button>\r\n      <Button onClick={handleClick(Fade)}>Fade Transition</Button>\r\n      <Button onClick={handleClick(SlideTransition)}>Slide Transition</Button>\r\n      <Snackbar\r\n        open={state.open}\r\n        onClose={handleClose}\r\n        TransitionComponent={state.Transition}\r\n        ContentProps={{\r\n          'aria-describedby': 'message-id',\r\n        }}\r\n        message={<span id=\"message-id\">I love snacks</span>}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode8 = `\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nfunction TransitionLeft(props) {\r\n  return <Slide {...props} direction=\"left\" />;\r\n}\r\n\r\nfunction TransitionUp(props) {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nfunction TransitionRight(props) {\r\n  return <Slide {...props} direction=\"right\" />;\r\n}\r\n\r\nfunction TransitionDown(props) {\r\n  return <Slide {...props} direction=\"down\" />;\r\n}\r\n\r\nclass DirectionSnackbar extends React.Component {\r\n  state = {\r\n    open: false,\r\n  };\r\n\r\n  handleClick = Transition => () => {\r\n    this.setState({ open: true, Transition });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button onClick={this.handleClick(TransitionLeft)}>Right</Button>\r\n        <Button onClick={this.handleClick(TransitionUp)}>Up</Button>\r\n        <Button onClick={this.handleClick(TransitionRight)}>Left</Button>\r\n        <Button onClick={this.handleClick(TransitionDown)}>Down</Button>\r\n        <Snackbar\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          TransitionComponent={this.state.Transition}\r\n          ContentProps={{\r\n            'aria-describedby': 'message-id',\r\n          }}\r\n          message={<span id=\"message-id\">I love snacks</span>}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DirectionSnackbar;\r\n`;\r\n","import React from \"react\";\r\nimport { Redirect, Switch } from \"react-router-dom\";\r\nimport { ContentRoute } from \"../../../../_metronic/layout\";\r\nimport ProgressExamplesPage from \"./ProgressExamplesPage\";\r\nimport DialogsExamplesPage from \"./DialogsExamplesPage\";\r\nimport SnackbarsExamplesPage from \"./SnackbarsExamplesPage\";\r\n\r\nexport function FeedbackPage() {\r\n  return (\r\n    <Switch>\r\n      <Redirect\r\n        exact={true}\r\n        from=\"/google-material/feedback\"\r\n        to=\"/google-material/feedback/progress\"\r\n      />\r\n\r\n      <ContentRoute\r\n        path=\"/google-material/feedback/progress\"\r\n        component={ProgressExamplesPage}\r\n      />\r\n      <ContentRoute\r\n        path=\"/google-material/feedback/dialogs\"\r\n        component={DialogsExamplesPage}\r\n      />\r\n      <ContentRoute\r\n        path=\"/google-material/feedback/snackbars\"\r\n        component={SnackbarsExamplesPage}\r\n      />\r\n    </Switch>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {makeStyles, withStyles} from \"@material-ui/core/styles\";\r\nimport {Typography, Grid, Tooltip, Paper, Input} from \"@material-ui/core\";\r\nimport VolumeDown from \"@material-ui/icons/VolumeDown\";\r\nimport VolumeUp from \"@material-ui/icons/VolumeUp\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n// Example 1\r\nconst useStyles1 = makeStyles({\r\n  root: {\r\n    width: 200\r\n  }\r\n});\r\n\r\n// Example 2\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: 300\r\n  },\r\n  margin: {\r\n    height: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst marks2 = [\r\n  {\r\n    value: 0,\r\n    label: \"0°C\"\r\n  },\r\n  {\r\n    value: 20,\r\n    label: \"20°C\"\r\n  },\r\n  {\r\n    value: 37,\r\n    label: \"37°C\"\r\n  },\r\n  {\r\n    value: 100,\r\n    label: \"100°C\"\r\n  }\r\n];\r\n\r\nfunction valuetext2(value) {\r\n  return `${value}°C`;\r\n}\r\n\r\nfunction valueLabelFormat2(value) {\r\n  return marks2.findIndex(mark => mark.value === value) + 1;\r\n}\r\n\r\n// Example 3\r\nconst useStyles3 = makeStyles({\r\n  root: {\r\n    width: 300\r\n  }\r\n});\r\n\r\nfunction valuetext3(value) {\r\n  return `${value}°C`;\r\n}\r\n\r\n// Example 4\r\nconst useStyles4 = makeStyles(theme => ({\r\n  root: {\r\n    width: 300 + 24 * 2,\r\n    padding: 24\r\n  },\r\n  margin: {\r\n    height: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nfunction ValueLabelComponent4(props) {\r\n  const { children, open, value } = props;\r\n\r\n  const popperRef = React.useRef(null);\r\n  React.useEffect(() => {\r\n    if (popperRef.current) {\r\n      popperRef.current.update();\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Tooltip\r\n      PopperProps={{\r\n        popperRef\r\n      }}\r\n      open={open}\r\n      enterTouchDelay={0}\r\n      placement=\"top\"\r\n      title={value}\r\n    >\r\n      {children}\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\nValueLabelComponent4.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  value: PropTypes.number.isRequired\r\n};\r\n\r\nconst iOSBoxShadow4 =\r\n  \"0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.13),0 0 0 1px rgba(0,0,0,0.02)\";\r\n\r\nconst marks4 = [\r\n  {\r\n    value: 0\r\n  },\r\n  {\r\n    value: 20\r\n  },\r\n  {\r\n    value: 37\r\n  },\r\n  {\r\n    value: 100\r\n  }\r\n];\r\n\r\nconst IOSSlider4 = withStyles({\r\n  root: {\r\n    color: \"#3880ff\",\r\n    height: 2,\r\n    padding: \"15px 0\"\r\n  },\r\n  thumb: {\r\n    height: 28,\r\n    width: 28,\r\n    backgroundColor: \"#fff\",\r\n    boxShadow: iOSBoxShadow4,\r\n    marginTop: -14,\r\n    marginLeft: -14,\r\n    \"&:focus,&:hover,&$active\": {\r\n      boxShadow:\r\n        \"0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.3),0 0 0 1px rgba(0,0,0,0.02)\",\r\n      // Reset on touch devices, it doesn't add specificity\r\n      \"@media (hover: none)\": {\r\n        boxShadow: iOSBoxShadow4\r\n      }\r\n    }\r\n  },\r\n  active: {},\r\n  valueLabel: {\r\n    left: \"calc(-50% + 11px)\",\r\n    top: -22,\r\n    \"& *\": {\r\n      background: \"transparent\",\r\n      color: \"#000\"\r\n    }\r\n  },\r\n  track: {\r\n    height: 2\r\n  },\r\n  rail: {\r\n    height: 2,\r\n    opacity: 0.5,\r\n    backgroundColor: \"#bfbfbf\"\r\n  },\r\n  mark: {\r\n    backgroundColor: \"#bfbfbf\",\r\n    height: 8,\r\n    width: 1,\r\n    marginTop: -3\r\n  },\r\n  markActive: {\r\n    backgroundColor: \"currentColor\"\r\n  }\r\n})(Slider);\r\n\r\nconst PrettoSlider4 = withStyles({\r\n  root: {\r\n    color: \"#52af77\",\r\n    height: 8\r\n  },\r\n  thumb: {\r\n    height: 24,\r\n    width: 24,\r\n    backgroundColor: \"#fff\",\r\n    border: \"2px solid currentColor\",\r\n    marginTop: -8,\r\n    marginLeft: -12,\r\n    \"&:focus,&:hover,&$active\": {\r\n      boxShadow: \"inherit\"\r\n    }\r\n  },\r\n  active: {},\r\n  valueLabel: {\r\n    left: \"calc(-50% + 4px)\"\r\n  },\r\n  track: {\r\n    height: 8,\r\n    borderRadius: 4\r\n  },\r\n  rail: {\r\n    height: 8,\r\n    borderRadius: 4\r\n  }\r\n})(Slider);\r\n\r\nconst AirbnbSlider4 = withStyles({\r\n  root: {\r\n    color: \"#3a8589\",\r\n    height: 3,\r\n    padding: \"13px 0\"\r\n  },\r\n  thumb: {\r\n    height: 27,\r\n    width: 27,\r\n    backgroundColor: \"#fff\",\r\n    border: \"1px solid currentColor\",\r\n    marginTop: -12,\r\n    marginLeft: -13,\r\n    boxShadow: \"#ebebeb 0px 2px 2px\",\r\n    \"&:focus,&:hover,&$active\": {\r\n      boxShadow: \"#ccc 0px 2px 3px 1px\"\r\n    },\r\n    \"& .bar\": {\r\n      // display: inline-block !important;\r\n      height: 9,\r\n      width: 1,\r\n      backgroundColor: \"currentColor\",\r\n      marginLeft: 1,\r\n      marginRight: 1\r\n    }\r\n  },\r\n  active: {},\r\n  valueLabel: {\r\n    left: \"calc(-50% + 4px)\"\r\n  },\r\n  track: {\r\n    height: 3\r\n  },\r\n  rail: {\r\n    color: \"#d8d8d8\",\r\n    opacity: 1,\r\n    height: 3\r\n  }\r\n})(Slider);\r\n\r\nfunction AirbnbThumbComponent4(props) {\r\n  return (\r\n    <span {...props}>\r\n      <span className=\"bar\" />\r\n      <span className=\"bar\" />\r\n      <span className=\"bar\" />\r\n    </span>\r\n  );\r\n}\r\n\r\n// Example 5\r\nconst useStyles5 = makeStyles({\r\n  root: {\r\n    width: 250\r\n  },\r\n  input: {\r\n    width: 42\r\n  }\r\n});\r\n\r\n// Example 6\r\nconst useStyles6 = makeStyles({\r\n  root: {\r\n    height: 300\r\n  }\r\n});\r\n\r\nfunction valuetext6(value) {\r\n  return `${value}°C`;\r\n}\r\n\r\nconst marks6 = [\r\n  {\r\n    value: 0,\r\n    label: \"0°C\"\r\n  },\r\n  {\r\n    value: 20,\r\n    label: \"20°C\"\r\n  },\r\n  {\r\n    value: 37,\r\n    label: \"37°C\"\r\n  },\r\n  {\r\n    value: 100,\r\n    label: \"100°C\"\r\n  }\r\n];\r\n\r\nexport default function SliderExamplesPage() {\r\n  // Example 1\r\n  const classes1 = useStyles1();\r\n  const [value1, setValue1] = React.useState(30);\r\n\r\n  const handleChange1 = (event, newValue) => {\r\n    setValue1(newValue);\r\n  };\r\n\r\n  // Example 2\r\n  const classes2 = useStyles2();\r\n\r\n  // Example 3\r\n  const classes3 = useStyles3();\r\n  const [value3, setValue3] = React.useState([20, 37]);\r\n\r\n  const handleChange3 = (event, newValue) => {\r\n    setValue3(newValue);\r\n  };\r\n\r\n  // Example 4\r\n  const classes4 = useStyles4();\r\n\r\n  // Example 5\r\n  const classes5 = useStyles5();\r\n  const [value5, setValue5] = React.useState(30);\r\n\r\n  const handleSliderChange5 = (event, newValue) => {\r\n    setValue5(newValue);\r\n  };\r\n\r\n  const handleInputChange5 = event => {\r\n    setValue5(event.target.value === \"\" ? \"\" : Number(event.target.value));\r\n  };\r\n\r\n  const handleBlur5 = () => {\r\n    if (value5 < 0) {\r\n      setValue5(0);\r\n    } else if (value5 > 100) {\r\n      setValue5(100);\r\n    }\r\n  };\r\n\r\n  // Example 6\r\n  const classes6 = useStyles6();\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>Sliders allow users to make selections from a range of values.</span>{\" \"}\r\n        For more info please check the components's official{\" \"}\r\n        <a\r\n          target=\"_blank\"\r\n          className=\"font-weight-bold\"\r\n          rel=\"noopener noreferrer\"\r\n          href=\"https://material-ui.com/components/slider/\"\r\n        >\r\n          demos & documentation\r\n        </a>\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Continuous sliders\">\r\n            <div className=\"section\">\r\n              <span className=\"section-sub\">\r\n                Continuous sliders allow users to select a value along a\r\n                subjective range.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <div className=\"section-content\">\r\n                <div className={classes1.root}>\r\n                  <Typography id=\"continuous-slider\" gutterBottom>\r\n                    Volume\r\n                  </Typography>\r\n                  <Grid container spacing={2}>\r\n                    <Grid item>\r\n                      <VolumeDown />\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                      <Slider\r\n                        value={value1}\r\n                        onChange={handleChange1}\r\n                        aria-labelledby=\"continuous-slider\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <VolumeUp />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Slider\r\n                    disabled\r\n                    defaultValue={30}\r\n                    aria-labelledby=\"continuous-slider\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"Discrete sliders\">\r\n            <div className=\"section\">\r\n              <span className=\"section-sub\">\r\n                Discrete sliders can be adjusted to a specific value by\r\n                referencing its value indicator.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <div className=\"section-content\">\r\n                <div className={classes2.root}>\r\n                  <Typography id=\"discrete-slider\" gutterBottom>\r\n                    Temperature\r\n                  </Typography>\r\n                  <Slider\r\n                    defaultValue={30}\r\n                    getAriaValueText={valuetext2}\r\n                    aria-labelledby=\"discrete-slider\"\r\n                    valueLabelDisplay=\"auto\"\r\n                    step={10}\r\n                    marks\r\n                    min={10}\r\n                    max={110}\r\n                  />\r\n                  <div className={classes2.margin} />\r\n                  <Typography id=\"discrete-slider-custom\" gutterBottom>\r\n                    Custom marks\r\n                  </Typography>\r\n                  <Slider\r\n                    defaultValue={20}\r\n                    getAriaValueText={valuetext2}\r\n                    aria-labelledby=\"discrete-slider-custom\"\r\n                    step={10}\r\n                    valueLabelDisplay=\"auto\"\r\n                    marks={marks2}\r\n                  />\r\n                  <div className={classes2.margin} />\r\n                  <Typography id=\"discrete-slider-restrict\" gutterBottom>\r\n                    Restricted values\r\n                  </Typography>\r\n                  <Slider\r\n                    defaultValue={20}\r\n                    valueLabelFormat={valueLabelFormat2}\r\n                    getAriaValueText={valuetext2}\r\n                    aria-labelledby=\"discrete-slider-restrict\"\r\n                    step={null}\r\n                    valueLabelDisplay=\"auto\"\r\n                    marks={marks2}\r\n                  />\r\n                  <div className={classes2.margin} />\r\n                  <Typography id=\"discrete-slider-always\" gutterBottom>\r\n                    Always visible\r\n                  </Typography>\r\n                  <Slider\r\n                    defaultValue={80}\r\n                    getAriaValueText={valuetext2}\r\n                    aria-labelledby=\"discrete-slider-always\"\r\n                    step={10}\r\n                    marks={marks2}\r\n                    valueLabelDisplay=\"on\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample jsCode={jsCode3} beforeCodeTitle=\"Range sliders\">\r\n            <div className=\"section\">\r\n              <span className=\"section-sub\"></span>\r\n              <div className=\"section-content\">\r\n                <div className={classes3.root}>\r\n                  <Typography id=\"range-slider\" gutterBottom>\r\n                    Temperature range\r\n                  </Typography>\r\n                  <Slider\r\n                    value={value3}\r\n                    onChange={handleChange3}\r\n                    valueLabelDisplay=\"auto\"\r\n                    aria-labelledby=\"range-slider\"\r\n                    getAriaValueText={valuetext3}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample jsCode={jsCode4} beforeCodeTitle=\"Customized sliders\">\r\n            <div className=\"section\">\r\n              <span className=\"section-sub\">\r\n                Here are some examples of customizing the component. You can\r\n                learn more about this in the overrides documentation page.\r\n              </span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <div className=\"section-content\">\r\n                <Paper className={classes4.root}>\r\n                  <Typography gutterBottom>iOS</Typography>\r\n                  <IOSSlider4\r\n                    aria-label=\"iOS slider\"\r\n                    defaultValue={60}\r\n                    marks={marks4}\r\n                    valueLabelDisplay=\"on\"\r\n                  />\r\n                  <div className={classes4.margin} />\r\n                  <Typography gutterBottom>pretto.fr</Typography>\r\n                  <PrettoSlider4\r\n                    valueLabelDisplay=\"auto\"\r\n                    aria-label=\"Pretto slider\"\r\n                    defaultValue={20}\r\n                  />\r\n                  <div className={classes4.margin} />\r\n                  <Typography gutterBottom>Tooltip value label</Typography>\r\n                  <Slider\r\n                    ValueLabelComponent={ValueLabelComponent4}\r\n                    aria-label=\"Custom thumb label\"\r\n                    defaultValue={20}\r\n                  />\r\n                  <div className={classes4.margin} />\r\n                  <Typography gutterBottom>Airbnb</Typography>\r\n                  <AirbnbSlider4\r\n                    ThumbComponent={AirbnbThumbComponent4}\r\n                    aria-label=\"Airbnb slider\"\r\n                    defaultValue={[20, 40]}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample jsCode={jsCode5} beforeCodeTitle=\"With input field\">\r\n            <div className=\"section\">\r\n              <span className=\"section-sub\"></span>\r\n              <div className=\"section-content\">\r\n                <div className={classes5.root}>\r\n                  <Typography id=\"input-slider\" gutterBottom>\r\n                    Volume\r\n                  </Typography>\r\n                  <Grid container spacing={2} alignItems=\"center\">\r\n                    <Grid item>\r\n                      <VolumeUp />\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                      <Slider\r\n                        value={typeof value5 === \"number\" ? value5 : 0}\r\n                        onChange={handleSliderChange5}\r\n                        aria-labelledby=\"input-slider\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Input\r\n                        className={classes5.input}\r\n                        value={value5}\r\n                        margin=\"dense\"\r\n                        onChange={handleInputChange5}\r\n                        onBlur={handleBlur5}\r\n                        inputProps={{\r\n                          step: 10,\r\n                          min: 0,\r\n                          max: 100,\r\n                          type: \"number\",\r\n                          \"aria-labelledby\": \"input-slider\"\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample jsCode={jsCode6} beforeCodeTitle=\"Vertical sliders\">\r\n            <div className=\"section\">\r\n              <span className=\"section-sub\"></span>\r\n              <div className=\"separator separator-dashed my-7\"></div>\r\n              <div className=\"section-content\">\r\n                <React.Fragment>\r\n                  <Typography id=\"vertical-slider\" gutterBottom>\r\n                    Temperature\r\n                  </Typography>\r\n                  <div className={classes6.root}>\r\n                    <Slider\r\n                      orientation=\"vertical\"\r\n                      getAriaValueText={valuetext6}\r\n                      defaultValue={30}\r\n                      aria-labelledby=\"vertical-slider\"\r\n                    />\r\n                    <Slider\r\n                      disabled\r\n                      orientation=\"vertical\"\r\n                      getAriaValueText={valuetext6}\r\n                      defaultValue={30}\r\n                      aria-labelledby=\"vertical-slider\"\r\n                    />\r\n                    <Slider\r\n                      orientation=\"vertical\"\r\n                      defaultValue={[20, 37]}\r\n                      aria-labelledby=\"vertical-slider\"\r\n                      getAriaValueText={valuetext6}\r\n                      marks={marks6}\r\n                    />\r\n                  </div>\r\n                </React.Fragment>\r\n              </div>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/lab/Slider';\r\nimport VolumeDown from '@material-ui/icons/VolumeDown';\r\nimport VolumeUp from '@material-ui/icons/VolumeUp';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 200,\r\n  },\r\n});\r\n\r\nexport default function ContinuousSlider() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(30);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography id=\"continuous-slider\" gutterBottom>\r\n        Volume\r\n      </Typography>\r\n      <Grid container spacing={2}>\r\n        <Grid item>\r\n          <VolumeDown />\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Slider value={value} onChange={handleChange} aria-labelledby=\"continuous-slider\" />\r\n        </Grid>\r\n        <Grid item>\r\n          <VolumeUp />\r\n        </Grid>\r\n      </Grid>\r\n      <Slider disabled defaultValue={30} aria-labelledby=\"continuous-slider\" />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/lab/Slider';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: 300,\r\n  },\r\n  margin: {\r\n    height: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst marks = [\r\n  {\r\n    value: 0,\r\n    label: '0°C',\r\n  },\r\n  {\r\n    value: 20,\r\n    label: '20°C',\r\n  },\r\n  {\r\n    value: 37,\r\n    label: '37°C',\r\n  },\r\n  {\r\n    value: 100,\r\n    label: '100°C',\r\n  },\r\n];\r\n\r\nfunction valuetext(value) {\r\n  return \\`\\${value}°C\\`;\r\n}\r\n\r\nfunction valueLabelFormat(value) {\r\n  return marks.findIndex(mark => mark.value === value) + 1;\r\n}\r\n\r\nexport default function DiscreteSlider() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography id=\"discrete-slider\" gutterBottom>\r\n        Temperature\r\n      </Typography>\r\n      <Slider\r\n        defaultValue={30}\r\n        getAriaValueText={valuetext}\r\n        aria-labelledby=\"discrete-slider\"\r\n        valueLabelDisplay=\"auto\"\r\n        step={10}\r\n        marks\r\n        min={10}\r\n        max={110}\r\n      />\r\n      <div className={classes.margin} />\r\n      <Typography id=\"discrete-slider-custom\" gutterBottom>\r\n        Custom marks\r\n      </Typography>\r\n      <Slider\r\n        defaultValue={20}\r\n        getAriaValueText={valuetext}\r\n        aria-labelledby=\"discrete-slider-custom\"\r\n        step={10}\r\n        valueLabelDisplay=\"auto\"\r\n        marks={marks}\r\n      />\r\n      <div className={classes.margin} />\r\n      <Typography id=\"discrete-slider-restrict\" gutterBottom>\r\n        Restricted values\r\n      </Typography>\r\n      <Slider\r\n        defaultValue={20}\r\n        valueLabelFormat={valueLabelFormat}\r\n        getAriaValueText={valuetext}\r\n        aria-labelledby=\"discrete-slider-restrict\"\r\n        step={null}\r\n        valueLabelDisplay=\"auto\"\r\n        marks={marks}\r\n      />\r\n      <div className={classes.margin} />\r\n      <Typography id=\"discrete-slider-always\" gutterBottom>\r\n        Always visible\r\n      </Typography>\r\n      <Slider\r\n        defaultValue={80}\r\n        getAriaValueText={valuetext}\r\n        aria-labelledby=\"discrete-slider-always\"\r\n        step={10}\r\n        marks={marks}\r\n        valueLabelDisplay=\"on\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/lab/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 300,\r\n  },\r\n});\r\n\r\nfunction valuetext(value) {\r\n  return \\`\\${value}°C\\`;\r\n}\r\n\r\nexport default function RangeSlider() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState([20, 37]);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography id=\"range-slider\" gutterBottom>\r\n        Temperature range\r\n      </Typography>\r\n      <Slider\r\n        value={value}\r\n        onChange={handleChange}\r\n        valueLabelDisplay=\"auto\"\r\n        aria-labelledby=\"range-slider\"\r\n        getAriaValueText={valuetext}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode4 = `\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Slider from '@material-ui/lab/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: 300 + 24 * 2,\r\n    padding: 24,\r\n  },\r\n  margin: {\r\n    height: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction ValueLabelComponent(props) {\r\n  const { children, open, value } = props;\r\n\r\n  const popperRef = React.useRef(null);\r\n  React.useEffect(() => {\r\n    if (popperRef.current) {\r\n      popperRef.current.update();\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Tooltip\r\n      PopperProps={{\r\n        popperRef,\r\n      }}\r\n      open={open}\r\n      enterTouchDelay={0}\r\n      placement=\"top\"\r\n      title={value}\r\n    >\r\n      {children}\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\nValueLabelComponent.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nconst iOSBoxShadow =\r\n  '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.13),0 0 0 1px rgba(0,0,0,0.02)';\r\n\r\nconst marks = [\r\n  {\r\n    value: 0,\r\n  },\r\n  {\r\n    value: 20,\r\n  },\r\n  {\r\n    value: 37,\r\n  },\r\n  {\r\n    value: 100,\r\n  },\r\n];\r\n\r\nconst IOSSlider = withStyles({\r\n  root: {\r\n    color: '#3880ff',\r\n    height: 2,\r\n    padding: '15px 0',\r\n  },\r\n  thumb: {\r\n    height: 28,\r\n    width: 28,\r\n    backgroundColor: '#fff',\r\n    boxShadow: iOSBoxShadow,\r\n    marginTop: -14,\r\n    marginLeft: -14,\r\n    '&:focus,&:hover,&$active': {\r\n      boxShadow: '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.3),0 0 0 1px rgba(0,0,0,0.02)',\r\n      // Reset on touch devices, it doesn't add specificity\r\n      '@media (hover: none)': {\r\n        boxShadow: iOSBoxShadow,\r\n      },\r\n    },\r\n  },\r\n  active: {},\r\n  valueLabel: {\r\n    left: 'calc(-50% + 11px)',\r\n    top: -22,\r\n    '& *': {\r\n      background: 'transparent',\r\n      color: '#000',\r\n    },\r\n  },\r\n  track: {\r\n    height: 2,\r\n  },\r\n  rail: {\r\n    height: 2,\r\n    opacity: 0.5,\r\n    backgroundColor: '#bfbfbf',\r\n  },\r\n  mark: {\r\n    backgroundColor: '#bfbfbf',\r\n    height: 8,\r\n    width: 1,\r\n    marginTop: -3,\r\n  },\r\n  markActive: {\r\n    backgroundColor: 'currentColor',\r\n  },\r\n})(Slider);\r\n\r\nconst PrettoSlider = withStyles({\r\n  root: {\r\n    color: '#52af77',\r\n    height: 8,\r\n  },\r\n  thumb: {\r\n    height: 24,\r\n    width: 24,\r\n    backgroundColor: '#fff',\r\n    border: '2px solid currentColor',\r\n    marginTop: -8,\r\n    marginLeft: -12,\r\n    '&:focus,&:hover,&$active': {\r\n      boxShadow: 'inherit',\r\n    },\r\n  },\r\n  active: {},\r\n  valueLabel: {\r\n    left: 'calc(-50% + 4px)',\r\n  },\r\n  track: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n  rail: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n})(Slider);\r\n\r\nconst AirbnbSlider = withStyles({\r\n  root: {\r\n    color: '#3a8589',\r\n    height: 3,\r\n    padding: '13px 0',\r\n  },\r\n  thumb: {\r\n    height: 27,\r\n    width: 27,\r\n    backgroundColor: '#fff',\r\n    border: '1px solid currentColor',\r\n    marginTop: -12,\r\n    marginLeft: -13,\r\n    boxShadow: '#ebebeb 0px 2px 2px',\r\n    '&:focus,&:hover,&$active': {\r\n      boxShadow: '#ccc 0px 2px 3px 1px',\r\n    },\r\n    '& .bar': {\r\n      // display: inline-block !important;\r\n      height: 9,\r\n      width: 1,\r\n      backgroundColor: 'currentColor',\r\n      marginLeft: 1,\r\n      marginRight: 1,\r\n    },\r\n  },\r\n  active: {},\r\n  valueLabel: {\r\n    left: 'calc(-50% + 4px)',\r\n  },\r\n  track: {\r\n    height: 3,\r\n  },\r\n  rail: {\r\n    color: '#d8d8d8',\r\n    opacity: 1,\r\n    height: 3,\r\n  },\r\n})(Slider);\r\n\r\nfunction AirbnbThumbComponent(props) {\r\n  return (\r\n    <span {...props}>\r\n      <span className=\"bar\" />\r\n      <span className=\"bar\" />\r\n      <span className=\"bar\" />\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default function CustomizedSlider() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Typography gutterBottom>iOS</Typography>\r\n      <IOSSlider aria-label=\"iOS slider\" defaultValue={60} marks={marks} valueLabelDisplay=\"on\" />\r\n      <div className={classes.margin} />\r\n      <Typography gutterBottom>pretto.fr</Typography>\r\n      <PrettoSlider valueLabelDisplay=\"auto\" aria-label=\"Pretto slider\" defaultValue={20} />\r\n      <div className={classes.margin} />\r\n      <Typography gutterBottom>Tooltip value label</Typography>\r\n      <Slider\r\n        ValueLabelComponent={ValueLabelComponent}\r\n        aria-label=\"Custom thumb label\"\r\n        defaultValue={20}\r\n      />\r\n      <div className={classes.margin} />\r\n      <Typography gutterBottom>Airbnb</Typography>\r\n      <AirbnbSlider\r\n        ThumbComponent={AirbnbThumbComponent}\r\n        aria-label=\"Airbnb slider\"\r\n        defaultValue={[20, 40]}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n`;\r\nconst jsCode5 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/lab/Slider';\r\nimport Input from '@material-ui/core/Input';\r\nimport VolumeUp from '@material-ui/icons/VolumeUp';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 250,\r\n  },\r\n  input: {\r\n    width: 42,\r\n  },\r\n});\r\n\r\nexport default function InputSlider() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(30);\r\n\r\n  const handleSliderChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleInputChange = event => {\r\n    setValue(event.target.value === '' ? '' : Number(event.target.value));\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    if (value < 0) {\r\n      setValue(0);\r\n    } else if (value > 100) {\r\n      setValue(100);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography id=\"input-slider\" gutterBottom>\r\n        Volume\r\n      </Typography>\r\n      <Grid container spacing={2} alignItems=\"center\">\r\n        <Grid item>\r\n          <VolumeUp />\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Slider\r\n            value={typeof value === 'number' ? value : 0}\r\n            onChange={handleSliderChange}\r\n            aria-labelledby=\"input-slider\"\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <Input\r\n            className={classes.input}\r\n            value={value}\r\n            margin=\"dense\"\r\n            onChange={handleInputChange}\r\n            onBlur={handleBlur}\r\n            inputProps={{\r\n              step: 10,\r\n              min: 0,\r\n              max: 100,\r\n              type: 'number',\r\n              'aria-labelledby': 'input-slider',\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode6 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/lab/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    height: 300,\r\n  },\r\n});\r\n\r\nfunction valuetext(value) {\r\n  return \\`\\${value}°C\\`;\r\n}\r\n\r\nconst marks = [\r\n  {\r\n    value: 0,\r\n    label: '0°C',\r\n  },\r\n  {\r\n    value: 20,\r\n    label: '20°C',\r\n  },\r\n  {\r\n    value: 37,\r\n    label: '37°C',\r\n  },\r\n  {\r\n    value: 100,\r\n    label: '100°C',\r\n  },\r\n];\r\n\r\nexport default function VerticalSlider() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Typography id=\"vertical-slider\" gutterBottom>\r\n        Temperature\r\n      </Typography>\r\n      <div className={classes.root}>\r\n        <Slider\r\n          orientation=\"vertical\"\r\n          getAriaValueText={valuetext}\r\n          defaultValue={30}\r\n          aria-labelledby=\"vertical-slider\"\r\n        />\r\n        <Slider\r\n          disabled\r\n          orientation=\"vertical\"\r\n          getAriaValueText={valuetext}\r\n          defaultValue={30}\r\n          aria-labelledby=\"vertical-slider\"\r\n        />\r\n        <Slider\r\n          orientation=\"vertical\"\r\n          defaultValue={[20, 37]}\r\n          aria-labelledby=\"vertical-slider\"\r\n          getAriaValueText={valuetext}\r\n          marks={marks}\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n`;\r\n","/* eslint-disable no-restricted-imports */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport {\r\n  Radio,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Switch,\r\n  FormLabel\r\n} from \"@material-ui/core\";\r\nimport FileCopyIcon from \"@material-ui/icons/FileCopyOutlined\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\r\nimport SpeedDialIcon from \"@material-ui/lab/SpeedDialIcon\";\r\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\r\nimport {capitalize} from \"@material-ui/core/utils\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n// Example 1\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  controls: {\r\n    margin: theme.spacing(3)\r\n  },\r\n  exampleWrapper: {\r\n    position: \"relative\",\r\n    height: 380\r\n  },\r\n  radioGroup: {\r\n    margin: theme.spacing(1, 0)\r\n  },\r\n  speedDial: {\r\n    position: \"absolute\",\r\n    \"&$directionUp, &$directionLeft\": {\r\n      bottom: theme.spacing(2),\r\n      right: theme.spacing(3)\r\n    },\r\n    \"&$directionDown, &$directionRight\": {\r\n      top: theme.spacing(2),\r\n      left: theme.spacing(3)\r\n    }\r\n  },\r\n  directionUp: {},\r\n  directionRight: {},\r\n  directionDown: {},\r\n  directionLeft: {}\r\n});\r\n\r\nconst actions = [\r\n  { icon: <FileCopyIcon />, name: \"Copy\" },\r\n  { icon: <SaveIcon />, name: \"Save\" },\r\n  { icon: <PrintIcon />, name: \"Print\" },\r\n  { icon: <ShareIcon />, name: \"Share\" },\r\n  { icon: <DeleteIcon />, name: \"Delete\" }\r\n];\r\n\r\nfunction SpeedDialExamplesPage(props) {\r\n  // Example 1\r\n  const state = {\r\n    direction1: \"up\",\r\n    open1: false,\r\n    hidden: false\r\n  };\r\n\r\n  const handleClick = () => {\r\n    this.setState(state => ({\r\n      open1: !state.open1\r\n    }));\r\n  };\r\n\r\n  const handleDirectionChange1 = (event, value) => {\r\n    this.setState({\r\n      direction1: value\r\n    });\r\n  };\r\n\r\n  const handleHiddenChange1 = (event, hidden) => {\r\n    this.setState(state => ({\r\n      hidden: hidden,\r\n      // hidden implies !open\r\n      open1: hidden ? false : state.open1\r\n    }));\r\n  };\r\n\r\n  const handleClose = () => {\r\n    this.setState({ open1: false });\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    this.setState({ open1: true });\r\n  };\r\n\r\n  const { classes } = props;\r\n  const { direction1, hidden, open1 } = state;\r\n\r\n  const speedDialClassName1 = clsx(\r\n    classes.speedDial,\r\n    classes[`direction${capitalize(direction1)}`]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>When pressed, a floating action button can display three to six related\r\n        actions in the form of a speed dial.</span>{\" \"}\r\n        For more info please check the components's official{\" \"}\r\n        <a\r\n          target=\"_blank\"\r\n          className=\"font-weight-bold\"\r\n          rel=\"noopener noreferrer\"\r\n          href=\"\"\r\n        >\r\n          demos & documentation\r\n        </a>\r\n      </Notice>\r\n\r\n      <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Simple Speed Dial\">\r\n        <div className=\"section\">\r\n          <span className=\"section-sub\">\r\n            The floating action button can display related actions.\r\n          </span>\r\n          <div className=\"separator separator-dashed my-7\"></div>\r\n          <div className=\"section-content\">\r\n            <div className={classes.root}>\r\n              <div className={classes.controls}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Switch\r\n                      checked={hidden}\r\n                      onChange={handleHiddenChange1}\r\n                      value=\"hidden\"\r\n                      color=\"primary\"\r\n                    />\r\n                  }\r\n                  label=\"Hidden\"\r\n                />\r\n                <FormLabel component=\"legend\">Direction</FormLabel>\r\n                <RadioGroup\r\n                  aria-label=\"Direction\"\r\n                  name=\"direction\"\r\n                  className={classes.radioGroup}\r\n                  value={direction1}\r\n                  onChange={handleDirectionChange1}\r\n                  row\r\n                >\r\n                  <FormControlLabel value=\"up\" control={<Radio />} label=\"Up\" />\r\n                  <FormControlLabel\r\n                    value=\"right\"\r\n                    control={<Radio />}\r\n                    label=\"Right\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"down\"\r\n                    control={<Radio />}\r\n                    label=\"Down\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"left\"\r\n                    control={<Radio />}\r\n                    label=\"Left\"\r\n                  />\r\n                </RadioGroup>\r\n              </div>\r\n              <div className={classes.exampleWrapper}>\r\n                <SpeedDial\r\n                  ariaLabel=\"SpeedDial example\"\r\n                  className={speedDialClassName1}\r\n                  hidden={hidden}\r\n                  icon={<SpeedDialIcon />}\r\n                  onBlur={handleClose}\r\n                  onClick={handleClick}\r\n                  onClose={handleClose}\r\n                  onFocus={handleOpen}\r\n                  onMouseEnter={handleOpen}\r\n                  onMouseLeave={handleClose}\r\n                  open={open1}\r\n                  direction={direction1}\r\n                >\r\n                  {actions.map(action => (\r\n                    <SpeedDialAction\r\n                      key={action.name}\r\n                      icon={action.icon}\r\n                      tooltipTitle={action.name}\r\n                      onClick={handleClick}\r\n                    />\r\n                  ))}\r\n                </SpeedDial>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </KTCodeExample>\r\n\r\n      <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"Custom close icon\">\r\n        <div className=\"section\">\r\n          <span className=\"section-sub\">\r\n            You can provide an alternate icon for the closed and open states\r\n            using the <code>icon</code> and <code>openIcon</code> props of the{\" \"}\r\n            <code>SpeedDialIcon</code> component.\r\n          </span>\r\n        </div>\r\n        <div className=\"section\"></div>\r\n      </KTCodeExample>\r\n\r\n      <KTCodeExample\r\n        jsCode={jsCode3}\r\n        beforeCodeTitle=\"Persistent action tooltips\"\r\n      >\r\n        <div className=\"section\">\r\n          <span className=\"section-sub\">\r\n            The SpeedDialActions tooltips can be be displayed persistently so\r\n            that users don't have to long-press in order to see the tooltip on\r\n            touch devices.\r\n          </span>\r\n          <p className=\"section-sub\">\r\n            It is enabled here across all devices for demo purposes, but in\r\n            production it could use the <code>isTouch</code> logic to\r\n            conditionally set the property.\r\n          </p>\r\n        </div>\r\n        <div className=\"section\"></div>\r\n      </KTCodeExample>\r\n    </>\r\n  );\r\n}\r\n\r\nSpeedDialExamplesPage.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\nexport default withStyles(styles)(SpeedDialExamplesPage);\r\n\r\nconst jsCode1 = `\r\nimport clsx from 'clsx';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { capitalize } from '@material-ui/core/utils';\r\nimport SpeedDial from '@material-ui/lab/SpeedDial';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopyOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  controls: {\r\n    margin: theme.spacing(3),\r\n  },\r\n  exampleWrapper: {\r\n    position: 'relative',\r\n    height: 380,\r\n  },\r\n  radioGroup: {\r\n    margin: theme.spacing(1, 0),\r\n  },\r\n  speedDial: {\r\n    position: 'absolute',\r\n    '&$directionUp, &$directionLeft': {\r\n      bottom: theme.spacing(2),\r\n      right: theme.spacing(3),\r\n    },\r\n    '&$directionDown, &$directionRight': {\r\n      top: theme.spacing(2),\r\n      left: theme.spacing(3),\r\n    },\r\n  },\r\n  directionUp: {},\r\n  directionRight: {},\r\n  directionDown: {},\r\n  directionLeft: {},\r\n});\r\n\r\nconst actions = [\r\n  { icon: <FileCopyIcon />, name: 'Copy' },\r\n  { icon: <SaveIcon />, name: 'Save' },\r\n  { icon: <PrintIcon />, name: 'Print' },\r\n  { icon: <ShareIcon />, name: 'Share' },\r\n  { icon: <DeleteIcon />, name: 'Delete' },\r\n];\r\n\r\nclass SpeedDials extends React.Component {\r\n  state = {\r\n    direction: 'up',\r\n    open: false,\r\n    hidden: false,\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.setState(state => ({\r\n      open: !state.open,\r\n    }));\r\n  };\r\n\r\n  handleDirectionChange = (event, value) => {\r\n    this.setState({\r\n      direction: value,\r\n    });\r\n  };\r\n\r\n  handleHiddenChange = (event, hidden) => {\r\n    this.setState(state => ({\r\n      hidden,\r\n      // hidden implies !open\r\n      open: hidden ? false : state.open,\r\n    }));\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  handleOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { direction, hidden, open } = this.state;\r\n\r\n    const speedDialClassName = clsx(\r\n      classes.speedDial,\r\n      classes[\\`direction\\${capitalize(direction)}\\`],\r\n    );\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <div className={classes.controls}>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={hidden}\r\n                onChange={this.handleHiddenChange}\r\n                value=\"hidden\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Hidden\"\r\n          />\r\n          <FormLabel component=\"legend\">Direction</FormLabel>\r\n          <RadioGroup\r\n            aria-label=\"Direction\"\r\n            name=\"direction\"\r\n            className={classes.radioGroup}\r\n            value={direction}\r\n            onChange={this.handleDirectionChange}\r\n            row\r\n          >\r\n            <FormControlLabel value=\"up\" control={<Radio />} label=\"Up\" />\r\n            <FormControlLabel value=\"right\" control={<Radio />} label=\"Right\" />\r\n            <FormControlLabel value=\"down\" control={<Radio />} label=\"Down\" />\r\n            <FormControlLabel value=\"left\" control={<Radio />} label=\"Left\" />\r\n          </RadioGroup>\r\n        </div>\r\n        <div className={classes.exampleWrapper}>\r\n          <SpeedDial\r\n            ariaLabel=\"SpeedDial example\"\r\n            className={speedDialClassName}\r\n            hidden={hidden}\r\n            icon={<SpeedDialIcon />}\r\n            onBlur={this.handleClose}\r\n            onClick={this.handleClick}\r\n            onClose={this.handleClose}\r\n            onFocus={this.handleOpen}\r\n            onMouseEnter={this.handleOpen}\r\n            onMouseLeave={this.handleClose}\r\n            open={open}\r\n            direction={direction}\r\n          >\r\n            {actions.map(action => (\r\n              <SpeedDialAction\r\n                key={action.name}\r\n                icon={action.icon}\r\n                tooltipTitle={action.name}\r\n                onClick={this.handleClick}\r\n              />\r\n            ))}\r\n          </SpeedDial>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSpeedDials.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SpeedDials);\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport SpeedDial from '@material-ui/lab/SpeedDial';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopyOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    height: 380,\r\n  },\r\n  speedDial: {\r\n    position: 'absolute',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(3),\r\n  },\r\n});\r\n\r\nconst actions = [\r\n  { icon: <FileCopyIcon />, name: 'Copy' },\r\n  { icon: <SaveIcon />, name: 'Save' },\r\n  { icon: <PrintIcon />, name: 'Print' },\r\n  { icon: <ShareIcon />, name: 'Share' },\r\n  { icon: <DeleteIcon />, name: 'Delete' },\r\n];\r\n\r\nclass OpenIconSpeedDial extends React.Component {\r\n  state = {\r\n    open: false,\r\n    hidden: false,\r\n  };\r\n\r\n  handleVisibility = () => {\r\n    this.setState(state => ({\r\n      open: false,\r\n      hidden: !state.hidden,\r\n    }));\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.setState(state => ({\r\n      open: !state.open,\r\n    }));\r\n  };\r\n\r\n  handleOpen = () => {\r\n    if (!this.state.hidden) {\r\n      this.setState({\r\n        open: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      open: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { hidden, open } = this.state;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Button onClick={this.handleVisibility}>Toggle Speed Dial</Button>\r\n        <SpeedDial\r\n          ariaLabel=\"SpeedDial openIcon example\"\r\n          className={classes.speedDial}\r\n          hidden={hidden}\r\n          icon={<SpeedDialIcon openIcon={<EditIcon />} />}\r\n          onBlur={this.handleClose}\r\n          onClick={this.handleClick}\r\n          onClose={this.handleClose}\r\n          onFocus={this.handleOpen}\r\n          onMouseEnter={this.handleOpen}\r\n          onMouseLeave={this.handleClose}\r\n          open={open}\r\n        >\r\n          {actions.map(action => (\r\n            <SpeedDialAction\r\n              key={action.name}\r\n              icon={action.icon}\r\n              tooltipTitle={action.name}\r\n              onClick={this.handleClick}\r\n            />\r\n          ))}\r\n        </SpeedDial>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nOpenIconSpeedDial.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(OpenIconSpeedDial);\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport SpeedDial from '@material-ui/lab/SpeedDial';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopyOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    height: 380,\r\n  },\r\n  speedDial: {\r\n    position: 'absolute',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(3),\r\n  },\r\n});\r\n\r\nconst actions = [\r\n  { icon: <FileCopyIcon />, name: 'Copy' },\r\n  { icon: <SaveIcon />, name: 'Save' },\r\n  { icon: <PrintIcon />, name: 'Print' },\r\n  { icon: <ShareIcon />, name: 'Share' },\r\n  { icon: <DeleteIcon />, name: 'Delete' },\r\n];\r\n\r\nclass SpeedDialTooltipOpen extends React.Component {\r\n  state = {\r\n    open: false,\r\n    hidden: false,\r\n  };\r\n\r\n  handleVisibility = () => {\r\n    this.setState(state => ({\r\n      open: false,\r\n      hidden: !state.hidden,\r\n    }));\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.setState(state => ({\r\n      open: !state.open,\r\n    }));\r\n  };\r\n\r\n  handleOpen = () => {\r\n    if (!this.state.hidden) {\r\n      this.setState({\r\n        open: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      open: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { hidden, open } = this.state;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Button onClick={this.handleVisibility}>Toggle Speed Dial</Button>\r\n        <SpeedDial\r\n          ariaLabel=\"SpeedDial tooltip example\"\r\n          className={classes.speedDial}\r\n          hidden={hidden}\r\n          icon={<SpeedDialIcon />}\r\n          onBlur={this.handleClose}\r\n          onClick={this.handleClick}\r\n          onClose={this.handleClose}\r\n          onFocus={this.handleOpen}\r\n          onMouseEnter={this.handleOpen}\r\n          onMouseLeave={this.handleClose}\r\n          open={open}\r\n        >\r\n          {actions.map(action => (\r\n            <SpeedDialAction\r\n              key={action.name}\r\n              icon={action.icon}\r\n              tooltipTitle={action.name}\r\n              tooltipOpen\r\n              onClick={this.handleClick}\r\n            />\r\n          ))}\r\n        </SpeedDial>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSpeedDialTooltipOpen.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SpeedDialTooltipOpen);\r\n`;\r\n","/* eslint-disable no-restricted-imports */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Grid, Typography} from \"@material-ui/core\";\r\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\r\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\r\nimport FormatAlignLeftIcon from \"@material-ui/icons/FormatAlignLeft\";\r\nimport FormatAlignCenterIcon from \"@material-ui/icons/FormatAlignCenter\";\r\nimport FormatAlignRightIcon from \"@material-ui/icons/FormatAlignRight\";\r\nimport FormatAlignJustifyIcon from \"@material-ui/icons/FormatAlignJustify\";\r\nimport FormatBoldIcon from \"@material-ui/icons/FormatBold\";\r\nimport FormatItalicIcon from \"@material-ui/icons/FormatItalic\";\r\nimport FormatUnderlinedIcon from \"@material-ui/icons/FormatUnderlined\";\r\nimport FormatColorFillIcon from \"@material-ui/icons/FormatColorFill\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n// Example 1\r\nconst useStyles1 = makeStyles(theme => ({\r\n  toggleContainer: {\r\n    margin: theme.spacing(2, 0)\r\n  }\r\n}));\r\n\r\nexport default function ToggleButtonExamplesPage() {\r\n  // Example 1\r\n  const [alignment1, setAlignment1] = React.useState(\"left\");\r\n  const [formats1, setFormats1] = React.useState(() => [\"bold\"]);\r\n\r\n  const handleFormat1 = (event, newFormats) => {\r\n    setFormats1(newFormats);\r\n  };\r\n\r\n  const handleAlignment1 = (event, newAlignment) => {\r\n    setAlignment1(newAlignment);\r\n  };\r\n\r\n  const classes1 = useStyles1();\r\n\r\n  // Example 2\r\n  const [alignment2, setAlignment2] = React.useState(\"left\");\r\n\r\n  const handleChange2 = (event, newAlignment) => {\r\n    setAlignment2(newAlignment);\r\n  };\r\n\r\n  const children2 = [\r\n    <ToggleButton key={1} value=\"left\">\r\n      <FormatAlignLeftIcon />\r\n    </ToggleButton>,\r\n    <ToggleButton key={2} value=\"center\">\r\n      <FormatAlignCenterIcon />\r\n    </ToggleButton>,\r\n    <ToggleButton key={3} value=\"right\">\r\n      <FormatAlignRightIcon />\r\n    </ToggleButton>,\r\n    <ToggleButton key={4} value=\"justify\" disabled>\r\n      <FormatAlignJustifyIcon />\r\n    </ToggleButton>\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>Toggle buttons can be used to group related options.</span> For\r\n        more info please check the components's official{\" \"}\r\n        <a\r\n          target=\"_blank\"\r\n          className=\"font-weight-bold\"\r\n          rel=\"noopener noreferrer\"\r\n          href=\"\"\r\n        >\r\n          demos & documentation\r\n        </a>\r\n      </Notice>\r\n\r\n      <Notice className=\"notice__paragraph\"></Notice>\r\n\r\n      <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Toggle Buttons\">\r\n        <div className=\"section\">\r\n          <span className=\"section-sub\">\r\n            To emphasize groups of related Toggle buttons, a group should share\r\n            a common container.\r\n          </span>\r\n          <p className=\"section-sub\">\r\n            The <code>ToggleButtonGroup</code> will control the selected of its\r\n            child buttons when given its own <code>value</code> prop.\r\n          </p>\r\n          <div className=\"separator separator-dashed my-7\"></div>\r\n          <div className=\"section-content\">\r\n            <Grid container spacing={2}>\r\n              <Grid item sm={12} md={6}>\r\n                <div className={classes1.toggleContainer}>\r\n                  <ToggleButtonGroup\r\n                    value={alignment1}\r\n                    exclusive\r\n                    onChange={handleAlignment1}\r\n                  >\r\n                    <ToggleButton value=\"left\">\r\n                      <FormatAlignLeftIcon />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"center\">\r\n                      <FormatAlignCenterIcon />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"right\">\r\n                      <FormatAlignRightIcon />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"justify\" disabled>\r\n                      <FormatAlignJustifyIcon />\r\n                    </ToggleButton>\r\n                  </ToggleButtonGroup>\r\n                </div>\r\n                <Typography gutterBottom>Exclusive Selection</Typography>\r\n                <Typography>\r\n                  Text justification toggle buttons present options for left,\r\n                  right, center, full, and justified text with only one item\r\n                  available for selection at a time. Selecting one option\r\n                  deselects any other.\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item sm={12} md={6}>\r\n                <div className={classes1.toggleContainer}>\r\n                  <ToggleButtonGroup value={formats1} onChange={handleFormat1}>\r\n                    <ToggleButton value=\"bold\">\r\n                      <FormatBoldIcon />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"italic\">\r\n                      <FormatItalicIcon />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"underlined\">\r\n                      <FormatUnderlinedIcon />\r\n                    </ToggleButton>\r\n                    <ToggleButton disabled value=\"color\">\r\n                      <FormatColorFillIcon />\r\n                      <ArrowDropDownIcon />\r\n                    </ToggleButton>\r\n                  </ToggleButtonGroup>\r\n                </div>\r\n                <Typography gutterBottom>Multiple Selection</Typography>\r\n                <Typography>\r\n                  Logically-grouped options, like Bold, Italic, and Underline,\r\n                  allow multiple options to be selected.\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </div>\r\n      </KTCodeExample>\r\n\r\n      <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"Sizes\">\r\n        <div className=\"section\">\r\n          <span className=\"section-sub\">\r\n            Fancy larger or smaller buttons? Use the <code>size</code> property.\r\n          </span>\r\n          <div className=\"separator separator-dashed my-7\"></div>\r\n          <div className=\"section-content\">\r\n            <Grid container spacing={2} direction=\"column\" alignItems=\"center\">\r\n              <Grid item>\r\n                <ToggleButtonGroup\r\n                  size=\"small\"\r\n                  value={alignment2}\r\n                  exclusive\r\n                  onChange={handleChange2}\r\n                >\r\n                  {children2}\r\n                </ToggleButtonGroup>\r\n              </Grid>\r\n              <Grid item>\r\n                <ToggleButtonGroup\r\n                  size=\"medium\"\r\n                  value={alignment2}\r\n                  exclusive\r\n                  onChange={handleChange2}\r\n                >\r\n                  {children2}\r\n                </ToggleButtonGroup>\r\n              </Grid>\r\n              <Grid item>\r\n                <ToggleButtonGroup\r\n                  size=\"large\"\r\n                  value={alignment2}\r\n                  exclusive\r\n                  onChange={handleChange2}\r\n                >\r\n                  {children2}\r\n                </ToggleButtonGroup>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </div>\r\n      </KTCodeExample>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\r\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\r\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\r\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\r\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\r\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\r\nimport FormatUnderlinedIcon from '@material-ui/icons/FormatUnderlined';\r\nimport FormatColorFillIcon from '@material-ui/icons/FormatColorFill';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  toggleContainer: {\r\n    margin: theme.spacing(2, 0),\r\n  },\r\n}));\r\n\r\nexport default function ToggleButtons() {\r\n  const [alignment, setAlignment] = React.useState('left');\r\n  const [formats, setFormats] = React.useState(() => ['bold']);\r\n\r\n  const handleFormat = (event, newFormats) => {\r\n    setFormats(newFormats);\r\n  };\r\n\r\n  const handleAlignment = (event, newAlignment) => {\r\n    setAlignment(newAlignment);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item sm={12} md={6}>\r\n        <div className={classes.toggleContainer}>\r\n          <ToggleButtonGroup value={alignment} exclusive onChange={handleAlignment}>\r\n            <ToggleButton value=\"left\">\r\n              <FormatAlignLeftIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"center\">\r\n              <FormatAlignCenterIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"right\">\r\n              <FormatAlignRightIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"justify\" disabled>\r\n              <FormatAlignJustifyIcon />\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </div>\r\n        <Typography gutterBottom>Exclusive Selection</Typography>\r\n        <Typography>\r\n          Text justification toggle buttons present options for left, right, center, full, and\r\n          justified text with only one item available for selection at a time. Selecting one option\r\n          deselects any other.\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item sm={12} md={6}>\r\n        <div className={classes.toggleContainer}>\r\n          <ToggleButtonGroup value={formats} onChange={handleFormat}>\r\n            <ToggleButton value=\"bold\">\r\n              <FormatBoldIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"italic\">\r\n              <FormatItalicIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"underlined\">\r\n              <FormatUnderlinedIcon />\r\n            </ToggleButton>\r\n            <ToggleButton disabled value=\"color\">\r\n              <FormatColorFillIcon />\r\n              <ArrowDropDownIcon />\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </div>\r\n        <Typography gutterBottom>Multiple Selection</Typography>\r\n        <Typography>\r\n          Logically-grouped options, like Bold, Italic, and Underline, allow multiple options to be\r\n          selected.\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\r\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\r\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\r\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\n\r\nexport default function ToggleButtonSizes() {\r\n  const [alignment, setAlignment] = React.useState('left');\r\n\r\n  const handleChange = (event, newAlignment) => {\r\n    setAlignment(newAlignment);\r\n  };\r\n\r\n  const children = [\r\n    <ToggleButton key={1} value=\"left\">\r\n      <FormatAlignLeftIcon />\r\n    </ToggleButton>,\r\n    <ToggleButton key={2} value=\"center\">\r\n      <FormatAlignCenterIcon />\r\n    </ToggleButton>,\r\n    <ToggleButton key={3} value=\"right\">\r\n      <FormatAlignRightIcon />\r\n    </ToggleButton>,\r\n    <ToggleButton key={4} value=\"justify\" disabled>\r\n      <FormatAlignJustifyIcon />\r\n    </ToggleButton>,\r\n  ];\r\n\r\n  return (\r\n    <Grid container spacing={2} direction=\"column\" alignItems=\"center\">\r\n      <Grid item>\r\n        <ToggleButtonGroup size=\"small\" value={alignment} exclusive onChange={handleChange}>\r\n          {children}\r\n        </ToggleButtonGroup>\r\n      </Grid>\r\n      <Grid item>\r\n        <ToggleButtonGroup size=\"medium\" value={alignment} exclusive onChange={handleChange}>\r\n          {children}\r\n        </ToggleButtonGroup>\r\n      </Grid>\r\n      <Grid item>\r\n        <ToggleButtonGroup size=\"large\" value={alignment} exclusive onChange={handleChange}>\r\n          {children}\r\n        </ToggleButtonGroup>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n`;\r\n","import React from \"react\";\r\nimport { Redirect, Switch } from \"react-router-dom\";\r\nimport { ContentRoute } from \"../../../../_metronic/layout\";\r\nimport SliderExamplesPage from \"./SliderExamplesPage\";\r\nimport SpeedDialExamplesPage from \"./SpeedDialExamplesPage\";\r\nimport ToggleButtonExamplesPage from \"./ToggleButtonExamplesPage\";\r\n\r\nexport function LabsPage() {\r\n  return (\r\n    <Switch>\r\n      <Redirect\r\n        exact={true}\r\n        from=\"/google-material/labs\"\r\n        to=\"/google-material/labs/labs\"\r\n      />\r\n\r\n      <ContentRoute\r\n        path=\"/google-material/labs/slider\"\r\n        component={SliderExamplesPage}\r\n      />\r\n      <ContentRoute\r\n        path=\"/google-material/labs/speed-dial\"\r\n        component={SpeedDialExamplesPage}\r\n      />\r\n      <ContentRoute\r\n        path=\"/google-material/labs/toggle-button\"\r\n        component={ToggleButtonExamplesPage}\r\n      />\r\n    </Switch>\r\n  );\r\n}\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport {makeStyles, emphasize, withStyles} from \"@material-ui/core/styles\";\r\nimport {\r\n  Paper,\r\n  Breadcrumbs,\r\n  Link,\r\n  Typography,\r\n  Chip,\r\n  Avatar\r\n} from \"@material-ui/core\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport WhatshotIcon from \"@material-ui/icons/Whatshot\";\r\nimport GrainIcon from \"@material-ui/icons/Grain\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n// Example1\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    justifyContent: \"center\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1, 2)\r\n  }\r\n}));\r\n\r\nfunction handleClick1(event) {\r\n  event.preventDefault();\r\n  alert(\"You clicked a breadcrumb.\");\r\n}\r\n\r\n// Example 2\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    justifyContent: \"center\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1, 2)\r\n  }\r\n}));\r\n\r\nfunction handleClick2(event) {\r\n  event.preventDefault();\r\n  alert(\"You clicked a breadcrumb.\");\r\n}\r\n\r\n// Example 3\r\nconst useStyles3 = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(1, 2)\r\n  },\r\n  link: {\r\n    display: \"flex\"\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20\r\n  }\r\n}));\r\n\r\nfunction handleClick3(event) {\r\n  event.preventDefault();\r\n  alert(\"You clicked a breadcrumb.\");\r\n}\r\n\r\n// Example 4\r\nconst useStyles4 = makeStyles(theme => ({\r\n  root: {\r\n    justifyContent: \"center\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1, 2)\r\n  }\r\n}));\r\n\r\nfunction handleClick4(event) {\r\n  event.preventDefault();\r\n  alert(\"You clicked a breadcrumb.\");\r\n}\r\n\r\n// Example 5\r\nconst StyledBreadcrumb = withStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.grey[100],\r\n    height: 24,\r\n    color: theme.palette.grey[800],\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    \"&:hover, &:focus\": {\r\n      backgroundColor: theme.palette.grey[300]\r\n    },\r\n    \"&:active\": {\r\n      boxShadow: theme.shadows[1],\r\n      backgroundColor: emphasize(theme.palette.grey[300], 0.12)\r\n    }\r\n  }\r\n}))(Chip); // TypeScript only: need a type cast here because https://github.com/Microsoft/TypeScript/issues/26591\r\n\r\nfunction handleClick5(event) {\r\n  event.preventDefault();\r\n  alert(\"You clicked a breadcrumb.\");\r\n}\r\n\r\nconst useStyles5 = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(1)\r\n  },\r\n  avatar: {\r\n    background: \"none\",\r\n    marginRight: -theme.spacing(1.5)\r\n  }\r\n}));\r\n\r\nexport default function BreadcrumbsExamplesPage() {\r\n  // Example 1\r\n  const classes1 = useStyles1();\r\n\r\n  // Example 2\r\n  const classes2 = useStyles2();\r\n\r\n  // Example 3\r\n  const classes3 = useStyles3();\r\n\r\n  // Example 4\r\n  const classes4 = useStyles4();\r\n\r\n  // Example 5\r\n  const classes5 = useStyles5();\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          Breadcrumbs allow users to make selections from a range of values.\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/breadcrumbs/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode1}\r\n            beforeCodeTitle=\"Simple breadcrumbs\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <div className={classes1.root}>\r\n              <Paper elevation={0} className={classes1.paper}>\r\n                <Breadcrumbs aria-label=\"Breadcrumb\">\r\n                  <Link color=\"inherit\" href=\"/\" onClick={handleClick1}>\r\n                    Material-UI\r\n                  </Link>\r\n                  <Link\r\n                    color=\"inherit\"\r\n                    href=\"/getting-started/installation/\"\r\n                    onClick={handleClick1}\r\n                  >\r\n                    Core\r\n                  </Link>\r\n                  <Typography color=\"textPrimary\">Breadcrumb</Typography>\r\n                </Breadcrumbs>\r\n              </Paper>\r\n              <br />\r\n              <Paper elevation={0} className={classes1.paper}>\r\n                <Breadcrumbs aria-label=\"Breadcrumb\">\r\n                  <Link color=\"inherit\" href=\"/\" onClick={handleClick1}>\r\n                    Material-UI\r\n                  </Link>\r\n                  <Link\r\n                    color=\"inherit\"\r\n                    href=\"/getting-started/installation/\"\r\n                    onClick={handleClick1}\r\n                  >\r\n                    Core\r\n                  </Link>\r\n                  <Link\r\n                    color=\"textPrimary\"\r\n                    href=\"/components/breadcrumbs/\"\r\n                    onClick={handleClick1}\r\n                    aria-current=\"page\"\r\n                  >\r\n                    Breadcrumb\r\n                  </Link>\r\n                </Breadcrumbs>\r\n              </Paper>\r\n            </div>\r\n          </KTCodeExample>\r\n          <KTCodeExample\r\n            jsCode={jsCode3}\r\n            beforeCodeTitle=\"Breadcrumbs with icons\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <Paper elevation={0} className={classes3.root}>\r\n              <Breadcrumbs aria-label=\"Breadcrumb\">\r\n                <Link\r\n                  color=\"inherit\"\r\n                  href=\"/\"\r\n                  onClick={handleClick3}\r\n                  className={classes3.link}\r\n                >\r\n                  <HomeIcon className={classes3.icon} />\r\n                  Material-UI\r\n                </Link>\r\n                <Link\r\n                  color=\"inherit\"\r\n                  href=\"/getting-started/installation/\"\r\n                  onClick={handleClick3}\r\n                  className={classes3.link}\r\n                >\r\n                  <WhatshotIcon className={classes3.icon} />\r\n                  Core\r\n                </Link>\r\n                <Typography color=\"textPrimary\" className={classes3.link}>\r\n                  <GrainIcon className={classes3.icon} />\r\n                  Breadcrumb\r\n                </Typography>\r\n              </Breadcrumbs>\r\n            </Paper>\r\n          </KTCodeExample>\r\n          <KTCodeExample\r\n            jsCode={jsCode5}\r\n            beforeCodeTitle=\"Customized breadcrumbs\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              Here is an example of customizing the component. You can learn\r\n              more about this in the overrides documentation page.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <Paper elevation={0} className={classes5.root}>\r\n              <Breadcrumbs aria-label=\"Breadcrumb\">\r\n                <StyledBreadcrumb\r\n                  component=\"a\"\r\n                  href=\"#\"\r\n                  label=\"Home\"\r\n                  avatar={\r\n                    <Avatar className={classes5.avatar}>\r\n                      <HomeIcon />\r\n                    </Avatar>\r\n                  }\r\n                  onClick={handleClick5}\r\n                />\r\n                <StyledBreadcrumb\r\n                  component=\"a\"\r\n                  href=\"#\"\r\n                  label=\"Catalog\"\r\n                  onClick={handleClick5}\r\n                />\r\n                <StyledBreadcrumb\r\n                  label=\"Accessories\"\r\n                  deleteIcon={<ExpandMoreIcon />}\r\n                  onClick={handleClick5}\r\n                  onDelete={handleClick5}\r\n                />\r\n              </Breadcrumbs>\r\n            </Paper>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode2}\r\n            beforeCodeTitle=\"Custom separator\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              In the following examples, we are using two string separators, and\r\n              an SVG icon.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes2.root}>\r\n              <Paper elevation={0} className={classes2.paper}>\r\n                <Breadcrumbs separator=\"›\" aria-label=\"Breadcrumb\">\r\n                  <Link color=\"inherit\" href=\"/\" onClick={handleClick2}>\r\n                    Material-UI\r\n                  </Link>\r\n                  <Link\r\n                    color=\"inherit\"\r\n                    href=\"/getting-started/installation/\"\r\n                    onClick={handleClick2}\r\n                  >\r\n                    Core\r\n                  </Link>\r\n                  <Typography color=\"textPrimary\">Breadcrumb</Typography>\r\n                </Breadcrumbs>\r\n              </Paper>\r\n              <br />\r\n              <Paper elevation={0} className={classes2.paper}>\r\n                <Breadcrumbs separator=\"-\" aria-label=\"Breadcrumb\">\r\n                  <Link color=\"inherit\" href=\"/\" onClick={handleClick2}>\r\n                    Material-UI\r\n                  </Link>\r\n                  <Link\r\n                    color=\"inherit\"\r\n                    href=\"/getting-started/installation/\"\r\n                    onClick={handleClick2}\r\n                  >\r\n                    Core\r\n                  </Link>\r\n                  <Typography color=\"textPrimary\">Breadcrumb</Typography>\r\n                </Breadcrumbs>\r\n              </Paper>\r\n              <br />\r\n              <Paper elevation={0} className={classes2.paper}>\r\n                <Breadcrumbs\r\n                  separator={<NavigateNextIcon fontSize=\"small\" />}\r\n                  aria-label=\"Breadcrumb\"\r\n                >\r\n                  <Link color=\"inherit\" href=\"/\" onClick={handleClick2}>\r\n                    Material-UI\r\n                  </Link>\r\n                  <Link\r\n                    color=\"inherit\"\r\n                    href=\"/getting-started/installation/\"\r\n                    onClick={handleClick2}\r\n                  >\r\n                    Core\r\n                  </Link>\r\n                  <Typography color=\"textPrimary\">Breadcrumb</Typography>\r\n                </Breadcrumbs>\r\n              </Paper>\r\n            </div>\r\n          </KTCodeExample>\r\n          <KTCodeExample\r\n            jsCode={jsCode4}\r\n            beforeCodeTitle=\"Collapsed breadcrumbs\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <Paper elevation={0} className={classes4.paper}>\r\n              <Breadcrumbs maxItems={2} aria-label=\"Breadcrumb\">\r\n                <Link color=\"inherit\" href=\"#\" onClick={handleClick4}>\r\n                  Home\r\n                </Link>\r\n                <Link color=\"inherit\" href=\"#\" onClick={handleClick4}>\r\n                  Catalog\r\n                </Link>\r\n                <Link color=\"inherit\" href=\"#\" onClick={handleClick4}>\r\n                  Accessories\r\n                </Link>\r\n                <Link color=\"inherit\" href=\"#\" onClick={handleClick4}>\r\n                  New Collection\r\n                </Link>\r\n                <Typography color=\"textPrimary\">Belts</Typography>\r\n              </Breadcrumbs>\r\n            </Paper>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n}));\r\n\r\nfunction handleClick(event) {\r\n  event.preventDefault();\r\n  alert('You clicked a breadcrumb.');\r\n}\r\n\r\nexport default function SimpleBreadcrumbs() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper elevation={0} className={classes.paper}>\r\n        <Breadcrumbs aria-label=\"Breadcrumb\">\r\n          <Link color=\"inherit\" href=\"/\" onClick={handleClick}>\r\n            Material-UI\r\n          </Link>\r\n          <Link color=\"inherit\" href=\"/getting-started/installation/\" onClick={handleClick}>\r\n            Core\r\n          </Link>\r\n          <Typography color=\"textPrimary\">Breadcrumb</Typography>\r\n        </Breadcrumbs>\r\n      </Paper>\r\n      <br />\r\n      <Paper elevation={0} className={classes.paper}>\r\n        <Breadcrumbs aria-label=\"Breadcrumb\">\r\n          <Link color=\"inherit\" href=\"/\" onClick={handleClick}>\r\n            Material-UI\r\n          </Link>\r\n          <Link color=\"inherit\" href=\"/getting-started/installation/\" onClick={handleClick}>\r\n            Core\r\n          </Link>\r\n          <Link\r\n            color=\"textPrimary\"\r\n            href=\"/components/breadcrumbs/\"\r\n            onClick={handleClick}\r\n            aria-current=\"page\"\r\n          >\r\n            Breadcrumb\r\n          </Link>\r\n        </Breadcrumbs>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n}));\r\n\r\nfunction handleClick(event) {\r\n  event.preventDefault();\r\n  alert('You clicked a breadcrumb.');\r\n}\r\n\r\nexport default function CustomSeparator() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper elevation={0} className={classes.paper}>\r\n        <Breadcrumbs separator=\"›\" aria-label=\"Breadcrumb\">\r\n          <Link color=\"inherit\" href=\"/\" onClick={handleClick}>\r\n            Material-UI\r\n          </Link>\r\n          <Link color=\"inherit\" href=\"/getting-started/installation/\" onClick={handleClick}>\r\n            Core\r\n          </Link>\r\n          <Typography color=\"textPrimary\">Breadcrumb</Typography>\r\n        </Breadcrumbs>\r\n      </Paper>\r\n      <br />\r\n      <Paper elevation={0} className={classes.paper}>\r\n        <Breadcrumbs separator=\"-\" aria-label=\"Breadcrumb\">\r\n          <Link color=\"inherit\" href=\"/\" onClick={handleClick}>\r\n            Material-UI\r\n          </Link>\r\n          <Link color=\"inherit\" href=\"/getting-started/installation/\" onClick={handleClick}>\r\n            Core\r\n          </Link>\r\n          <Typography color=\"textPrimary\">Breadcrumb</Typography>\r\n        </Breadcrumbs>\r\n      </Paper>\r\n      <br />\r\n      <Paper elevation={0} className={classes.paper}>\r\n        <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"Breadcrumb\">\r\n          <Link color=\"inherit\" href=\"/\" onClick={handleClick}>\r\n            Material-UI\r\n          </Link>\r\n          <Link color=\"inherit\" href=\"/getting-started/installation/\" onClick={handleClick}>\r\n            Core\r\n          </Link>\r\n          <Typography color=\"textPrimary\">Breadcrumb</Typography>\r\n        </Breadcrumbs>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Link from '@material-ui/core/Link';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\r\nimport GrainIcon from '@material-ui/icons/Grain';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  link: {\r\n    display: 'flex',\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n}));\r\n\r\nfunction handleClick(event) {\r\n  event.preventDefault();\r\n  alert('You clicked a breadcrumb.');\r\n}\r\n\r\nexport default function IconBreadcrumbs() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper elevation={0} className={classes.root}>\r\n      <Breadcrumbs aria-label=\"Breadcrumb\">\r\n        <Link color=\"inherit\" href=\"/\" onClick={handleClick} className={classes.link}>\r\n          <HomeIcon className={classes.icon} />\r\n          Material-UI\r\n        </Link>\r\n        <Link\r\n          color=\"inherit\"\r\n          href=\"/getting-started/installation/\"\r\n          onClick={handleClick}\r\n          className={classes.link}\r\n        >\r\n          <WhatshotIcon className={classes.icon} />\r\n          Core\r\n        </Link>\r\n        <Typography color=\"textPrimary\" className={classes.link}>\r\n          <GrainIcon className={classes.icon} />\r\n          Breadcrumb\r\n        </Typography>\r\n      </Breadcrumbs>\r\n    </Paper>\r\n  );\r\n}\r\n`;\r\nconst jsCode4 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n}));\r\n\r\nfunction handleClick(event) {\r\n  event.preventDefault();\r\n  alert('You clicked a breadcrumb.');\r\n}\r\n\r\nexport default function CollapsedBreadcrumbs() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper elevation={0} className={classes.paper}>\r\n      <Breadcrumbs maxItems={2} aria-label=\"Breadcrumb\">\r\n        <Link color=\"inherit\" href=\"#\" onClick={handleClick}>\r\n          Home\r\n        </Link>\r\n        <Link color=\"inherit\" href=\"#\" onClick={handleClick}>\r\n          Catalog\r\n        </Link>\r\n        <Link color=\"inherit\" href=\"#\" onClick={handleClick}>\r\n          Accessories\r\n        </Link>\r\n        <Link color=\"inherit\" href=\"#\" onClick={handleClick}>\r\n          New Collection\r\n        </Link>\r\n        <Typography color=\"textPrimary\">Belts</Typography>\r\n      </Breadcrumbs>\r\n    </Paper>\r\n  );\r\n}\r\n`;\r\nconst jsCode5 = `\r\nimport React from 'react';\r\nimport { emphasize, withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst StyledBreadcrumb = withStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.grey[100],\r\n    height: 24,\r\n    color: theme.palette.grey[800],\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    '&:hover, &:focus': {\r\n      backgroundColor: theme.palette.grey[300],\r\n    },\r\n    '&:active': {\r\n      boxShadow: theme.shadows[1],\r\n      backgroundColor: emphasize(theme.palette.grey[300], 0.12),\r\n    },\r\n  },\r\n}))(Chip); // TypeScript only: need a type cast here because https://github.com/Microsoft/TypeScript/issues/26591\r\n\r\nfunction handleClick(event) {\r\n  event.preventDefault();\r\n  alert('You clicked a breadcrumb.');\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(1),\r\n  },\r\n  avatar: {\r\n    background: 'none',\r\n    marginRight: -theme.spacing(1.5),\r\n  },\r\n}));\r\n\r\nexport default function CustomizedBreadcrumbs() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper elevation={0} className={classes.root}>\r\n      <Breadcrumbs aria-label=\"Breadcrumb\">\r\n        <StyledBreadcrumb\r\n          component=\"a\"\r\n          href=\"#\"\r\n          label=\"Home\"\r\n          avatar={\r\n            <Avatar className={classes.avatar}>\r\n              <HomeIcon />\r\n            </Avatar>\r\n          }\r\n          onClick={handleClick}\r\n        />\r\n        <StyledBreadcrumb component=\"a\" href=\"#\" label=\"Catalog\" onClick={handleClick} />\r\n        <StyledBreadcrumb\r\n          label=\"Accessories\"\r\n          deleteIcon={<ExpandMoreIcon />}\r\n          onClick={handleClick}\r\n          onDelete={handleClick}\r\n        />\r\n      </Breadcrumbs>\r\n    </Paper>\r\n  );\r\n}\r\n`;\r\nconst jsCode6 = `\r\n/* eslint-disable no-nested-ternary */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport Link from '@material-ui/core/Link';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport { Route, MemoryRouter } from 'react-router';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nconst breadcrumbNameMap = {\r\n  '/inbox': 'Inbox',\r\n  '/inbox/important': 'Important',\r\n  '/trash': 'Trash',\r\n  '/spam': 'Spam',\r\n  '/drafts': 'Drafts',\r\n};\r\n\r\nfunction ListItemLink(props) {\r\n  const { to, open, ...other } = props;\r\n  const primary = breadcrumbNameMap[to];\r\n\r\n  return (\r\n    <li>\r\n      <ListItem button component={RouterLink} to={to} {...other}>\r\n        <ListItemText primary={primary} />\r\n        {open != null ? open ? <ExpandLess /> : <ExpandMore /> : null}\r\n      </ListItem>\r\n    </li>\r\n  );\r\n}\r\n\r\nListItemLink.propTypes = {\r\n  open: PropTypes.bool,\r\n  to: PropTypes.string.isRequired,\r\n};\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: 360,\r\n  },\r\n  lists: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n});\r\n\r\nconst LinkRouter = props => <Link {...props} component={RouterLink} />;\r\n\r\nclass RouterBreadcrumbs extends React.Component {\r\n  state = {\r\n    open: true,\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.setState(state => ({ open: !state.open }));\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <MemoryRouter initialEntries={['/inbox']} initialIndex={0}>\r\n        <div className={classes.root}>\r\n          <KtContentRoute>\r\n            {({ location }) => {\r\n              const pathnames = location.pathname.split('/').filter(x => x);\r\n\r\n              return (\r\n                <Breadcrumbs aria-label=\"Breadcrumb\">\r\n                  <LinkRouter color=\"inherit\" to=\"/\">\r\n                    Home\r\n                  </LinkRouter>\r\n                  {pathnames.map((value, index) => {\r\n                    const last = index === pathnames.length - 1;\r\n                    const to = \\`/\\${pathnames.slice(0, index + 1).join('/')}\\`;\r\n\r\n                    return last ? (\r\n                      <Typography color=\"textPrimary\" key={to}>\r\n                        {breadcrumbNameMap[to]}\r\n                      </Typography>\r\n                    ) : (\r\n                      <LinkRouter color=\"inherit\" to={to} key={to}>\r\n                        {breadcrumbNameMap[to]}\r\n                      </LinkRouter>\r\n                    );\r\n                  })}\r\n                </Breadcrumbs>\r\n              );\r\n            }}\r\n          </Route>\r\n          <nav className={classes.lists} aria-label=\"Mailbox folders\">\r\n            <List>\r\n              <ListItemLink to=\"/inbox\" open={this.state.open} onClick={this.handleClick} />\r\n              <Collapse component=\"li\" in={this.state.open} timeout=\"auto\" unmountOnExit>\r\n                <List disablePadding>\r\n                  <ListItemLink to=\"/inbox/important\" className={classes.nested} />\r\n                </List>\r\n              </Collapse>\r\n              <ListItemLink to=\"/trash\" />\r\n              <ListItemLink to=\"/spam\" />\r\n            </List>\r\n          </nav>\r\n        </div>\r\n      </MemoryRouter>\r\n    );\r\n  }\r\n}\r\n\r\nRouterBreadcrumbs.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(RouterBreadcrumbs);\r\n`;\r\n","/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  Divider,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  Button,\r\n  Drawer,\r\n  SwipeableDrawer\r\n} from \"@material-ui/core\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n// Example 1\r\nconst useStyles1 = makeStyles({\r\n  list: {\r\n    width: 250\r\n  },\r\n  fullList: {\r\n    width: \"auto\"\r\n  }\r\n});\r\n\r\n// Example 2\r\nconst useStyles2 = makeStyles({\r\n  list: {\r\n    width: 250\r\n  },\r\n  fullList: {\r\n    width: \"auto\"\r\n  }\r\n});\r\n\r\nexport default function DrawerExamplesPage(props) {\r\n  // Example 1\r\n  const classes1 = useStyles1();\r\n  const [state1, setState1] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false\r\n  });\r\n\r\n  const toggleDrawer1 = (side, open) => event => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState1({ ...state1, [side]: open });\r\n  };\r\n\r\n  const sideList1 = side => (\r\n    <div\r\n      className={classes1.list}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer1(side, false)}\r\n      onKeyDown={toggleDrawer1(side, false)}\r\n    >\r\n      <List>\r\n        {[\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const fullList1 = side => (\r\n    <div\r\n      className={classes1.fullList}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer1(side, false)}\r\n      onKeyDown={toggleDrawer1(side, false)}\r\n    >\r\n      <List>\r\n        {[\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  // Example 2\r\n  const classes2 = useStyles2();\r\n  const [state2, setState2] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false\r\n  });\r\n\r\n  const toggleDrawer2 = (side, open) => event => {\r\n    if (\r\n      event &&\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState2({ ...state2, [side]: open });\r\n  };\r\n\r\n  const sideList2 = side => (\r\n    <div\r\n      className={classes2.list}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer2(side, false)}\r\n      onKeyDown={toggleDrawer2(side, false)}\r\n    >\r\n      <List>\r\n        {[\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const fullList2 = side => (\r\n    <div\r\n      className={classes2.fullList}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer2(side, false)}\r\n      onKeyDown={toggleDrawer2(side, false)}\r\n    >\r\n      <List>\r\n        {[\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          Navigation drawers provide access to destinations in your app. Side\r\n          sheets are surfaces containing supplementary content that are anchored\r\n          to the left or right edge of the screen.\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/drawers/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode1}\r\n            beforeCodeTitle=\"Temporary drawer\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              Temporary navigation drawers can toggle open or closed. Closed by\r\n              default, the drawer opens temporarily above all other content\r\n              until a section is selected.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <Button onClick={toggleDrawer1(\"left\", true)}>Open Left</Button>\r\n              <Button onClick={toggleDrawer1(\"right\", true)}>Open Right</Button>\r\n              <Button onClick={toggleDrawer1(\"top\", true)}>Open Top</Button>\r\n              <Button onClick={toggleDrawer1(\"bottom\", true)}>\r\n                Open Bottom\r\n              </Button>\r\n              <Drawer open={state1.left} onClose={toggleDrawer1(\"left\", false)}>\r\n                {sideList1(\"left\")}\r\n              </Drawer>\r\n              <Drawer\r\n                anchor=\"top\"\r\n                open={state1.top}\r\n                onClose={toggleDrawer1(\"top\", false)}\r\n              >\r\n                {fullList1(\"top\")}\r\n              </Drawer>\r\n              <Drawer\r\n                anchor=\"bottom\"\r\n                open={state1.bottom}\r\n                onClose={toggleDrawer1(\"bottom\", false)}\r\n              >\r\n                {fullList1(\"bottom\")}\r\n              </Drawer>\r\n              <Drawer\r\n                anchor=\"right\"\r\n                open={state1.right}\r\n                onClose={toggleDrawer1(\"right\", false)}\r\n              >\r\n                {sideList1(\"right\")}\r\n              </Drawer>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode2}\r\n            beforeCodeTitle=\"Swipeable Temporary drawer\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              You can make the drawer swipeable with the{\" \"}\r\n              <code>SwipeableDrawer</code> component.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <Button onClick={toggleDrawer2(\"left\", true)}>Open Left</Button>\r\n              <Button onClick={toggleDrawer2(\"right\", true)}>Open Right</Button>\r\n              <Button onClick={toggleDrawer2(\"top\", true)}>Open Top</Button>\r\n              <Button onClick={toggleDrawer2(\"bottom\", true)}>\r\n                Open Bottom\r\n              </Button>\r\n              <SwipeableDrawer\r\n                open={state2.left}\r\n                onClose={toggleDrawer2(\"left\", false)}\r\n                onOpen={toggleDrawer2(\"left\", true)}\r\n              >\r\n                {sideList2(\"left\")}\r\n              </SwipeableDrawer>\r\n              <SwipeableDrawer\r\n                anchor=\"top\"\r\n                open={state2.top}\r\n                onClose={toggleDrawer2(\"top\", false)}\r\n                onOpen={toggleDrawer2(\"top\", true)}\r\n              >\r\n                {fullList2(\"top\")}\r\n              </SwipeableDrawer>\r\n              <SwipeableDrawer\r\n                anchor=\"bottom\"\r\n                open={state2.bottom}\r\n                onClose={toggleDrawer2(\"bottom\", false)}\r\n                onOpen={toggleDrawer2(\"bottom\", true)}\r\n              >\r\n                {fullList2(\"bottom\")}\r\n              </SwipeableDrawer>\r\n              <SwipeableDrawer\r\n                anchor=\"right\"\r\n                open={state2.right}\r\n                onClose={toggleDrawer2(\"right\", false)}\r\n                onOpen={toggleDrawer2(\"right\", true)}\r\n              >\r\n                {sideList2(\"right\")}\r\n              </SwipeableDrawer>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n});\r\n\r\nexport default function TemporaryDrawer() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  const toggleDrawer = (side, open) => event => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [side]: open });\r\n  };\r\n\r\n  const sideList = side => (\r\n    <div\r\n      className={classes.list}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(side, false)}\r\n      onKeyDown={toggleDrawer(side, false)}\r\n    >\r\n      <List>\r\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const fullList = side => (\r\n    <div\r\n      className={classes.fullList}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(side, false)}\r\n      onKeyDown={toggleDrawer(side, false)}\r\n    >\r\n      <List>\r\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={toggleDrawer('left', true)}>Open Left</Button>\r\n      <Button onClick={toggleDrawer('right', true)}>Open Right</Button>\r\n      <Button onClick={toggleDrawer('top', true)}>Open Top</Button>\r\n      <Button onClick={toggleDrawer('bottom', true)}>Open Bottom</Button>\r\n      <Drawer open={state.left} onClose={toggleDrawer('left', false)}>\r\n        {sideList('left')}\r\n      </Drawer>\r\n      <Drawer anchor=\"top\" open={state.top} onClose={toggleDrawer('top', false)}>\r\n        {fullList('top')}\r\n      </Drawer>\r\n      <Drawer anchor=\"bottom\" open={state.bottom} onClose={toggleDrawer('bottom', false)}>\r\n        {fullList('bottom')}\r\n      </Drawer>\r\n      <Drawer anchor=\"right\" open={state.right} onClose={toggleDrawer('right', false)}>\r\n        {sideList('right')}\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n});\r\n\r\nexport default function SwipeableTemporaryDrawer() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  const toggleDrawer = (side, open) => event => {\r\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [side]: open });\r\n  };\r\n\r\n  const sideList = side => (\r\n    <div\r\n      className={classes.list}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(side, false)}\r\n      onKeyDown={toggleDrawer(side, false)}\r\n    >\r\n      <List>\r\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const fullList = side => (\r\n    <div\r\n      className={classes.fullList}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(side, false)}\r\n      onKeyDown={toggleDrawer(side, false)}\r\n    >\r\n      <List>\r\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={toggleDrawer('left', true)}>Open Left</Button>\r\n      <Button onClick={toggleDrawer('right', true)}>Open Right</Button>\r\n      <Button onClick={toggleDrawer('top', true)}>Open Top</Button>\r\n      <Button onClick={toggleDrawer('bottom', true)}>Open Bottom</Button>\r\n      <SwipeableDrawer\r\n        open={state.left}\r\n        onClose={toggleDrawer('left', false)}\r\n        onOpen={toggleDrawer('left', true)}\r\n      >\r\n        {sideList('left')}\r\n      </SwipeableDrawer>\r\n      <SwipeableDrawer\r\n        anchor=\"top\"\r\n        open={state.top}\r\n        onClose={toggleDrawer('top', false)}\r\n        onOpen={toggleDrawer('top', true)}\r\n      >\r\n        {fullList('top')}\r\n      </SwipeableDrawer>\r\n      <SwipeableDrawer\r\n        anchor=\"bottom\"\r\n        open={state.bottom}\r\n        onClose={toggleDrawer('bottom', false)}\r\n        onOpen={toggleDrawer('bottom', true)}\r\n      >\r\n        {fullList('bottom')}\r\n      </SwipeableDrawer>\r\n      <SwipeableDrawer\r\n        anchor=\"right\"\r\n        open={state.right}\r\n        onClose={toggleDrawer('right', false)}\r\n        onOpen={toggleDrawer('right', true)}\r\n      >\r\n        {sideList('right')}\r\n      </SwipeableDrawer>\r\n    </div>\r\n  );\r\n}\r\n`;\r\n","/* eslint-disable no-script-url */\r\n/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Link, Typography} from \"@material-ui/core\";\r\nimport {MemoryRouter as Router} from \"react-router\";\r\nimport {Link as RouterLink} from \"react-router-dom\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n// Example 1\r\nconst useStyles1 = makeStyles(theme => ({\r\n  link: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst dudUrl = \"#\";\r\n\r\n// Example 2\r\n// The usage of React.forwardRef will no longer be required for react-router-dom v6.\r\n// see https://github.com/ReactTraining/react-router/issues/6056\r\nconst AdapterLink = React.forwardRef((props, ref) => (\r\n  <Router innerRef={ref} {...props} />\r\n));\r\n\r\nconst CollisionLink = React.forwardRef((props, ref) => (\r\n  <Router innerRef={ref} to=\"/getting-started/installation/\" {...props} />\r\n));\r\n\r\nexport default function LinksExamplesPage() {\r\n  const classes1 = useStyles1();\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          The Link component allows you to easily customize anchor elements with\r\n          your theme colors and typography styles.\r\n        </span>\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/links/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Simple links\">\r\n            <span>\r\n              The Link component is built on top of the <code>Typography</code>{\" \"}\r\n              component. You can leverage its properties.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\" />\r\n            <Typography>\r\n              <Link href={dudUrl} className={classes1.link}>\r\n                Link\r\n              </Link>\r\n              <Link href={dudUrl} color=\"inherit\" className={classes1.link}>\r\n                {'color=\"inherit\"'}\r\n              </Link>\r\n              <Link href={dudUrl} variant=\"body2\" className={classes1.link}>\r\n                {'variant=\"body2\"'}\r\n              </Link>\r\n            </Typography>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode2}\r\n            beforeCodeTitle=\"Third-party routing library\"\r\n          >\r\n            <span>\r\n              One common use case is to perform the navigation on the client\r\n              only, without doing a .html round-trip with the server. The{\" \"}\r\n              <code>Link</code> component provides a property to handle this use\r\n              case: <code>component</code>.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\" />\r\n            <Router>\r\n              <div>\r\n                <Link component={RouterLink} to=\"/\">\r\n                  Simple case\r\n                </Link>\r\n                <br />\r\n                <Link component={AdapterLink} to=\"/\">\r\n                  Ref forwarding\r\n                </Link>\r\n                <br />\r\n                <Link component={CollisionLink}>Avoids props collision</Link>\r\n              </div>\r\n            </Router>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\n/* eslint-disable no-script-url */\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  link: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n// This resolves to nothing and doesn't affect browser history\r\nconst dudUrl = '#';\r\n\r\nexport default function Links() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Typography>\r\n      <Link href={dudUrl} className={classes.link}>\r\n        Link\r\n      </Link>\r\n      <Link href={dudUrl} color=\"inherit\" className={classes.link}>\r\n        {'color=\"inherit\"'}\r\n      </Link>\r\n      <Link href={dudUrl} variant=\"body2\" className={classes.link}>\r\n        {'variant=\"body2\"'}\r\n      </Link>\r\n    </Typography>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\nimport { MemoryRouter as Router } from 'react-router';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport Link from '@material-ui/core/Link';\r\n\r\n// The usage of React.forwardRef will no longer be required for react-router-dom v6.\r\n// see https://github.com/ReactTraining/react-router/issues/6056\r\nconst AdapterLink = React.forwardRef((props, ref) => <KtContentRouterLink innerRef={ref} {...props} />);\r\n\r\nconst CollisionLink = React.forwardRef((props, ref) => (\r\n  <KtContentRouterLink innerRef={ref} to=\"/getting-started/installation/\" {...props} />\r\n));\r\n\r\nexport default function LinkRouter() {\r\n  return (\r\n    <KtContentRouter>\r\n      <div>\r\n        <Link component={RouterLink} to=\"/\">\r\n          Simple case\r\n        </Link>\r\n        <br />\r\n        <Link component={AdapterLink} to=\"/\">\r\n          Ref forwarding\r\n        </Link>\r\n        <br />\r\n        <Link component={CollisionLink}>Avoids props collision</Link>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n`;\r\n","/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport {makeStyles, withStyles} from \"@material-ui/core/styles\";\r\nimport {\r\n  Menu,\r\n  Button,\r\n  MenuItem,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Paper,\r\n  MenuList,\r\n  Popper,\r\n  Grow,\r\n  ClickAwayListener,\r\n  ListItemIcon,\r\n  IconButton,\r\n  Typography,\r\n  Fade\r\n} from \"@material-ui/core\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport PriorityHighIcon from \"@material-ui/icons/PriorityHigh\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n// Example 2\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\nconst options = [\r\n  \"Show some love to Material-UI\",\r\n  \"Show all notification content\",\r\n  \"Hide sensitive notification content\",\r\n  \"Hide all notification content\"\r\n];\r\n\r\n// Example 3\r\nconst useStyles3 = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n  paper: {\r\n    marginRight: theme.spacing(2)\r\n  }\r\n}));\r\n\r\n// Example 4\r\nconst StyledMenu4 = withStyles({\r\n  paper: {\r\n    border: \"1px solid #d3d4d5\"\r\n  }\r\n})(props => (\r\n  <Menu\r\n    elevation={0}\r\n    getContentAnchorEl={null}\r\n    anchorOrigin={{\r\n      vertical: \"bottom\",\r\n      horizontal: \"center\"\r\n    }}\r\n    transformOrigin={{\r\n      vertical: \"top\",\r\n      horizontal: \"center\"\r\n    }}\r\n    {...props}\r\n  />\r\n));\r\n\r\nconst StyledMenuItem4 = withStyles(theme => ({\r\n  root: {\r\n    \"&:focus\": {\r\n      backgroundColor: theme.palette.primary.main,\r\n      \"& .MuiListItemIcon-root, & .MuiListItemText-primary\": {\r\n        color: theme.palette.common.white\r\n      }\r\n    }\r\n  }\r\n}))(MenuItem);\r\n\r\n// Example 5\r\nconst options5 = [\r\n  \"None\",\r\n  \"Atria\",\r\n  \"Callisto\",\r\n  \"Dione\",\r\n  \"Ganymede\",\r\n  \"Hangouts Call\",\r\n  \"Luna\",\r\n  \"Oberon\",\r\n  \"Phobos\",\r\n  \"Pyxis\",\r\n  \"Sedna\",\r\n  \"Titania\",\r\n  \"Triton\",\r\n  \"Umbriel\"\r\n];\r\n\r\nconst ITEM_HEIGHT = 48;\r\n\r\n// Example 6\r\nconst useStyles6 = makeStyles({\r\n  root: {\r\n    width: 230\r\n  }\r\n});\r\n\r\nexport default function MenusExamplesPage() {\r\n  // Example 1\r\n  const [anchorEl1, setAnchorEl1] = React.useState(null);\r\n\r\n  function handleClick1(event) {\r\n    setAnchorEl1(event.currentTarget);\r\n  }\r\n\r\n  function handleClose1() {\r\n    setAnchorEl1(null);\r\n  }\r\n\r\n  // Example 2\r\n  const classes2 = useStyles2();\r\n  const [anchorEl2, setAnchorEl2] = React.useState(null);\r\n  const [selectedIndex2, setSelectedIndex2] = React.useState(1);\r\n\r\n  function handleClickListItem2(event) {\r\n    setAnchorEl2(event.currentTarget);\r\n  }\r\n\r\n  function handleMenuItemClick2(event, index) {\r\n    setSelectedIndex2(index);\r\n    setAnchorEl2(null);\r\n  }\r\n\r\n  function handleClose2() {\r\n    setAnchorEl2(null);\r\n  }\r\n\r\n  // Example 3\r\n  const classes3 = useStyles3();\r\n  const [open3, setOpen3] = React.useState(false);\r\n  const anchorRef3 = React.useRef(null);\r\n\r\n  function handleToggle3() {\r\n    setOpen3(prevOpen3 => !prevOpen3);\r\n  }\r\n\r\n  function handleClose(event) {\r\n    if (anchorRef3.current && anchorRef3.current.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    setOpen3(false);\r\n  }\r\n\r\n  // Example 4\r\n  const [anchorEl4, setAnchorEl4] = React.useState(null);\r\n\r\n  function handleClick4(event) {\r\n    setAnchorEl4(event.currentTarget);\r\n  }\r\n\r\n  function handleClose4() {\r\n    setAnchorEl4(null);\r\n  }\r\n\r\n  // Example 5\r\n  const [anchorEl5, setAnchorEl5] = React.useState(null);\r\n  const open5 = Boolean(anchorEl5);\r\n\r\n  function handleClick5(event) {\r\n    setAnchorEl5(event.currentTarget);\r\n  }\r\n\r\n  function handleClose5() {\r\n    setAnchorEl5(null);\r\n  }\r\n\r\n  // Example 6\r\n  const classes6 = useStyles6();\r\n\r\n  // Example 7\r\n  const [anchorEl7, setAnchorEl7] = React.useState(null);\r\n  const open7 = Boolean(anchorEl7);\r\n\r\n  function handleClick7(event) {\r\n    setAnchorEl7(event.currentTarget);\r\n  }\r\n\r\n  function handleClose7() {\r\n    setAnchorEl7(null);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>Menus display a list of choices on temporary surfaces.</span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/menus/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode1}\r\n            beforeCodeTitle=\"Simple Menu\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              Simple menus open over the anchor element by default (this option\r\n              can be changed via props). When close to a screen edge, simple\r\n              menus vertically realign to make sure that all menu items are\r\n              completely visible.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <Button\r\n                aria-controls=\"simple-menu\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleClick1}\r\n              >\r\n                Open Menu\r\n              </Button>\r\n              <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl1}\r\n                keepMounted\r\n                open={Boolean(anchorEl1)}\r\n                onClose={handleClose1}\r\n              >\r\n                <MenuItem onClick={handleClose1}>Profile</MenuItem>\r\n                <MenuItem onClick={handleClose1}>My account</MenuItem>\r\n                <MenuItem onClick={handleClose1}>Logout</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode3}\r\n            beforeCodeTitle=\"MenuList composition\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              The <code>Menu</code> component uses the <code>Popover</code>{\" \"}\r\n              component internally. However, you might want to use a different\r\n              positioning strategy, or not blocking the scroll. For answering\r\n              those needs, we expose a <code>MenuList</code> component that you\r\n              can compose, with <code>Popper</code> in this example.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes3.root}>\r\n              <Paper className={classes3.paper}>\r\n                <MenuList>\r\n                  <MenuItem>Profile</MenuItem>\r\n                  <MenuItem>My account</MenuItem>\r\n                  <MenuItem>Logout</MenuItem>\r\n                </MenuList>\r\n              </Paper>\r\n              <div>\r\n                <Button\r\n                  ref={anchorRef3}\r\n                  aria-controls=\"menu-list-grow\"\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleToggle3}\r\n                >\r\n                  Toggle Menu Grow\r\n                </Button>\r\n                <Popper\r\n                  open={open3}\r\n                  anchorEl={anchorRef3.current}\r\n                  keepMounted\r\n                  transition\r\n                  disablePortal\r\n                >\r\n                  {({ TransitionProps, placement }) => (\r\n                    <Grow\r\n                      {...TransitionProps}\r\n                      style={{\r\n                        transformOrigin:\r\n                          placement === \"bottom\"\r\n                            ? \"center top\"\r\n                            : \"center bottom\"\r\n                      }}\r\n                    >\r\n                      <Paper id=\"menu-list-grow\">\r\n                        <ClickAwayListener onClickAway={handleClose}>\r\n                          <MenuList>\r\n                            <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                            <MenuItem onClick={handleClose}>\r\n                              My account\r\n                            </MenuItem>\r\n                            <MenuItem onClick={handleClose}>Logout</MenuItem>\r\n                          </MenuList>\r\n                        </ClickAwayListener>\r\n                      </Paper>\r\n                    </Grow>\r\n                  )}\r\n                </Popper>\r\n              </div>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode5}\r\n            beforeCodeTitle=\"Max height menus\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              If the height of a menu prevents all menu items from being\r\n              displayed, the menu can scroll internally.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <IconButton\r\n                aria-label=\"More\"\r\n                aria-controls=\"long-menu\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleClick5}\r\n              >\r\n                <MoreVertIcon />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"long-menu\"\r\n                anchorEl={anchorEl5}\r\n                keepMounted\r\n                open={open5}\r\n                onClose={handleClose5}\r\n                PaperProps={{\r\n                  style: {\r\n                    maxHeight: ITEM_HEIGHT * 4.5,\r\n                    width: 200\r\n                  }\r\n                }}\r\n              >\r\n                {options5.map(option => (\r\n                  <MenuItem\r\n                    key={option}\r\n                    selected={option === \"Pyxis\"}\r\n                    onClick={handleClose5}\r\n                  >\r\n                    {option}\r\n                  </MenuItem>\r\n                ))}\r\n              </Menu>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode7}\r\n            beforeCodeTitle=\"Change transition\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>Use a different transition.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <Button\r\n                aria-controls=\"fade-menu\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleClick7}\r\n              >\r\n                Open with fade transition\r\n              </Button>\r\n              <Menu\r\n                id=\"fade-menu\"\r\n                anchorEl={anchorEl7}\r\n                keepMounted\r\n                open={open7}\r\n                onClose={handleClose7}\r\n                TransitionComponent={Fade}\r\n              >\r\n                <MenuItem onClick={handleClose7}>Profile</MenuItem>\r\n                <MenuItem onClick={handleClose7}>My account</MenuItem>\r\n                <MenuItem onClick={handleClose7}>Logout</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode2}\r\n            beforeCodeTitle=\"Selected menus\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              If used for item selection, when opened, simple menus attempt to\r\n              vertically align the currently selected menu item with the anchor\r\n              element, and the initial focus will be placed on the selected menu\r\n              item. The currently selected menu item is set using the{\" \"}\r\n              <code>selected</code> property (from ListItem). To use a selected\r\n              menu item without impacting the initial focus or the vertical\r\n              positioning of the menu, set the <code>variant</code> property to{\" \"}\r\n              <code>menu</code>.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes2.root}>\r\n              <List component=\"nav\" aria-label=\"Device settings\">\r\n                <ListItem\r\n                  button\r\n                  aria-haspopup=\"true\"\r\n                  aria-controls=\"lock-menu\"\r\n                  aria-label=\"When device is locked\"\r\n                  onClick={handleClickListItem2}\r\n                >\r\n                  <ListItemText\r\n                    primary=\"When device is locked\"\r\n                    secondary={options[selectedIndex2]}\r\n                  />\r\n                </ListItem>\r\n              </List>\r\n              <Menu\r\n                id=\"lock-menu\"\r\n                anchorEl={anchorEl2}\r\n                keepMounted\r\n                open={Boolean(anchorEl2)}\r\n                onClose={handleClose2}\r\n              >\r\n                {options.map((option, index) => (\r\n                  <MenuItem\r\n                    key={option}\r\n                    disabled={index === 0}\r\n                    selected={index === selectedIndex2}\r\n                    onClick={event => handleMenuItemClick2(event, index)}\r\n                  >\r\n                    {option}\r\n                  </MenuItem>\r\n                ))}\r\n              </Menu>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode4}\r\n            beforeCodeTitle=\"Customized menus\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>Here is an example of customizing the component.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <Button\r\n                aria-controls=\"customized-menu\"\r\n                aria-haspopup=\"true\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleClick4}\r\n              >\r\n                Open Menu\r\n              </Button>\r\n              <StyledMenu4\r\n                id=\"customized-menu\"\r\n                anchorEl={anchorEl4}\r\n                keepMounted\r\n                open={Boolean(anchorEl4)}\r\n                onClose={handleClose4}\r\n              >\r\n                <StyledMenuItem4>\r\n                  <ListItemIcon>\r\n                    <SendIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Sent mail\" />\r\n                </StyledMenuItem4>\r\n                <StyledMenuItem4>\r\n                  <ListItemIcon>\r\n                    <DraftsIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Drafts\" />\r\n                </StyledMenuItem4>\r\n                <StyledMenuItem4>\r\n                  <ListItemIcon>\r\n                    <InboxIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Inbox\" />\r\n                </StyledMenuItem4>\r\n              </StyledMenu4>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode6}\r\n            beforeCodeTitle=\"Limitations\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              There is a flexbox bug that prevents{\" \"}\r\n              <code>text-overflow: ellipsis</code> from working in a flexbox\r\n              layout. You can use the <code>Typography</code> component with{\" \"}\r\n              <code>noWrap</code> to workaround this issue:\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <Paper className={classes6.root}>\r\n              <MenuList>\r\n                <MenuItem>\r\n                  <ListItemIcon>\r\n                    <SendIcon />\r\n                  </ListItemIcon>\r\n                  <Typography variant=\"inherit\">A short message</Typography>\r\n                </MenuItem>\r\n                <MenuItem>\r\n                  <ListItemIcon>\r\n                    <PriorityHighIcon />\r\n                  </ListItemIcon>\r\n                  <Typography variant=\"inherit\">\r\n                    A very long text that overflows\r\n                  </Typography>\r\n                </MenuItem>\r\n                <MenuItem>\r\n                  <ListItemIcon>\r\n                    <DraftsIcon />\r\n                  </ListItemIcon>\r\n                  <Typography variant=\"inherit\" noWrap>\r\n                    A very long text that overflows\r\n                  </Typography>\r\n                </MenuItem>\r\n              </MenuList>\r\n            </Paper>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nexport default function SimpleMenu() {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n        Open Menu\r\n      </Button>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n        <MenuItem onClick={handleClose}>My account</MenuItem>\r\n        <MenuItem onClick={handleClose}>Logout</MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nconst options = [\r\n  'Show some love to Material-UI',\r\n  'Show all notification content',\r\n  'Hide sensitive notification content',\r\n  'Hide all notification content',\r\n];\r\n\r\nexport default function SimpleListMenu() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\r\n\r\n  function handleClickListItem(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  function handleMenuItemClick(event, index) {\r\n    setSelectedIndex(index);\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <List component=\"nav\" aria-label=\"Device settings\">\r\n        <ListItem\r\n          button\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"lock-menu\"\r\n          aria-label=\"When device is locked\"\r\n          onClick={handleClickListItem}\r\n        >\r\n          <ListItemText primary=\"When device is locked\" secondary={options[selectedIndex]} />\r\n        </ListItem>\r\n      </List>\r\n      <Menu\r\n        id=\"lock-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        {options.map((option, index) => (\r\n          <MenuItem\r\n            key={option}\r\n            disabled={index === 0}\r\n            selected={index === selectedIndex}\r\n            onClick={event => handleMenuItemClick(event, index)}\r\n          >\r\n            {option}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  paper: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function MenuListComposition() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n\r\n  function handleToggle() {\r\n    setOpen(prevOpen => !prevOpen);\r\n  }\r\n\r\n  function handleClose(event) {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <MenuList>\r\n          <MenuItem>Profile</MenuItem>\r\n          <MenuItem>My account</MenuItem>\r\n          <MenuItem>Logout</MenuItem>\r\n        </MenuList>\r\n      </Paper>\r\n      <div>\r\n        <Button\r\n          ref={anchorRef}\r\n          aria-controls=\"menu-list-grow\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleToggle}\r\n        >\r\n          Toggle Menu Grow\r\n        </Button>\r\n        <Popper open={open} anchorEl={anchorRef.current} keepMounted transition disablePortal>\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n            >\r\n              <Paper id=\"menu-list-grow\">\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                  <MenuList>\r\n                    <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                    <MenuItem onClick={handleClose}>My account</MenuItem>\r\n                    <MenuItem onClick={handleClose}>Logout</MenuItem>\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode4 = `\r\nimport React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\nconst StyledMenu = withStyles({\r\n  paper: {\r\n    border: '1px solid #d3d4d5',\r\n  },\r\n})(props => (\r\n  <Menu\r\n    elevation={0}\r\n    getContentAnchorEl={null}\r\n    anchorOrigin={{\r\n      vertical: 'bottom',\r\n      horizontal: 'center',\r\n    }}\r\n    transformOrigin={{\r\n      vertical: 'top',\r\n      horizontal: 'center',\r\n    }}\r\n    {...props}\r\n  />\r\n));\r\n\r\nconst StyledMenuItem = withStyles(theme => ({\r\n  root: {\r\n    '&:focus': {\r\n      backgroundColor: theme.palette.primary.main,\r\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n  },\r\n}))(MenuItem);\r\n\r\nexport default function CustomizedMenus() {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        aria-controls=\"customized-menu\"\r\n        aria-haspopup=\"true\"\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={handleClick}\r\n      >\r\n        Open Menu\r\n      </Button>\r\n      <StyledMenu\r\n        id=\"customized-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <StyledMenuItem>\r\n          <ListItemIcon>\r\n            <SendIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Sent mail\" />\r\n        </StyledMenuItem>\r\n        <StyledMenuItem>\r\n          <ListItemIcon>\r\n            <DraftsIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Drafts\" />\r\n        </StyledMenuItem>\r\n        <StyledMenuItem>\r\n          <ListItemIcon>\r\n            <InboxIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Inbox\" />\r\n        </StyledMenuItem>\r\n      </StyledMenu>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode5 = `\r\nimport React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst options = [\r\n  'None',\r\n  'Atria',\r\n  'Callisto',\r\n  'Dione',\r\n  'Ganymede',\r\n  'Hangouts Call',\r\n  'Luna',\r\n  'Oberon',\r\n  'Phobos',\r\n  'Pyxis',\r\n  'Sedna',\r\n  'Titania',\r\n  'Triton',\r\n  'Umbriel',\r\n];\r\n\r\nconst ITEM_HEIGHT = 48;\r\n\r\nexport default function LongMenu() {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <IconButton\r\n        aria-label=\"More\"\r\n        aria-controls=\"long-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n      >\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5,\r\n            width: 200,\r\n          },\r\n        }}\r\n      >\r\n        {options.map(option => (\r\n          <MenuItem key={option} selected={option === 'Pyxis'} onClick={handleClose}>\r\n            {option}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode6 = `\r\nimport React from 'react';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport PriorityHighIcon from '@material-ui/icons/PriorityHigh';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 230,\r\n  },\r\n});\r\n\r\nexport default function TypographyMenu() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <MenuList>\r\n        <MenuItem>\r\n          <ListItemIcon>\r\n            <SendIcon />\r\n          </ListItemIcon>\r\n          <Typography variant=\"inherit\">A short message</Typography>\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <ListItemIcon>\r\n            <PriorityHighIcon />\r\n          </ListItemIcon>\r\n          <Typography variant=\"inherit\">A very long text that overflows</Typography>\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <ListItemIcon>\r\n            <DraftsIcon />\r\n          </ListItemIcon>\r\n          <Typography variant=\"inherit\" noWrap>\r\n            A very long text that overflows\r\n          </Typography>\r\n        </MenuItem>\r\n      </MenuList>\r\n    </Paper>\r\n  );\r\n}\r\n`;\r\nconst jsCode7 = `\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nexport default function FadeMenu() {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button aria-controls=\"fade-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n        Open with fade transition\r\n      </Button>\r\n      <Menu\r\n        id=\"fade-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Fade}\r\n      >\r\n        <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n        <MenuItem onClick={handleClose}>My account</MenuItem>\r\n        <MenuItem onClick={handleClose}>Logout</MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n`;\r\n","/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport {makeStyles, useTheme} from \"@material-ui/core/styles\";\r\nimport {\r\n  Stepper,\r\n  Typography,\r\n  Step,\r\n  StepLabel,\r\n  Button,\r\n  StepButton,\r\n  StepContent,\r\n  Paper,\r\n  StepConnector,\r\n  MobileStepper\r\n} from \"@material-ui/core\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport {autoPlay} from \"react-swipeable-views-utils\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n// Example 1\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"90%\"\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nfunction getSteps1() {\r\n  return [\"Select campaign settings\", \"Create an ad group\", \"Create an ad\"];\r\n}\r\n\r\nfunction getStepContent1(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return \"Select campaign settings...\";\r\n    case 1:\r\n      return \"What is an ad group anyways?\";\r\n    case 2:\r\n      return \"This is the bit I really care about!\";\r\n    default:\r\n      return \"Unknown step\";\r\n  }\r\n}\r\n\r\n// Example 2\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"90%\"\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  completed: {\r\n    display: \"inline-block\"\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nfunction getSteps2() {\r\n  return [\"Select campaign settings\", \"Create an ad group\", \"Create an ad\"];\r\n}\r\n\r\nfunction getStepContent2(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return \"Step 1: Select campaign settings...\";\r\n    case 1:\r\n      return \"Step 2: What is an ad group anyways?\";\r\n    case 2:\r\n      return \"Step 3: This is the bit I really care about!\";\r\n    default:\r\n      return \"Unknown step\";\r\n  }\r\n}\r\n\r\n// Example 3\r\nconst useStyles3 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"90%\"\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nfunction getSteps3() {\r\n  return [\r\n    \"Select master blaster campaign settings\",\r\n    \"Create an ad group\",\r\n    \"Create an ad\"\r\n  ];\r\n}\r\n\r\nfunction getStepContent3(stepIndex) {\r\n  switch (stepIndex) {\r\n    case 0:\r\n      return \"Select campaign settings...\";\r\n    case 1:\r\n      return \"What is an ad group anyways?\";\r\n    case 2:\r\n      return \"This is the bit I really care about!\";\r\n    default:\r\n      return \"Uknown stepIndex\";\r\n  }\r\n}\r\n\r\n// Example 4\r\nconst useStyles4 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"90%\"\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  completed: {\r\n    display: \"inline-block\"\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nfunction getSteps4() {\r\n  return [\"Select campaign settings\", \"Create an ad group\", \"Create an ad\"];\r\n}\r\n\r\nfunction getStepContent4(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return \"Step 1: Select campaign settings...\";\r\n    case 1:\r\n      return \"Step 2: What is an ad group anyways?\";\r\n    case 2:\r\n      return \"Step 3: This is the bit I really care about!\";\r\n    default:\r\n      return \"Unknown step\";\r\n  }\r\n}\r\n\r\n// Example 5\r\nconst useStyles5 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"90%\"\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nfunction getSteps5() {\r\n  return [\"Select campaign settings\", \"Create an ad group\", \"Create an ad\"];\r\n}\r\n\r\nfunction getStepContent5(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return \"Select campaign settings...\";\r\n    case 1:\r\n      return \"What is an ad group anyways?\";\r\n    case 2:\r\n      return \"This is the bit I really care about!\";\r\n    default:\r\n      return \"Unknown step\";\r\n  }\r\n}\r\n\r\n// Example 6\r\nconst useStyles6 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"90%\"\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(1),\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  actionsContainer: {\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  resetContainer: {\r\n    padding: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nfunction getSteps6() {\r\n  return [\"Select campaign settings\", \"Create an ad group\", \"Create an ad\"];\r\n}\r\n\r\nfunction getStepContent6(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return `For each ad campaign that you create, you can control how much\r\n              you're willing to spend on clicks and conversions, which networks\r\n              and geographical locations you want your ads to show on, and more.`;\r\n    case 1:\r\n      return \"An ad group contains one or more ads which target a shared set of keywords.\";\r\n    case 2:\r\n      return `Try out different ad text to see what brings in the most customers,\r\n              and learn how to enhance your ads using features like ad extensions.\r\n              If you run into any problems with your ads, find out how to tell if\r\n              they're running and how to resolve approval issues.`;\r\n    default:\r\n      return \"Unknown step\";\r\n  }\r\n}\r\n\r\n// Example 7\r\nconst useStyles7 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"90%\"\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1)\r\n  },\r\n  connectorActive: {\r\n    \"& $connectorLine\": {\r\n      borderColor: theme.palette.secondary.main\r\n    }\r\n  },\r\n  connectorCompleted: {\r\n    \"& $connectorLine\": {\r\n      borderColor: theme.palette.primary.main\r\n    }\r\n  },\r\n  connectorDisabled: {\r\n    \"& $connectorLine\": {\r\n      borderColor: theme.palette.grey[100]\r\n    }\r\n  },\r\n  connectorLine: {\r\n    transition: theme.transitions.create(\"border-color\")\r\n  }\r\n}));\r\n\r\nfunction getSteps7() {\r\n  return [\"Select campaign settings\", \"Create an ad group\", \"Create an ad\"];\r\n}\r\n\r\nfunction getStepContent7(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return \"Select campaign settings...\";\r\n    case 1:\r\n      return \"What is an ad group anyways?\";\r\n    case 2:\r\n      return \"This is the bit I really care about!\";\r\n    default:\r\n      return \"Unknown step\";\r\n  }\r\n}\r\n// Example 9\r\nconst AutoPlaySwipeableViews9 = autoPlay(SwipeableViews);\r\n\r\nconst tutorialSteps9 = [\r\n  {\r\n    label: \"San Francisco – Oakland Bay Bridge, United States\",\r\n    imgPath:\r\n      \"https://images.unsplash.com/photo-1537944434965-cf4679d1a598?auto=format&fit=crop&w=400&h=250&q=60\"\r\n  },\r\n  {\r\n    label: \"Bird\",\r\n    imgPath:\r\n      \"https://images.unsplash.com/photo-1538032746644-0212e812a9e7?auto=format&fit=crop&w=400&h=250&q=60\"\r\n  },\r\n  {\r\n    label: \"Bali, Indonesia\",\r\n    imgPath:\r\n      \"https://images.unsplash.com/photo-1537996194471-e657df975ab4?auto=format&fit=crop&w=400&h=250&q=80\"\r\n  },\r\n  {\r\n    label: \"NeONBRAND Digital Marketing, Las Vegas, United States\",\r\n    imgPath:\r\n      \"https://images.unsplash.com/photo-1518732714860-b62714ce0c59?auto=format&fit=crop&w=400&h=250&q=60\"\r\n  },\r\n  {\r\n    label: \"Goč, Serbia\",\r\n    imgPath:\r\n      \"https://images.unsplash.com/photo-1512341689857-198e7e2f3ca8?auto=format&fit=crop&w=400&h=250&q=60\"\r\n  }\r\n];\r\n\r\nconst useStyles9 = makeStyles(theme => ({\r\n  root: {\r\n    maxWidth: 400,\r\n    flexGrow: 1\r\n  },\r\n  header: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    height: 50,\r\n    paddingLeft: theme.spacing(4),\r\n    backgroundColor: theme.palette.background.default\r\n  },\r\n  img: {\r\n    height: 255,\r\n    display: \"block\",\r\n    maxWidth: 400,\r\n    overflow: \"hidden\",\r\n    width: \"100%\"\r\n  }\r\n}));\r\n\r\n// Example 10\r\nconst useStyles10 = makeStyles({\r\n  root: {\r\n    maxWidth: 400,\r\n    flexGrow: 1\r\n  }\r\n});\r\n\r\n// Example 11\r\nconst useStyles11 = makeStyles({\r\n  root: {\r\n    maxWidth: 400,\r\n    flexGrow: 1\r\n  }\r\n});\r\n\r\nexport default function SteppersExamplesPage() {\r\n  // Example 1\r\n  const classes1 = useStyles1();\r\n  const [activeStep1, setActiveStep1] = React.useState(0);\r\n  const [skipped1, setSkipped1] = React.useState(new Set());\r\n  const steps1 = getSteps1();\r\n\r\n  function isStepOptional1(step) {\r\n    return step === 1;\r\n  }\r\n\r\n  function isStepSkipped1(step) {\r\n    return skipped1.has(step);\r\n  }\r\n\r\n  function handleNext1() {\r\n    let newSkipped = skipped1;\r\n    if (isStepSkipped1(activeStep1)) {\r\n      newSkipped = new Set(newSkipped.values());\r\n      newSkipped.delete(activeStep1);\r\n    }\r\n\r\n    setActiveStep1(prevActiveStep => prevActiveStep + 1);\r\n    setSkipped1(newSkipped);\r\n  }\r\n\r\n  function handleBack1() {\r\n    setActiveStep1(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n\r\n  function handleSkip1() {\r\n    if (!isStepOptional1(activeStep1)) {\r\n      // You probably want to guard against something like this,\r\n      // it should never occur unless someone's actively trying to break something.\r\n      throw new Error(\"You can't skip a step that isn't optional.\");\r\n    }\r\n\r\n    setActiveStep1(prevActiveStep => prevActiveStep + 1);\r\n    setSkipped1(prevSkipped => {\r\n      const newSkipped = new Set(prevSkipped.values());\r\n      newSkipped.add(activeStep1);\r\n      return newSkipped;\r\n    });\r\n  }\r\n\r\n  function handleReset1() {\r\n    setActiveStep1(0);\r\n  }\r\n\r\n  // Example 2\r\n  const classes2 = useStyles2();\r\n  const [activeStep2, setActiveStep2] = React.useState(0);\r\n  const [completed2, setCompleted2] = React.useState({});\r\n  const steps2 = getSteps2();\r\n\r\n  function totalSteps2() {\r\n    return steps2.length;\r\n  }\r\n\r\n  function completedSteps2() {\r\n    return Object.keys(completed2).length;\r\n  }\r\n\r\n  function isLastStep2() {\r\n    return activeStep2 === totalSteps2() - 1;\r\n  }\r\n\r\n  function allStepsCompleted2() {\r\n    return completedSteps2() === totalSteps2();\r\n  }\r\n\r\n  function handleNext2() {\r\n    const newActiveStep =\r\n      isLastStep2() && !allStepsCompleted2()\r\n        ? // It's the last step, but not all steps have been completed,\r\n          // find the first step that has been completed\r\n          steps2.findIndex((step, i) => !(i in completed2))\r\n        : activeStep2 + 1;\r\n    setActiveStep2(newActiveStep);\r\n  }\r\n\r\n  function handleBack2() {\r\n    setActiveStep2(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n\r\n  const handleStep2 = step => () => {\r\n    setActiveStep2(step);\r\n  };\r\n\r\n  function handleComplete2() {\r\n    const newCompleted2 = completed2;\r\n    newCompleted2[activeStep2] = true;\r\n    setCompleted2(newCompleted2);\r\n    handleNext2();\r\n  }\r\n\r\n  function handleReset2() {\r\n    setActiveStep2(0);\r\n    setCompleted2({});\r\n  }\r\n\r\n  // Example 3\r\n  const classes3 = useStyles3();\r\n  const [activeStep3, setActiveStep3] = React.useState(0);\r\n  const steps3 = getSteps3();\r\n\r\n  function handleNext3() {\r\n    setActiveStep3(prevActiveStep => prevActiveStep + 1);\r\n  }\r\n\r\n  function handleBack3() {\r\n    setActiveStep3(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n\r\n  function handleReset3() {\r\n    setActiveStep3(0);\r\n  }\r\n\r\n  // Example 4\r\n  const classes4 = useStyles4();\r\n  const [activeStep4, setActiveStep4] = React.useState(0);\r\n  const [completed4, setCompleted4] = React.useState(new Set());\r\n  const [skipped4, setSkipped4] = React.useState(new Set());\r\n  const steps4 = getSteps4();\r\n\r\n  function totalSteps4() {\r\n    return getSteps4().length;\r\n  }\r\n\r\n  function isStepOptional4(step) {\r\n    return step === 1;\r\n  }\r\n\r\n  function handleSkip4() {\r\n    if (!isStepOptional4(activeStep4)) {\r\n      // You probably want to guard against something like this\r\n      // it should never occur unless someone's actively trying to break something.\r\n      throw new Error(\"You can't skip a step that isn't optional.\");\r\n    }\r\n\r\n    setActiveStep4(prevActiveStep => prevActiveStep + 1);\r\n    setSkipped4(prevSkipped => {\r\n      const newSkipped = new Set(prevSkipped.values());\r\n      newSkipped.add(activeStep4);\r\n      return newSkipped;\r\n    });\r\n  }\r\n\r\n  function skippedSteps4() {\r\n    return skipped4.size;\r\n  }\r\n\r\n  function completedSteps4() {\r\n    return completed4.size;\r\n  }\r\n\r\n  function allStepsCompleted4() {\r\n    return completedSteps4() === totalSteps4() - skippedSteps4();\r\n  }\r\n\r\n  function isLastStep4() {\r\n    return activeStep4 === totalSteps4() - 1;\r\n  }\r\n\r\n  function handleNext4() {\r\n    const newActiveStep =\r\n      isLastStep4() && !allStepsCompleted4()\r\n        ? // It's the last step, but not all steps have been completed\r\n          // find the first step that has been completed\r\n          steps4.findIndex((step, i) => !completed4.has(i))\r\n        : activeStep4 + 1;\r\n\r\n    setActiveStep4(newActiveStep);\r\n  }\r\n\r\n  function handleBack4() {\r\n    setActiveStep4(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n\r\n  const handleStep4 = step => () => {\r\n    setActiveStep4(step);\r\n  };\r\n\r\n  function handleComplete4() {\r\n    const newCompleted = new Set(completed4);\r\n    newCompleted.add(activeStep4);\r\n    setCompleted4(newCompleted);\r\n\r\n    /**\r\n     * Sigh... it would be much nicer to replace the following if conditional with\r\n     * `if (!this.allStepsComplete())` however state is not set when we do this,\r\n     * thus we have to resort to not being very DRY.\r\n     */\r\n    if (completed4.size !== totalSteps4() - skippedSteps4()) {\r\n      handleNext4();\r\n    }\r\n  }\r\n\r\n  function handleReset4() {\r\n    setActiveStep4(0);\r\n    setCompleted4(new Set());\r\n    setSkipped4(new Set());\r\n  }\r\n\r\n  function isStepSkipped4(step) {\r\n    return skipped4.has(step);\r\n  }\r\n\r\n  function isStepComplete4(step) {\r\n    return completed4.has(step);\r\n  }\r\n\r\n  // Example 5\r\n  const classes5 = useStyles5();\r\n  const [activeStep5, setActiveStep5] = React.useState(0);\r\n  const [skipped5, setSkipped5] = React.useState(new Set());\r\n  const steps5 = getSteps5();\r\n\r\n  function isStepOptional5(step) {\r\n    return step === 1;\r\n  }\r\n\r\n  function isStepFailed5(step) {\r\n    return step === 1;\r\n  }\r\n\r\n  function isStepSkipped5(step) {\r\n    return skipped5.has(step);\r\n  }\r\n\r\n  function handleNext5() {\r\n    let newSkipped = skipped5;\r\n    if (isStepSkipped5(activeStep5)) {\r\n      newSkipped = new Set(skipped5.values());\r\n      newSkipped.delete(activeStep5);\r\n    }\r\n\r\n    setActiveStep5(prevActiveStep => prevActiveStep + 1);\r\n    setSkipped5(newSkipped);\r\n  }\r\n\r\n  function handleBack5() {\r\n    setActiveStep5(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n\r\n  function handleSkip5() {\r\n    if (!isStepOptional5(activeStep5)) {\r\n      // You probably want to guard against something like this,\r\n      // it should never occur unless someone's actively trying to break something.\r\n      throw new Error(\"You can't skip a step that isn't optional.\");\r\n    }\r\n\r\n    setSkipped5(prevSkipped => {\r\n      const newSkipped = new Set(prevSkipped.values());\r\n      newSkipped.add(activeStep5);\r\n      return newSkipped;\r\n    });\r\n    setActiveStep5(prevActiveStep => prevActiveStep + 1);\r\n  }\r\n\r\n  function handleReset5() {\r\n    setActiveStep5(0);\r\n  }\r\n\r\n  // Example 6\r\n  const classes6 = useStyles6();\r\n  const [activeStep6, setActiveStep6] = React.useState(0);\r\n  const steps6 = getSteps6();\r\n\r\n  function handleNext6() {\r\n    setActiveStep6(prevActiveStep => prevActiveStep + 1);\r\n  }\r\n\r\n  function handleBack6() {\r\n    setActiveStep6(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n\r\n  function handleReset6() {\r\n    setActiveStep6(0);\r\n  }\r\n\r\n  // Example 7\r\n  const classes7 = useStyles7();\r\n  const [activeStep7, setActiveStep7] = React.useState(0);\r\n  const steps7 = getSteps7();\r\n\r\n  function handleNext7() {\r\n    setActiveStep7(prevActiveStep => prevActiveStep + 1);\r\n  }\r\n\r\n  function handleBack7() {\r\n    setActiveStep7(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n\r\n  function handleReset7() {\r\n    setActiveStep7(0);\r\n  }\r\n\r\n  const connector7 = (\r\n    <StepConnector\r\n      classes={{\r\n        active: classes7.connectorActive,\r\n        completed: classes7.connectorCompleted,\r\n        disabled: classes7.connectorDisabled,\r\n        line: classes7.connectorLine\r\n      }}\r\n    />\r\n  );\r\n\r\n  // Example 9\r\n  const classes9 = useStyles9();\r\n  const theme9 = useTheme();\r\n  const [activeStep9, setActiveStep9] = React.useState(0);\r\n  const maxSteps9 = tutorialSteps9.length;\r\n\r\n  function handleNext9() {\r\n    setActiveStep9(prevActiveStep => prevActiveStep + 1);\r\n  }\r\n\r\n  function handleBack9() {\r\n    setActiveStep9(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n\r\n  function handleStepChange9(step) {\r\n    setActiveStep9(step);\r\n  }\r\n\r\n  // Example 10\r\n  const classes10 = useStyles10();\r\n  const theme10 = useTheme();\r\n  const [activeStep10, setActiveStep10] = React.useState(0);\r\n\r\n  function handleNext10() {\r\n    setActiveStep10(prevActiveStep => prevActiveStep + 1);\r\n  }\r\n\r\n  function handleBack10() {\r\n    setActiveStep10(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n\r\n  // Example 11\r\n  const classes11 = useStyles11();\r\n  const theme11 = useTheme();\r\n  const [activeStep11, setActiveStep11] = React.useState(0);\r\n\r\n  function handleNext11() {\r\n    setActiveStep11(prevActiveStep => prevActiveStep + 1);\r\n  }\r\n\r\n  function handleBack11() {\r\n    setActiveStep11(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          Steppers convey progress through numbered steps. It provides a\r\n          wizard-like workflow.\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/steppers/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode1}\r\n            beforeCodeTitle=\"Horizontal Linear\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              The <code>Stepper</code> can be controlled by passing the current\r\n              step index (zero-based) as the <code>activeStep</code> property.\r\n              <code>Stepper</code> orientation is set using the{\" \"}\r\n              <code>orientation</code> property.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes1.root}>\r\n              <Stepper activeStep={activeStep1}>\r\n                {steps1.map((label, index) => {\r\n                  const stepProps1 = {};\r\n                  const labelProps1 = {};\r\n                  if (isStepOptional1(index)) {\r\n                    labelProps1.optional = (\r\n                      <Typography variant=\"caption\">Optional</Typography>\r\n                    );\r\n                  }\r\n                  if (isStepSkipped1(index)) {\r\n                    stepProps1.completed = false;\r\n                  }\r\n                  return (\r\n                    <Step key={label} {...stepProps1}>\r\n                      <StepLabel {...labelProps1}>{label}</StepLabel>\r\n                    </Step>\r\n                  );\r\n                })}\r\n              </Stepper>\r\n              <div>\r\n                {activeStep1 === steps1.length ? (\r\n                  <div>\r\n                    <Typography className={classes1.instructions}>\r\n                      All steps completed - you&apos;re finished\r\n                    </Typography>\r\n                    <Button onClick={handleReset1} className={classes1.button}>\r\n                      Reset\r\n                    </Button>\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <Typography className={classes1.instructions}>\r\n                      {getStepContent1(activeStep1)}\r\n                    </Typography>\r\n                    <div>\r\n                      <Button\r\n                        disabled={activeStep1 === 0}\r\n                        onClick={handleBack1}\r\n                        className={classes1.button}\r\n                      >\r\n                        Back\r\n                      </Button>\r\n                      {isStepOptional1(activeStep1) && (\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={handleSkip1}\r\n                          className={classes1.button}\r\n                        >\r\n                          Skip\r\n                        </Button>\r\n                      )}\r\n\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={handleNext1}\r\n                        className={classes1.button}\r\n                      >\r\n                        {activeStep1 === steps1.length - 1 ? \"Finish\" : \"Next\"}\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode3}\r\n            beforeCodeTitle=\"Horizontal Linear - Alternative Label\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span className=\"section-sub\">\r\n              Labels can be placed below the step icon by setting the{\" \"}\r\n              <code>alternativeLabel</code> property on the <code>Stepper</code>{\" \"}\r\n              component.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes3.root}>\r\n              <Stepper activeStep={activeStep3} alternativeLabel>\r\n                {steps3.map(label => (\r\n                  <Step key={label}>\r\n                    <StepLabel>{label}</StepLabel>\r\n                  </Step>\r\n                ))}\r\n              </Stepper>\r\n              <div>\r\n                {activeStep3 === steps3.length ? (\r\n                  <div>\r\n                    <Typography className={classes3.instructions}>\r\n                      All steps completed\r\n                    </Typography>\r\n                    <Button onClick={handleReset3}>Reset</Button>\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <Typography className={classes3.instructions}>\r\n                      {getStepContent3(activeStep3)}\r\n                    </Typography>\r\n                    <div>\r\n                      <Button\r\n                        disabled={activeStep3 === 0}\r\n                        onClick={handleBack3}\r\n                        className={classes3.backButton}\r\n                      >\r\n                        Back\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={handleNext3}\r\n                      >\r\n                        {activeStep3 === steps3.length - 1 ? \"Finish\" : \"Next\"}\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode5}\r\n            beforeCodeTitle=\"Horizontal Non Linear - Error Step\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <div className={classes5.root}>\r\n              <Stepper activeStep={activeStep5}>\r\n                {steps5.map((label, index) => {\r\n                  const stepProps = {};\r\n                  const labelProps = {};\r\n                  if (isStepOptional5(index)) {\r\n                    labelProps.optional = (\r\n                      <Typography variant=\"caption\" color=\"error\">\r\n                        Alert message\r\n                      </Typography>\r\n                    );\r\n                  }\r\n                  if (isStepFailed5(index)) {\r\n                    labelProps.error = true;\r\n                  }\r\n                  if (isStepSkipped5(index)) {\r\n                    stepProps.completed = false;\r\n                  }\r\n                  return (\r\n                    <Step key={label} {...stepProps}>\r\n                      <StepLabel {...labelProps}>{label}</StepLabel>\r\n                    </Step>\r\n                  );\r\n                })}\r\n              </Stepper>\r\n              <div>\r\n                {activeStep5 === steps5.length ? (\r\n                  <div>\r\n                    <Typography className={classes5.instructions}>\r\n                      All steps completed - you&apos;re finished\r\n                    </Typography>\r\n                    <Button onClick={handleReset5} className={classes5.button}>\r\n                      Reset\r\n                    </Button>\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <Typography className={classes5.instructions}>\r\n                      {getStepContent5(activeStep5)}\r\n                    </Typography>\r\n                    <div>\r\n                      <Button\r\n                        disabled={activeStep5 === 0}\r\n                        onClick={handleBack5}\r\n                        className={classes5.button}\r\n                      >\r\n                        Back\r\n                      </Button>\r\n                      {isStepOptional5(activeStep5) && (\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={handleSkip5}\r\n                          className={classes5.button}\r\n                        >\r\n                          Skip\r\n                        </Button>\r\n                      )}\r\n\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={handleNext5}\r\n                        className={classes5.button}\r\n                      >\r\n                        {activeStep5 === steps5.length - 1 ? \"Finish\" : \"Next\"}\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode7}\r\n            beforeCodeTitle=\"Customized Stepper\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>Here is an example of customizing the component.</span>\r\n            <div className={classes7.root}>\r\n              <Stepper activeStep={activeStep7} connector={connector7}>\r\n                {steps7.map(label => (\r\n                  <Step key={label}>\r\n                    <StepLabel>{label}</StepLabel>\r\n                  </Step>\r\n                ))}\r\n              </Stepper>\r\n              <Stepper\r\n                alternativeLabel\r\n                activeStep={activeStep7}\r\n                connector={connector7}\r\n              >\r\n                {steps7.map(label => (\r\n                  <Step key={label}>\r\n                    <StepLabel>{label}</StepLabel>\r\n                  </Step>\r\n                ))}\r\n              </Stepper>\r\n              <div>\r\n                {activeStep7 === steps7.length ? (\r\n                  <div>\r\n                    <Typography className={classes7.instructions}>\r\n                      All steps completed - you&apos;re finished\r\n                    </Typography>\r\n                    <Button onClick={handleReset7} className={classes7.button}>\r\n                      Reset\r\n                    </Button>\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <Typography className={classes7.instructions}>\r\n                      {getStepContent7(activeStep7)}\r\n                    </Typography>\r\n                    <div>\r\n                      <Button\r\n                        disabled={activeStep7 === 0}\r\n                        onClick={handleBack7}\r\n                        className={classes7.button}\r\n                      >\r\n                        Back\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={handleNext7}\r\n                        className={classes7.button}\r\n                      >\r\n                        {activeStep7 === steps7.length - 1 ? \"Finish\" : \"Next\"}\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode10}\r\n            beforeCodeTitle=\"Mobile Stepper - Dots\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>Use dots when the number of steps isn’t large.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <MobileStepper\r\n              variant=\"dots\"\r\n              steps={6}\r\n              position=\"static\"\r\n              activeStep={activeStep10}\r\n              className={classes10.root}\r\n              nextButton={\r\n                <Button\r\n                  size=\"small\"\r\n                  onClick={handleNext10}\r\n                  disabled={activeStep10 === 5}\r\n                >\r\n                  Next\r\n                  {theme10.direction === \"rtl\" ? (\r\n                    <KeyboardArrowLeft />\r\n                  ) : (\r\n                    <KeyboardArrowRight />\r\n                  )}\r\n                </Button>\r\n              }\r\n              backButton={\r\n                <Button\r\n                  size=\"small\"\r\n                  onClick={handleBack10}\r\n                  disabled={activeStep10 === 0}\r\n                >\r\n                  {theme10.direction === \"rtl\" ? (\r\n                    <KeyboardArrowRight />\r\n                  ) : (\r\n                    <KeyboardArrowLeft />\r\n                  )}\r\n                  Back\r\n                </Button>\r\n              }\r\n            />\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode11}\r\n            beforeCodeTitle=\"Mobile Stepper - Progress\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              Use a progress bar when there are many steps, or if there are\r\n              steps that need to be inserted during the process (based on\r\n              responses to earlier steps).\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <MobileStepper\r\n              variant=\"progress\"\r\n              steps={6}\r\n              position=\"static\"\r\n              activeStep={activeStep11}\r\n              className={classes11.root}\r\n              nextButton={\r\n                <Button\r\n                  size=\"small\"\r\n                  onClick={handleNext11}\r\n                  disabled={activeStep11 === 5}\r\n                >\r\n                  Next\r\n                  {theme11.direction === \"rtl\" ? (\r\n                    <KeyboardArrowLeft />\r\n                  ) : (\r\n                    <KeyboardArrowRight />\r\n                  )}\r\n                </Button>\r\n              }\r\n              backButton={\r\n                <Button\r\n                  size=\"small\"\r\n                  onClick={handleBack11}\r\n                  disabled={activeStep11 === 0}\r\n                >\r\n                  {theme11.direction === \"rtl\" ? (\r\n                    <KeyboardArrowRight />\r\n                  ) : (\r\n                    <KeyboardArrowLeft />\r\n                  )}\r\n                  Back\r\n                </Button>\r\n              }\r\n            />\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode2}\r\n            beforeCodeTitle=\"Horizontal Non-linear\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              Non-linear steppers allow users to enter a multi-step flow at any\r\n              point.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes2.root}>\r\n              <Stepper nonLinear activeStep={activeStep2}>\r\n                {steps2.map((label, index) => (\r\n                  <Step key={label}>\r\n                    <StepButton\r\n                      onClick={handleStep2(index)}\r\n                      completed={completed2[index]}\r\n                    >\r\n                      {label}\r\n                    </StepButton>\r\n                  </Step>\r\n                ))}\r\n              </Stepper>\r\n              <div>\r\n                {allStepsCompleted2() ? (\r\n                  <div>\r\n                    <Typography className={classes2.instructions}>\r\n                      All steps completed - you&apos;re finished\r\n                    </Typography>\r\n                    <Button onClick={handleReset2}>Reset</Button>\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <Typography className={classes2.instructions}>\r\n                      {getStepContent2(activeStep2)}\r\n                    </Typography>\r\n                    <div>\r\n                      <Button\r\n                        disabled={activeStep2 === 0}\r\n                        onClick={handleBack2}\r\n                        className={classes2.button}\r\n                      >\r\n                        Back\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={handleNext2}\r\n                        className={classes2.button}\r\n                      >\r\n                        Next\r\n                      </Button>\r\n                      {activeStep2 !== steps2.length &&\r\n                        (completed2[activeStep2] ? (\r\n                          <Typography\r\n                            variant=\"caption\"\r\n                            className={classes2.completed}\r\n                          >\r\n                            Step {activeStep2 + 1} already completed\r\n                          </Typography>\r\n                        ) : (\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={handleComplete2}\r\n                          >\r\n                            {completedSteps2() === totalSteps2() - 1\r\n                              ? \"Finish\"\r\n                              : \"Complete Step\"}\r\n                          </Button>\r\n                        ))}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode4}\r\n            beforeCodeTitle=\"Horizontal Non Linear - Alternative Label\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <div className={classes4.root}>\r\n              <Stepper alternativeLabel nonLinear activeStep={activeStep4}>\r\n                {steps4.map((label, index) => {\r\n                  const stepProps = {};\r\n                  const buttonProps = {};\r\n                  if (isStepOptional4(index)) {\r\n                    buttonProps.optional = (\r\n                      <Typography variant=\"caption\">Optional</Typography>\r\n                    );\r\n                  }\r\n                  if (isStepSkipped4(index)) {\r\n                    stepProps.completed = false;\r\n                  }\r\n                  return (\r\n                    <Step key={label} {...stepProps}>\r\n                      <StepButton\r\n                        onClick={handleStep4(index)}\r\n                        completed={isStepComplete4(index)}\r\n                        {...buttonProps}\r\n                      >\r\n                        {label}\r\n                      </StepButton>\r\n                    </Step>\r\n                  );\r\n                })}\r\n              </Stepper>\r\n              <div>\r\n                {allStepsCompleted4() ? (\r\n                  <div>\r\n                    <Typography className={classes4.instructions}>\r\n                      All steps completed - you&apos;re finished\r\n                    </Typography>\r\n                    <Button onClick={handleReset4}>Reset</Button>\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <Typography className={classes4.instructions}>\r\n                      {getStepContent4(activeStep4)}\r\n                    </Typography>\r\n                    <div>\r\n                      <Button\r\n                        disabled={activeStep4 === 0}\r\n                        onClick={handleBack4}\r\n                        className={classes4.button}\r\n                      >\r\n                        Back\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={handleNext4}\r\n                        className={classes4.button}\r\n                      >\r\n                        Next\r\n                      </Button>\r\n                      {isStepOptional4(activeStep4) &&\r\n                        !completed4.has(activeStep4) && (\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={handleSkip4}\r\n                            className={classes4.button}\r\n                          >\r\n                            Skip\r\n                          </Button>\r\n                        )}\r\n\r\n                      {activeStep4 !== steps4.length &&\r\n                        (completed4.has(activeStep4) ? (\r\n                          <Typography\r\n                            variant=\"caption\"\r\n                            className={classes4.completed}\r\n                          >\r\n                            Step {activeStep4 + 1} already completed\r\n                          </Typography>\r\n                        ) : (\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={handleComplete4}\r\n                          >\r\n                            {completedSteps4() === totalSteps4() - 1\r\n                              ? \"Finish\"\r\n                              : \"Complete Step\"}\r\n                          </Button>\r\n                        ))}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode6}\r\n            beforeCodeTitle=\"Vertical Stepper\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <div className={classes6.root}>\r\n              <Stepper activeStep={activeStep6} orientation=\"vertical\">\r\n                {steps6.map((label, index) => (\r\n                  <Step key={label}>\r\n                    <StepLabel>{label}</StepLabel>\r\n                    <StepContent>\r\n                      <Typography>{getStepContent6(index)}</Typography>\r\n                      <div className={classes6.actionsContainer}>\r\n                        <div>\r\n                          <Button\r\n                            disabled={activeStep6 === 0}\r\n                            onClick={handleBack6}\r\n                            className={classes6.button}\r\n                          >\r\n                            Back\r\n                          </Button>\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={handleNext6}\r\n                            className={classes6.button}\r\n                          >\r\n                            {activeStep6 === steps6.length - 1\r\n                              ? \"Finish\"\r\n                              : \"Next\"}\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    </StepContent>\r\n                  </Step>\r\n                ))}\r\n              </Stepper>\r\n              {activeStep6 === steps6.length && (\r\n                <Paper square elevation={0} className={classes6.resetContainer}>\r\n                  <Typography>\r\n                    All steps completed - you&apos;re finished\r\n                  </Typography>\r\n                  <Button onClick={handleReset6} className={classes6.button}>\r\n                    Reset\r\n                  </Button>\r\n                </Paper>\r\n              )}\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode9}\r\n            beforeCodeTitle=\"Mobile Stepper - Text with Carousel effect\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              This demo is very similar to the previous, the difference is the\r\n              usage of react-swipeable-views to make the transition of steps.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes9.root}>\r\n              <Paper square elevation={0} className={classes9.header}>\r\n                <Typography>{tutorialSteps9[activeStep9].label}</Typography>\r\n              </Paper>\r\n              <AutoPlaySwipeableViews9\r\n                axis={theme9.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n                index={activeStep9}\r\n                onChangeIndex={handleStepChange9}\r\n                enableMouseEvents\r\n              >\r\n                {tutorialSteps9.map((step, index) => (\r\n                  <div key={step.label}>\r\n                    {Math.abs(activeStep9 - index) <= 2 ? (\r\n                      <img\r\n                        className={classes9.img}\r\n                        src={step.imgPath}\r\n                        alt={step.label}\r\n                      />\r\n                    ) : null}\r\n                  </div>\r\n                ))}\r\n              </AutoPlaySwipeableViews9>\r\n              <MobileStepper\r\n                steps={maxSteps9}\r\n                position=\"static\"\r\n                variant=\"text\"\r\n                activeStep={activeStep9}\r\n                nextButton={\r\n                  <Button\r\n                    size=\"small\"\r\n                    onClick={handleNext9}\r\n                    disabled={activeStep9 === maxSteps9 - 1}\r\n                  >\r\n                    Next\r\n                    {theme9.direction === \"rtl\" ? (\r\n                      <KeyboardArrowLeft />\r\n                    ) : (\r\n                      <KeyboardArrowRight />\r\n                    )}\r\n                  </Button>\r\n                }\r\n                backButton={\r\n                  <Button\r\n                    size=\"small\"\r\n                    onClick={handleBack9}\r\n                    disabled={activeStep9 === 0}\r\n                  >\r\n                    {theme9.direction === \"rtl\" ? (\r\n                      <KeyboardArrowRight />\r\n                    ) : (\r\n                      <KeyboardArrowLeft />\r\n                    )}\r\n                    Back\r\n                  </Button>\r\n                }\r\n              />\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '90%',\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return 'Select campaign settings...';\r\n    case 1:\r\n      return 'What is an ad group anyways?';\r\n    case 2:\r\n      return 'This is the bit I really care about!';\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\nexport default function HorizontalLinearStepper() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [skipped, setSkipped] = React.useState(new Set());\r\n  const steps = getSteps();\r\n\r\n  function isStepOptional(step) {\r\n    return step === 1;\r\n  }\r\n\r\n  function isStepSkipped(step) {\r\n    return skipped.has(step);\r\n  }\r\n\r\n  function handleNext() {\r\n    let newSkipped = skipped;\r\n    if (isStepSkipped(activeStep)) {\r\n      newSkipped = new Set(newSkipped.values());\r\n      newSkipped.delete(activeStep);\r\n    }\r\n\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n    setSkipped(newSkipped);\r\n  }\r\n\r\n  function handleBack() {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n\r\n  function handleSkip() {\r\n    if (!isStepOptional(activeStep)) {\r\n      // You probably want to guard against something like this,\r\n      // it should never occur unless someone's actively trying to break something.\r\n      throw new Error(\"You can't skip a step that isn't optional.\");\r\n    }\r\n\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n    setSkipped(prevSkipped => {\r\n      const newSkipped = new Set(prevSkipped.values());\r\n      newSkipped.add(activeStep);\r\n      return newSkipped;\r\n    });\r\n  }\r\n\r\n  function handleReset() {\r\n    setActiveStep(0);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep}>\r\n        {steps.map((label, index) => {\r\n          const stepProps = {};\r\n          const labelProps = {};\r\n          if (isStepOptional(index)) {\r\n            labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\r\n          }\r\n          if (isStepSkipped(index)) {\r\n            stepProps.completed = false;\r\n          }\r\n          return (\r\n            <Step key={label} {...stepProps}>\r\n              <StepLabel {...labelProps}>{label}</StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n      <div>\r\n        {activeStep === steps.length ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              All steps completed - you&apos;re finished\r\n            </Typography>\r\n            <Button onClick={handleReset} className={classes.button}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n            <div>\r\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n                Back\r\n              </Button>\r\n              {isStepOptional(activeStep) && (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={handleSkip}\r\n                  className={classes.button}\r\n                >\r\n                  Skip\r\n                </Button>\r\n              )}\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleNext}\r\n                className={classes.button}\r\n              >\r\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepButton from '@material-ui/core/StepButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '90%',\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  completed: {\r\n    display: 'inline-block',\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return 'Step 1: Select campaign settings...';\r\n    case 1:\r\n      return 'Step 2: What is an ad group anyways?';\r\n    case 2:\r\n      return 'Step 3: This is the bit I really care about!';\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\nexport default function HorizontalNonLinearStepper() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [completed, setCompleted] = React.useState({});\r\n  const steps = getSteps();\r\n\r\n  function totalSteps() {\r\n    return steps.length;\r\n  }\r\n\r\n  function completedSteps() {\r\n    return Object.keys(completed).length;\r\n  }\r\n\r\n  function isLastStep() {\r\n    return activeStep === totalSteps() - 1;\r\n  }\r\n\r\n  function allStepsCompleted() {\r\n    return completedSteps() === totalSteps();\r\n  }\r\n\r\n  function handleNext() {\r\n    const newActiveStep =\r\n      isLastStep() && !allStepsCompleted()\r\n        ? // It's the last step, but not all steps have been completed,\r\n          // find the first step that has been completed\r\n          steps.findIndex((step, i) => !(i in completed))\r\n        : activeStep + 1;\r\n    setActiveStep(newActiveStep);\r\n  }\r\n\r\n  function handleBack() {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n\r\n  const handleStep = step => () => {\r\n    setActiveStep(step);\r\n  };\r\n\r\n  function handleComplete() {\r\n    const newCompleted = completed;\r\n    newCompleted[activeStep] = true;\r\n    setCompleted(newCompleted);\r\n    handleNext();\r\n  }\r\n\r\n  function handleReset() {\r\n    setActiveStep(0);\r\n    setCompleted({});\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper nonLinear activeStep={activeStep}>\r\n        {steps.map((label, index) => (\r\n          <Step key={label}>\r\n            <StepButton onClick={handleStep(index)} completed={completed[index]}>\r\n              {label}\r\n            </StepButton>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div>\r\n        {allStepsCompleted() ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              All steps completed - you&apos;re finished\r\n            </Typography>\r\n            <Button onClick={handleReset}>Reset</Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n            <div>\r\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n                Back\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleNext}\r\n                className={classes.button}\r\n              >\r\n                Next\r\n              </Button>\r\n              {activeStep !== steps.length &&\r\n                (completed[activeStep] ? (\r\n                  <Typography variant=\"caption\" className={classes.completed}>\r\n                    Step {activeStep + 1} already completed\r\n                  </Typography>\r\n                ) : (\r\n                  <Button variant=\"contained\" color=\"primary\" onClick={handleComplete}>\r\n                    {completedSteps() === totalSteps() - 1 ? 'Finish' : 'Complete Step'}\r\n                  </Button>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '90%',\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Select master blaster campaign settings', 'Create an ad group', 'Create an ad'];\r\n}\r\n\r\nfunction getStepContent(stepIndex) {\r\n  switch (stepIndex) {\r\n    case 0:\r\n      return 'Select campaign settings...';\r\n    case 1:\r\n      return 'What is an ad group anyways?';\r\n    case 2:\r\n      return 'This is the bit I really care about!';\r\n    default:\r\n      return 'Uknown stepIndex';\r\n  }\r\n}\r\n\r\nexport default function HorizontalLabelPositionBelowStepper() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = getSteps();\r\n\r\n  function handleNext() {\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n  }\r\n\r\n  function handleBack() {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n\r\n  function handleReset() {\r\n    setActiveStep(0);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep} alternativeLabel>\r\n        {steps.map(label => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div>\r\n        {activeStep === steps.length ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>All steps completed</Typography>\r\n            <Button onClick={handleReset}>Reset</Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n            <div>\r\n              <Button\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n                className={classes.backButton}\r\n              >\r\n                Back\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\r\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode4 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepButton from '@material-ui/core/StepButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '90%',\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  completed: {\r\n    display: 'inline-block',\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return 'Step 1: Select campaign settings...';\r\n    case 1:\r\n      return 'Step 2: What is an ad group anyways?';\r\n    case 2:\r\n      return 'Step 3: This is the bit I really care about!';\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\nexport default function HorizontalNonLinearAlternativeLabelStepper() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [completed, setCompleted] = React.useState(new Set());\r\n  const [skipped, setSkipped] = React.useState(new Set());\r\n  const steps = getSteps();\r\n\r\n  function totalSteps() {\r\n    return getSteps().length;\r\n  }\r\n\r\n  function isStepOptional(step) {\r\n    return step === 1;\r\n  }\r\n\r\n  function handleSkip() {\r\n    if (!isStepOptional(activeStep)) {\r\n      // You probably want to guard against something like this\r\n      // it should never occur unless someone's actively trying to break something.\r\n      throw new Error(\"You can't skip a step that isn't optional.\");\r\n    }\r\n\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n    setSkipped(prevSkipped => {\r\n      const newSkipped = new Set(prevSkipped.values());\r\n      newSkipped.add(activeStep);\r\n      return newSkipped;\r\n    });\r\n  }\r\n\r\n  function skippedSteps() {\r\n    return skipped.size;\r\n  }\r\n\r\n  function completedSteps() {\r\n    return completed.size;\r\n  }\r\n\r\n  function allStepsCompleted() {\r\n    return completedSteps() === totalSteps() - skippedSteps();\r\n  }\r\n\r\n  function isLastStep() {\r\n    return activeStep === totalSteps() - 1;\r\n  }\r\n\r\n  function handleNext() {\r\n    const newActiveStep =\r\n      isLastStep() && !allStepsCompleted()\r\n        ? // It's the last step, but not all steps have been completed\r\n          // find the first step that has been completed\r\n          steps.findIndex((step, i) => !completed.has(i))\r\n        : activeStep + 1;\r\n\r\n    setActiveStep(newActiveStep);\r\n  }\r\n\r\n  function handleBack() {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n\r\n  const handleStep = step => () => {\r\n    setActiveStep(step);\r\n  };\r\n\r\n  function handleComplete() {\r\n    const newCompleted = new Set(completed);\r\n    newCompleted.add(activeStep);\r\n    setCompleted(newCompleted);\r\n\r\n    /**\r\n     * Sigh... it would be much nicer to replace the following if conditional with\r\n     * \\`if (!this.allStepsComplete())\\` however state is not set when we do this,\r\n     * thus we have to resort to not being very DRY.\r\n     */\r\n    if (completed.size !== totalSteps() - skippedSteps()) {\r\n      handleNext();\r\n    }\r\n  }\r\n\r\n  function handleReset() {\r\n    setActiveStep(0);\r\n    setCompleted(new Set());\r\n    setSkipped(new Set());\r\n  }\r\n\r\n  function isStepSkipped(step) {\r\n    return skipped.has(step);\r\n  }\r\n\r\n  function isStepComplete(step) {\r\n    return completed.has(step);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper alternativeLabel nonLinear activeStep={activeStep}>\r\n        {steps.map((label, index) => {\r\n          const stepProps = {};\r\n          const buttonProps = {};\r\n          if (isStepOptional(index)) {\r\n            buttonProps.optional = <Typography variant=\"caption\">Optional</Typography>;\r\n          }\r\n          if (isStepSkipped(index)) {\r\n            stepProps.completed = false;\r\n          }\r\n          return (\r\n            <Step key={label} {...stepProps}>\r\n              <StepButton\r\n                onClick={handleStep(index)}\r\n                completed={isStepComplete(index)}\r\n                {...buttonProps}\r\n              >\r\n                {label}\r\n              </StepButton>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n      <div>\r\n        {allStepsCompleted() ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              All steps completed - you&apos;re finished\r\n            </Typography>\r\n            <Button onClick={handleReset}>Reset</Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n            <div>\r\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n                Back\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleNext}\r\n                className={classes.button}\r\n              >\r\n                Next\r\n              </Button>\r\n              {isStepOptional(activeStep) && !completed.has(activeStep) && (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={handleSkip}\r\n                  className={classes.button}\r\n                >\r\n                  Skip\r\n                </Button>\r\n              )}\r\n\r\n              {activeStep !== steps.length &&\r\n                (completed.has(activeStep) ? (\r\n                  <Typography variant=\"caption\" className={classes.completed}>\r\n                    Step {activeStep + 1} already completed\r\n                  </Typography>\r\n                ) : (\r\n                  <Button variant=\"contained\" color=\"primary\" onClick={handleComplete}>\r\n                    {completedSteps() === totalSteps() - 1 ? 'Finish' : 'Complete Step'}\r\n                  </Button>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode5 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '90%',\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return 'Select campaign settings...';\r\n    case 1:\r\n      return 'What is an ad group anyways?';\r\n    case 2:\r\n      return 'This is the bit I really care about!';\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\nexport default function HorizontalNonLinearStepperWithError() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [skipped, setSkipped] = React.useState(new Set());\r\n  const steps = getSteps();\r\n\r\n  function isStepOptional(step) {\r\n    return step === 1;\r\n  }\r\n\r\n  function isStepFailed(step) {\r\n    return step === 1;\r\n  }\r\n\r\n  function isStepSkipped(step) {\r\n    return skipped.has(step);\r\n  }\r\n\r\n  function handleNext() {\r\n    let newSkipped = skipped;\r\n    if (isStepSkipped(activeStep)) {\r\n      newSkipped = new Set(skipped.values());\r\n      newSkipped.delete(activeStep);\r\n    }\r\n\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n    setSkipped(newSkipped);\r\n  }\r\n\r\n  function handleBack() {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n\r\n  function handleSkip() {\r\n    if (!isStepOptional(activeStep)) {\r\n      // You probably want to guard against something like this,\r\n      // it should never occur unless someone's actively trying to break something.\r\n      throw new Error(\"You can't skip a step that isn't optional.\");\r\n    }\r\n\r\n    setSkipped(prevSkipped => {\r\n      const newSkipped = new Set(prevSkipped.values());\r\n      newSkipped.add(activeStep);\r\n      return newSkipped;\r\n    });\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n  }\r\n\r\n  function handleReset() {\r\n    setActiveStep(0);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep}>\r\n        {steps.map((label, index) => {\r\n          const stepProps = {};\r\n          const labelProps = {};\r\n          if (isStepOptional(index)) {\r\n            labelProps.optional = (\r\n              <Typography variant=\"caption\" color=\"error\">\r\n                Alert message\r\n              </Typography>\r\n            );\r\n          }\r\n          if (isStepFailed(index)) {\r\n            labelProps.error = true;\r\n          }\r\n          if (isStepSkipped(index)) {\r\n            stepProps.completed = false;\r\n          }\r\n          return (\r\n            <Step key={label} {...stepProps}>\r\n              <StepLabel {...labelProps}>{label}</StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n      <div>\r\n        {activeStep === steps.length ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              All steps completed - you&apos;re finished\r\n            </Typography>\r\n            <Button onClick={handleReset} className={classes.button}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n            <div>\r\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n                Back\r\n              </Button>\r\n              {isStepOptional(activeStep) && (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={handleSkip}\r\n                  className={classes.button}\r\n                >\r\n                  Skip\r\n                </Button>\r\n              )}\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleNext}\r\n                className={classes.button}\r\n              >\r\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode6 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport StepContent from '@material-ui/core/StepContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '90%',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  actionsContainer: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  resetContainer: {\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return \\`For each ad campaign that you create, you can control how much\r\n              you're willing to spend on clicks and conversions, which networks\r\n              and geographical locations you want your ads to show on, and more.\\`;\r\n    case 1:\r\n      return 'An ad group contains one or more ads which target a shared set of keywords.';\r\n    case 2:\r\n      return \\`Try out different ad text to see what brings in the most customers,\r\n              and learn how to enhance your ads using features like ad extensions.\r\n              If you run into any problems with your ads, find out how to tell if\r\n              they're running and how to resolve approval issues.\\`;\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\nexport default function VerticalLinearStepper() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = getSteps();\r\n\r\n  function handleNext() {\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n  }\r\n\r\n  function handleBack() {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n\r\n  function handleReset() {\r\n    setActiveStep(0);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep} orientation=\"vertical\">\r\n        {steps.map((label, index) => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n            <StepContent>\r\n              <Typography>{getStepContent(index)}</Typography>\r\n              <div className={classes.actionsContainer}>\r\n                <div>\r\n                  <Button\r\n                    disabled={activeStep === 0}\r\n                    onClick={handleBack}\r\n                    className={classes.button}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={handleNext}\r\n                    className={classes.button}\r\n                  >\r\n                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </StepContent>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      {activeStep === steps.length && (\r\n        <Paper square elevation={0} className={classes.resetContainer}>\r\n          <Typography>All steps completed - you&apos;re finished</Typography>\r\n          <Button onClick={handleReset} className={classes.button}>\r\n            Reset\r\n          </Button>\r\n        </Paper>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode7 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport StepConnector from '@material-ui/core/StepConnector';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '90%',\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  connectorActive: {\r\n    '& $connectorLine': {\r\n      borderColor: theme.palette.secondary.main,\r\n    },\r\n  },\r\n  connectorCompleted: {\r\n    '& $connectorLine': {\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n  connectorDisabled: {\r\n    '& $connectorLine': {\r\n      borderColor: theme.palette.grey[100],\r\n    },\r\n  },\r\n  connectorLine: {\r\n    transition: theme.transitions.create('border-color'),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return 'Select campaign settings...';\r\n    case 1:\r\n      return 'What is an ad group anyways?';\r\n    case 2:\r\n      return 'This is the bit I really care about!';\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\nexport default function CustomizedSteppers() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = getSteps();\r\n\r\n  function handleNext() {\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n  }\r\n\r\n  function handleBack() {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n\r\n  function handleReset() {\r\n    setActiveStep(0);\r\n  }\r\n\r\n  const connector = (\r\n    <StepConnector\r\n      classes={{\r\n        active: classes.connectorActive,\r\n        completed: classes.connectorCompleted,\r\n        disabled: classes.connectorDisabled,\r\n        line: classes.connectorLine,\r\n      }}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep} connector={connector}>\r\n        {steps.map(label => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <Stepper alternativeLabel activeStep={activeStep} connector={connector}>\r\n        {steps.map(label => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div>\r\n        {activeStep === steps.length ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              All steps completed - you&apos;re finished\r\n            </Typography>\r\n            <Button onClick={handleReset} className={classes.button}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n            <div>\r\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n                Back\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleNext}\r\n                className={classes.button}\r\n              >\r\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n`;\r\n\r\nconst jsCode9 = `\r\nimport React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport MobileStepper from '@material-ui/core/MobileStepper';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { autoPlay } from 'react-swipeable-views-utils';\r\n\r\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\r\n\r\nconst tutorialSteps = [\r\n  {\r\n    label: 'San Francisco – Oakland Bay Bridge, United States',\r\n    imgPath:\r\n      'https://images.unsplash.com/photo-1537944434965-cf4679d1a598?auto=format&fit=crop&w=400&h=250&q=60',\r\n  },\r\n  {\r\n    label: 'Bird',\r\n    imgPath:\r\n      'https://images.unsplash.com/photo-1538032746644-0212e812a9e7?auto=format&fit=crop&w=400&h=250&q=60',\r\n  },\r\n  {\r\n    label: 'Bali, Indonesia',\r\n    imgPath:\r\n      'https://images.unsplash.com/photo-1537996194471-e657df975ab4?auto=format&fit=crop&w=400&h=250&q=80',\r\n  },\r\n  {\r\n    label: 'NeONBRAND Digital Marketing, Las Vegas, United States',\r\n    imgPath:\r\n      'https://images.unsplash.com/photo-1518732714860-b62714ce0c59?auto=format&fit=crop&w=400&h=250&q=60',\r\n  },\r\n  {\r\n    label: 'Goč, Serbia',\r\n    imgPath:\r\n      'https://images.unsplash.com/photo-1512341689857-198e7e2f3ca8?auto=format&fit=crop&w=400&h=250&q=60',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    maxWidth: 400,\r\n    flexGrow: 1,\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    height: 50,\r\n    paddingLeft: theme.spacing(4),\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  img: {\r\n    height: 255,\r\n    display: 'block',\r\n    maxWidth: 400,\r\n    overflow: 'hidden',\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nfunction SwipeableTextMobileStepper() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const maxSteps = tutorialSteps.length;\r\n\r\n  function handleNext() {\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n  }\r\n\r\n  function handleBack() {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n\r\n  function handleStepChange(step) {\r\n    setActiveStep(step);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper square elevation={0} className={classes.header}>\r\n        <Typography>{tutorialSteps[activeStep].label}</Typography>\r\n      </Paper>\r\n      <AutoPlaySwipeableViews\r\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n        index={activeStep}\r\n        onChangeIndex={handleStepChange}\r\n        enableMouseEvents\r\n      >\r\n        {tutorialSteps.map((step, index) => (\r\n          <div key={step.label}>\r\n            {Math.abs(activeStep - index) <= 2 ? (\r\n              <img className={classes.img} src={step.imgPath} alt={step.label} />\r\n            ) : null}\r\n          </div>\r\n        ))}\r\n      </AutoPlaySwipeableViews>\r\n      <MobileStepper\r\n        steps={maxSteps}\r\n        position=\"static\"\r\n        variant=\"text\"\r\n        activeStep={activeStep}\r\n        nextButton={\r\n          <Button size=\"small\" onClick={handleNext} disabled={activeStep === maxSteps - 1}>\r\n            Next\r\n            {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n          </Button>\r\n        }\r\n        backButton={\r\n          <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\r\n            {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n            Back\r\n          </Button>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SwipeableTextMobileStepper;\r\n`;\r\nconst jsCode10 = `\r\nimport React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport MobileStepper from '@material-ui/core/MobileStepper';\r\nimport Button from '@material-ui/core/Button';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 400,\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nexport default function DotsMobileStepper() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n  function handleNext() {\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n  }\r\n\r\n  function handleBack() {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n\r\n  return (\r\n    <MobileStepper\r\n      variant=\"dots\"\r\n      steps={6}\r\n      position=\"static\"\r\n      activeStep={activeStep}\r\n      className={classes.root}\r\n      nextButton={\r\n        <Button size=\"small\" onClick={handleNext} disabled={activeStep === 5}>\r\n          Next\r\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n        </Button>\r\n      }\r\n      backButton={\r\n        <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\r\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n          Back\r\n        </Button>\r\n      }\r\n    />\r\n  );\r\n}\r\n`;\r\nconst jsCode11 = `\r\nimport React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport MobileStepper from '@material-ui/core/MobileStepper';\r\nimport Button from '@material-ui/core/Button';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 400,\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nexport default function ProgressMobileStepper() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n  function handleNext() {\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n  }\r\n\r\n  function handleBack() {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  }\r\n\r\n  return (\r\n    <MobileStepper\r\n      variant=\"progress\"\r\n      steps={6}\r\n      position=\"static\"\r\n      activeStep={activeStep}\r\n      className={classes.root}\r\n      nextButton={\r\n        <Button size=\"small\" onClick={handleNext} disabled={activeStep === 5}>\r\n          Next\r\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n        </Button>\r\n      }\r\n      backButton={\r\n        <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\r\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n          Back\r\n        </Button>\r\n      }\r\n    />\r\n  );\r\n}\r\n`;\r\n","/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport {makeStyles, withStyles} from \"@material-ui/core/styles\";\r\nimport {useTheme} from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Tab, AppBar, Tabs, Typography, Paper} from \"@material-ui/core\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport PhoneIcon from \"@material-ui/icons/Phone\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport PersonPinIcon from \"@material-ui/icons/PersonPin\";\r\nimport HelpIcon from \"@material-ui/icons/Help\";\r\nimport ShoppingBasket from \"@material-ui/icons/ShoppingBasket\";\r\nimport ThumbDown from \"@material-ui/icons/ThumbDown\";\r\nimport ThumbUp from \"@material-ui/icons/ThumbUp\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\nfunction TabContainer1(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer1.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\n// Example 2\r\nfunction TabContainer2(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer2.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\n// Example 4\r\nfunction TabContainer4({ children, dir }) {\r\n  return (\r\n    <Typography component=\"div\" dir={dir} style={{ padding: 8 * 3 }}>\r\n      {children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer4.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  dir: PropTypes.string.isRequired\r\n};\r\n\r\nconst useStyles4 = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    width: 500\r\n  }\r\n}));\r\n\r\n// Example 5\r\nconst useStyles5 = makeStyles({\r\n  root: {\r\n    flexGrow: 1\r\n  }\r\n});\r\n\r\n// Example 6\r\nfunction TabContainer6(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer6.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nconst useStyles6 = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\n// Example 7\r\nfunction TabContainer7(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer7.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nconst useStyles7 = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\n// Example 8\r\nfunction TabContainer8(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer8.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nconst useStyles8 = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\n// Example 9\r\nconst AntTabs9 = withStyles({\r\n  root: {\r\n    borderBottom: \"1px solid #e8e8e8\"\r\n  },\r\n  indicator: {\r\n    backgroundColor: \"#1890ff\"\r\n  }\r\n})(Tabs);\r\n\r\nconst AntTab9 = withStyles(theme => ({\r\n  root: {\r\n    textTransform: \"none\",\r\n    minWidth: 72,\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    marginRight: theme.spacing(4),\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"'\r\n    ].join(\",\"),\r\n    \"&:hover\": {\r\n      color: \"#40a9ff\",\r\n      opacity: 1\r\n    },\r\n    \"&$selected\": {\r\n      color: \"#1890ff\",\r\n      fontWeight: theme.typography.fontWeightMedium\r\n    },\r\n    \"&:focus\": {\r\n      color: \"#40a9ff\"\r\n    }\r\n  },\r\n  selected: {}\r\n}))(props => <Tab disableRipple {...props} />);\r\n\r\nconst StyledTabs9 = withStyles({\r\n  indicator: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    \"& > div\": {\r\n      maxWidth: 40,\r\n      width: \"100%\",\r\n      backgroundColor: \"#635ee7\"\r\n    }\r\n  }\r\n})(props => <Tabs {...props} TabIndicatorProps={{ children: <div /> }} />);\r\n\r\nconst StyledTab9 = withStyles(theme => ({\r\n  root: {\r\n    textTransform: \"none\",\r\n    color: \"#fff\",\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: theme.typography.pxToRem(15),\r\n    marginRight: theme.spacing(1),\r\n    \"&:focus\": {\r\n      opacity: 1\r\n    }\r\n  }\r\n}))(props => <Tab disableRipple {...props} />);\r\n\r\nconst useStyles9 = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  typography: {\r\n    padding: theme.spacing(3)\r\n  },\r\n  demo1: {\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  demo2: {\r\n    backgroundColor: \"#2e1534\"\r\n  }\r\n}));\r\n\r\n// Example 10\r\nfunction TabContainer10(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer10.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nfunction LinkTab10(props) {\r\n  return (\r\n    <Tab\r\n      component=\"a\"\r\n      onClick={event => {\r\n        event.preventDefault();\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nconst useStyles10 = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\n// Example 11\r\nconst useStyles11 = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 500\r\n  }\r\n});\r\n\r\nexport default function TabsExamplesPage() {\r\n  // Example 1\r\n  const classes1 = useStyles1();\r\n  const [value1, setValue1] = React.useState(0);\r\n\r\n  function handleChange1(event, newValue) {\r\n    setValue1(newValue);\r\n  }\r\n\r\n  // Example 2\r\n  const classes2 = useStyles2();\r\n  const [value2, setValue2] = React.useState(\"one\");\r\n\r\n  function handleChange2(event, newValue) {\r\n    setValue2(newValue);\r\n  }\r\n\r\n  // Example 3\r\n  const [value3, setValue3] = React.useState(2);\r\n\r\n  function handleChange3(event, newValue) {\r\n    setValue3(newValue);\r\n  }\r\n\r\n  // Example 4\r\n  const classes4 = useStyles4();\r\n  const theme4 = useTheme();\r\n  const [value4, setValue4] = React.useState(0);\r\n\r\n  function handleChange4(event, newValue) {\r\n    setValue4(newValue);\r\n  }\r\n\r\n  function handleChangeIndex4(index) {\r\n    setValue4(index);\r\n  }\r\n\r\n  // Example 5\r\n  const classes5 = useStyles5();\r\n  const [value5, setValue5] = React.useState(0);\r\n\r\n  function handleChange5(event, newValue) {\r\n    setValue5(newValue);\r\n  }\r\n\r\n  // Example 6\r\n  const classes6 = useStyles6();\r\n  const [value6, setValue6] = React.useState(0);\r\n\r\n  function handleChange6(event, newValue) {\r\n    setValue6(newValue);\r\n  }\r\n\r\n  // Example 7\r\n  const classes7 = useStyles7();\r\n  const [value7, setValue7] = React.useState(0);\r\n\r\n  function handleChange7(event, newValue) {\r\n    setValue7(newValue);\r\n  }\r\n\r\n  // Example 8\r\n  const classes8 = useStyles8();\r\n  const [value8, setValue8] = React.useState(0);\r\n\r\n  function handleChange8(event, newValue) {\r\n    setValue8(newValue);\r\n  }\r\n\r\n  // Example 9\r\n  const classes9 = useStyles9();\r\n  const [value9, setValue9] = React.useState(0);\r\n\r\n  function handleChange9(event, newValue) {\r\n    setValue9(newValue);\r\n  }\r\n\r\n  // Example 10\r\n  const classes10 = useStyles10();\r\n  const [value10, setValue10] = React.useState(0);\r\n\r\n  function handleChange10(event, newValue) {\r\n    setValue10(newValue);\r\n  }\r\n\r\n  // Example 11\r\n  const classes11 = useStyles11();\r\n  const [value11, setValue11] = React.useState(0);\r\n\r\n  function handleChange11(event, newValue) {\r\n    setValue11(newValue);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          Tabs make it easy to explore and switch between different views.\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/tabs/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode1}\r\n            beforeCodeTitle=\"Simple Tabs\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>A simple example with no frills.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes1.root}>\r\n              <AppBar position=\"static\">\r\n                <Tabs value={value1} onChange={handleChange1}>\r\n                  <Tab label=\"Item One\" />\r\n                  <Tab label=\"Item Two\" />\r\n                  <Tab label=\"Item Three\" />\r\n                </Tabs>\r\n              </AppBar>\r\n              {value1 === 0 && <TabContainer1>Item One</TabContainer1>}\r\n              {value1 === 1 && <TabContainer1>Item Two</TabContainer1>}\r\n              {value1 === 2 && <TabContainer1>Item Three</TabContainer1>}\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode2}\r\n            beforeCodeTitle=\"Wrapped Labels\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              Long labels will automatically wrap on tabs. If the label is too\r\n              long for the tab, it will overflow and the text will not be\r\n              visible.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes2.root}>\r\n              <AppBar position=\"static\">\r\n                <Tabs value={value2} onChange={handleChange2}>\r\n                  <Tab\r\n                    value=\"one\"\r\n                    label=\"New Arrivals in the Longest Text of Nonfiction\"\r\n                    wrapped\r\n                  />\r\n                  <Tab value=\"two\" label=\"Item Two\" />\r\n                  <Tab value=\"three\" label=\"Item Three\" />\r\n                </Tabs>\r\n              </AppBar>\r\n              {value2 === \"one\" && <TabContainer2>Item One</TabContainer2>}\r\n              {value2 === \"two\" && <TabContainer2>Item Two</TabContainer2>}\r\n              {value2 === \"three\" && <TabContainer2>Item Three</TabContainer2>}\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode4}\r\n            beforeCodeTitle=\"Full width\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              The <code>variant=\"fullWidth\"</code> property should be used for\r\n              smaller views. This demo also uses react-swipeable-views to\r\n              animate the Tab transition, and allowing tabs to be swiped on\r\n              touch devices.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes4.root}>\r\n              <AppBar position=\"static\" color=\"default\">\r\n                <Tabs\r\n                  value={value4}\r\n                  onChange={handleChange4}\r\n                  indicatorColor=\"primary\"\r\n                  textColor=\"primary\"\r\n                  variant=\"fullWidth\"\r\n                >\r\n                  <Tab label=\"Item One\" />\r\n                  <Tab label=\"Item Two\" />\r\n                  <Tab label=\"Item Three\" />\r\n                </Tabs>\r\n              </AppBar>\r\n              <SwipeableViews\r\n                axis={theme4.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n                index={value4}\r\n                onChangeIndex={handleChangeIndex4}\r\n              >\r\n                <TabContainer4 dir={theme4.direction}>Item One</TabContainer4>\r\n                <TabContainer4 dir={theme4.direction}>Item Two</TabContainer4>\r\n                <TabContainer4 dir={theme4.direction}>Item Three</TabContainer4>\r\n              </SwipeableViews>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode6}\r\n            beforeCodeTitle=\"Automatic Scroll Buttons\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              Left and right scroll buttons will automatically be presented on\r\n              desktop and hidden on mobile. (based on viewport width)\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes6.root}>\r\n              <AppBar position=\"static\" color=\"default\">\r\n                <Tabs\r\n                  value={value6}\r\n                  onChange={handleChange6}\r\n                  indicatorColor=\"primary\"\r\n                  textColor=\"primary\"\r\n                  variant=\"scrollable\"\r\n                  scrollButtons=\"auto\"\r\n                >\r\n                  <Tab label=\"Item One\" />\r\n                  <Tab label=\"Item Two\" />\r\n                  <Tab label=\"Item Three\" />\r\n                  <Tab label=\"Item Four\" />\r\n                  <Tab label=\"Item Five\" />\r\n                  <Tab label=\"Item Six\" />\r\n                  <Tab label=\"Item Seven\" />\r\n                </Tabs>\r\n              </AppBar>\r\n              {value6 === 0 && <TabContainer6>Item One</TabContainer6>}\r\n              {value6 === 1 && <TabContainer6>Item Two</TabContainer6>}\r\n              {value6 === 2 && <TabContainer6>Item Three</TabContainer6>}\r\n              {value6 === 3 && <TabContainer6>Item Four</TabContainer6>}\r\n              {value6 === 4 && <TabContainer6>Item Five</TabContainer6>}\r\n              {value6 === 5 && <TabContainer6>Item Six</TabContainer6>}\r\n              {value6 === 6 && <TabContainer6>Item Seven</TabContainer6>}\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode9}\r\n            beforeCodeTitle=\"Customized tabs\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>Here is an example of customizing the component.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes9.root}>\r\n              <div className={classes9.demo1}>\r\n                <AntTabs9 value={value9} onChange={handleChange9}>\r\n                  <AntTab9 label=\"Tab 1\" />\r\n                  <AntTab9 label=\"Tab 2\" />\r\n                  <AntTab9 label=\"Tab 3\" />\r\n                </AntTabs9>\r\n                <Typography className={classes9.typography} />\r\n              </div>\r\n              <div className={classes9.demo2}>\r\n                <StyledTabs9 value={value9} onChange={handleChange9}>\r\n                  <StyledTab9 label=\"Workflows\" />\r\n                  <StyledTab9 label=\"Datasets\" />\r\n                  <StyledTab9 label=\"Connections\" />\r\n                </StyledTabs9>\r\n                <Typography className={classes9.typography} />\r\n              </div>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode3}\r\n            beforeCodeTitle=\"Disabled Tab\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              A Tab can be disabled by setting <code>disabled</code> property.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <Paper square>\r\n              <Tabs\r\n                value={value3}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                onChange={handleChange3}\r\n              >\r\n                <Tab label=\"Active\" />\r\n                <Tab label=\"Disabled\" disabled />\r\n                <Tab label=\"Active\" />\r\n              </Tabs>\r\n            </Paper>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode5}\r\n            beforeCodeTitle=\"Centered\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              The <code>centered</code> property should be used for larger\r\n              views.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <Paper className={classes5.root}>\r\n              <Tabs\r\n                value={value5}\r\n                onChange={handleChange5}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                centered\r\n              >\r\n                <Tab label=\"Item One\" />\r\n                <Tab label=\"Item Two\" />\r\n                <Tab label=\"Item Three\" />\r\n              </Tabs>\r\n            </Paper>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode7}\r\n            beforeCodeTitle=\"Forced Scroll Buttons\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              Left and right scroll buttons will be presented regardless of the\r\n              viewport width.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes7.root}>\r\n              <AppBar position=\"static\" color=\"default\">\r\n                <Tabs\r\n                  value={value7}\r\n                  onChange={handleChange7}\r\n                  variant=\"scrollable\"\r\n                  scrollButtons=\"on\"\r\n                  indicatorColor=\"primary\"\r\n                  textColor=\"primary\"\r\n                >\r\n                  <Tab label=\"Item One\" icon={<PhoneIcon />} />\r\n                  <Tab label=\"Item Two\" icon={<FavoriteIcon />} />\r\n                  <Tab label=\"Item Three\" icon={<PersonPinIcon />} />\r\n                  <Tab label=\"Item Four\" icon={<HelpIcon />} />\r\n                  <Tab label=\"Item Five\" icon={<ShoppingBasket />} />\r\n                  <Tab label=\"Item Six\" icon={<ThumbDown />} />\r\n                  <Tab label=\"Item Seven\" icon={<ThumbUp />} />\r\n                </Tabs>\r\n              </AppBar>\r\n              {value7 === 0 && <TabContainer7>Item One</TabContainer7>}\r\n              {value7 === 1 && <TabContainer7>Item Two</TabContainer7>}\r\n              {value7 === 2 && <TabContainer7>Item Three</TabContainer7>}\r\n              {value7 === 3 && <TabContainer7>Item Four</TabContainer7>}\r\n              {value7 === 4 && <TabContainer7>Item Five</TabContainer7>}\r\n              {value7 === 5 && <TabContainer7>Item Six</TabContainer7>}\r\n              {value7 === 6 && <TabContainer7>Item Seven</TabContainer7>}\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode10}\r\n            beforeCodeTitle=\"Nav Tabs\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              By default tabs use a <code>button</code> element, but you can\r\n              provide your own custom tag or component. Here's an example of\r\n              implementing tabbed navigation:\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes10.root}>\r\n              <AppBar position=\"static\">\r\n                <Tabs\r\n                  variant=\"fullWidth\"\r\n                  value={value10}\r\n                  onChange={handleChange10}\r\n                >\r\n                  <LinkTab10 label=\"Page One\" href=\"/drafts\" />\r\n                  <LinkTab10 label=\"Page Two\" href=\"/trash\" />\r\n                  <LinkTab10 label=\"Page Three\" href=\"/spam\" />\r\n                </Tabs>\r\n              </AppBar>\r\n              {value10 === 0 && <TabContainer10>Page One</TabContainer10>}\r\n              {value10 === 1 && <TabContainer10>Page Two</TabContainer10>}\r\n              {value10 === 2 && <TabContainer10>Page Three</TabContainer10>}\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode11}\r\n            beforeCodeTitle=\"Icon Tabs\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>Tab labels may be either all icons or all text.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <Paper square className={classes11.root}>\r\n              <Tabs\r\n                value={value11}\r\n                onChange={handleChange11}\r\n                variant=\"fullWidth\"\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n              >\r\n                <Tab icon={<PhoneIcon />} aria-label=\"Phone\" />\r\n                <Tab icon={<FavoriteIcon />} aria-label=\"Favorite\" />\r\n                <Tab icon={<PersonPinIcon />} aria-label=\"Person\" />\r\n              </Tabs>\r\n            </Paper>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode8}\r\n            beforeCodeTitle=\"Prevent Scroll Buttons\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              Left and right scroll buttons will never be presented. All\r\n              scrolling must be initiated through user agent scrolling\r\n              mechanisms (e.g. left/right swipe, shift-mousewheel, etc.)\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes8.root}>\r\n              <AppBar position=\"static\">\r\n                <Tabs\r\n                  value={value8}\r\n                  onChange={handleChange8}\r\n                  variant=\"scrollable\"\r\n                  scrollButtons=\"off\"\r\n                >\r\n                  <Tab icon={<PhoneIcon />} aria-label=\"Phone\" />\r\n                  <Tab icon={<FavoriteIcon />} aria-label=\"Favorite\" />\r\n                  <Tab icon={<PersonPinIcon />} aria-label=\"Person\" />\r\n                  <Tab icon={<HelpIcon />} aria-label=\"Help\" />\r\n                  <Tab icon={<ShoppingBasket />} aria-label=\"Shopping\" />\r\n                  <Tab icon={<ThumbDown />} aria-label=\"Up\" />\r\n                  <Tab icon={<ThumbUp />} aria-label=\"Down\" />\r\n                </Tabs>\r\n              </AppBar>\r\n              {value8 === 0 && <TabContainer8>Item One</TabContainer8>}\r\n              {value8 === 1 && <TabContainer8>Item Two</TabContainer8>}\r\n              {value8 === 2 && <TabContainer8>Item Three</TabContainer8>}\r\n              {value8 === 3 && <TabContainer8>Item Four</TabContainer8>}\r\n              {value8 === 4 && <TabContainer8>Item Five</TabContainer8>}\r\n              {value8 === 5 && <TabContainer8>Item Six</TabContainer8>}\r\n              {value8 === 6 && <TabContainer8>Item Seven</TabContainer8>}\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function SimpleTabs() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  function handleChange(event, newValue) {\r\n    setValue(newValue);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Tabs value={value} onChange={handleChange}>\r\n          <Tab label=\"Item One\" />\r\n          <Tab label=\"Item Two\" />\r\n          <Tab label=\"Item Three\" />\r\n        </Tabs>\r\n      </AppBar>\r\n      {value === 0 && <TabContainer>Item One</TabContainer>}\r\n      {value === 1 && <TabContainer>Item Two</TabContainer>}\r\n      {value === 2 && <TabContainer>Item Three</TabContainer>}\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function TabsWrappedLabel() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState('one');\r\n\r\n  function handleChange(event, newValue) {\r\n    setValue(newValue);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Tabs value={value} onChange={handleChange}>\r\n          <Tab value=\"one\" label=\"New Arrivals in the Longest Text of Nonfiction\" wrapped />\r\n          <Tab value=\"two\" label=\"Item Two\" />\r\n          <Tab value=\"three\" label=\"Item Three\" />\r\n        </Tabs>\r\n      </AppBar>\r\n      {value === 'one' && <TabContainer>Item One</TabContainer>}\r\n      {value === 'two' && <TabContainer>Item Two</TabContainer>}\r\n      {value === 'three' && <TabContainer>Item Three</TabContainer>}\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nexport default function DisabledTabs() {\r\n  const [value, setValue] = React.useState(2);\r\n\r\n  function handleChange(event, newValue) {\r\n    setValue(newValue);\r\n  }\r\n\r\n  return (\r\n    <Paper square>\r\n      <Tabs value={value} indicatorColor=\"primary\" textColor=\"primary\" onChange={handleChange}>\r\n        <Tab label=\"Active\" />\r\n        <Tab label=\"Disabled\" disabled />\r\n        <Tab label=\"Active\" />\r\n      </Tabs>\r\n    </Paper>\r\n  );\r\n}\r\n`;\r\nconst jsCode4 = `\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nfunction TabContainer({ children, dir }) {\r\n  return (\r\n    <Typography component=\"div\" dir={dir} style={{ padding: 8 * 3 }}>\r\n      {children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  dir: PropTypes.string.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    width: 500,\r\n  },\r\n}));\r\n\r\nexport default function FullWidthTabs() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  function handleChange(event, newValue) {\r\n    setValue(newValue);\r\n  }\r\n\r\n  function handleChangeIndex(index) {\r\n    setValue(index);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"fullWidth\"\r\n        >\r\n          <Tab label=\"Item One\" />\r\n          <Tab label=\"Item Two\" />\r\n          <Tab label=\"Item Three\" />\r\n        </Tabs>\r\n      </AppBar>\r\n      <SwipeableViews\r\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n        index={value}\r\n        onChangeIndex={handleChangeIndex}\r\n      >\r\n        <TabContainer dir={theme.direction}>Item One</TabContainer>\r\n        <TabContainer dir={theme.direction}>Item Two</TabContainer>\r\n        <TabContainer dir={theme.direction}>Item Three</TabContainer>\r\n      </SwipeableViews>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode5 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nexport default function CenteredTabs() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  function handleChange(event, newValue) {\r\n    setValue(newValue);\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        centered\r\n      >\r\n        <Tab label=\"Item One\" />\r\n        <Tab label=\"Item Two\" />\r\n        <Tab label=\"Item Three\" />\r\n      </Tabs>\r\n    </Paper>\r\n  );\r\n}\r\n`;\r\nconst jsCode6 = `\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function ScrollableTabsButtonAuto() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  function handleChange(event, newValue) {\r\n    setValue(newValue);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"auto\"\r\n        >\r\n          <Tab label=\"Item One\" />\r\n          <Tab label=\"Item Two\" />\r\n          <Tab label=\"Item Three\" />\r\n          <Tab label=\"Item Four\" />\r\n          <Tab label=\"Item Five\" />\r\n          <Tab label=\"Item Six\" />\r\n          <Tab label=\"Item Seven\" />\r\n        </Tabs>\r\n      </AppBar>\r\n      {value === 0 && <TabContainer>Item One</TabContainer>}\r\n      {value === 1 && <TabContainer>Item Two</TabContainer>}\r\n      {value === 2 && <TabContainer>Item Three</TabContainer>}\r\n      {value === 3 && <TabContainer>Item Four</TabContainer>}\r\n      {value === 4 && <TabContainer>Item Five</TabContainer>}\r\n      {value === 5 && <TabContainer>Item Six</TabContainer>}\r\n      {value === 6 && <TabContainer>Item Seven</TabContainer>}\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode7 = `\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport ShoppingBasket from '@material-ui/icons/ShoppingBasket';\r\nimport ThumbDown from '@material-ui/icons/ThumbDown';\r\nimport ThumbUp from '@material-ui/icons/ThumbUp';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function ScrollableTabsButtonForce() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  function handleChange(event, newValue) {\r\n    setValue(newValue);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"on\"\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n        >\r\n          <Tab label=\"Item One\" icon={<PhoneIcon />} />\r\n          <Tab label=\"Item Two\" icon={<FavoriteIcon />} />\r\n          <Tab label=\"Item Three\" icon={<PersonPinIcon />} />\r\n          <Tab label=\"Item Four\" icon={<HelpIcon />} />\r\n          <Tab label=\"Item Five\" icon={<ShoppingBasket />} />\r\n          <Tab label=\"Item Six\" icon={<ThumbDown />} />\r\n          <Tab label=\"Item Seven\" icon={<ThumbUp />} />\r\n        </Tabs>\r\n      </AppBar>\r\n      {value === 0 && <TabContainer>Item One</TabContainer>}\r\n      {value === 1 && <TabContainer>Item Two</TabContainer>}\r\n      {value === 2 && <TabContainer>Item Three</TabContainer>}\r\n      {value === 3 && <TabContainer>Item Four</TabContainer>}\r\n      {value === 4 && <TabContainer>Item Five</TabContainer>}\r\n      {value === 5 && <TabContainer>Item Six</TabContainer>}\r\n      {value === 6 && <TabContainer>Item Seven</TabContainer>}\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode8 = `\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport ShoppingBasket from '@material-ui/icons/ShoppingBasket';\r\nimport ThumbDown from '@material-ui/icons/ThumbDown';\r\nimport ThumbUp from '@material-ui/icons/ThumbUp';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function ScrollableTabsButtonPrevent() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  function handleChange(event, newValue) {\r\n    setValue(newValue);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Tabs value={value} onChange={handleChange} variant=\"scrollable\" scrollButtons=\"off\">\r\n          <Tab icon={<PhoneIcon />} aria-label=\"Phone\" />\r\n          <Tab icon={<FavoriteIcon />} aria-label=\"Favorite\" />\r\n          <Tab icon={<PersonPinIcon />} aria-label=\"Person\" />\r\n          <Tab icon={<HelpIcon />} aria-label=\"Help\" />\r\n          <Tab icon={<ShoppingBasket />} aria-label=\"Shopping\" />\r\n          <Tab icon={<ThumbDown />} aria-label=\"Up\" />\r\n          <Tab icon={<ThumbUp />} aria-label=\"Down\" />\r\n        </Tabs>\r\n      </AppBar>\r\n      {value === 0 && <TabContainer>Item One</TabContainer>}\r\n      {value === 1 && <TabContainer>Item Two</TabContainer>}\r\n      {value === 2 && <TabContainer>Item Three</TabContainer>}\r\n      {value === 3 && <TabContainer>Item Four</TabContainer>}\r\n      {value === 4 && <TabContainer>Item Five</TabContainer>}\r\n      {value === 5 && <TabContainer>Item Six</TabContainer>}\r\n      {value === 6 && <TabContainer>Item Seven</TabContainer>}\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode9 = `\r\nimport React from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst AntTabs = withStyles({\r\n  root: {\r\n    borderBottom: '1px solid #e8e8e8',\r\n  },\r\n  indicator: {\r\n    backgroundColor: '#1890ff',\r\n  },\r\n})(Tabs);\r\n\r\nconst AntTab = withStyles(theme => ({\r\n  root: {\r\n    textTransform: 'none',\r\n    minWidth: 72,\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    marginRight: theme.spacing(4),\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:hover': {\r\n      color: '#40a9ff',\r\n      opacity: 1,\r\n    },\r\n    '&$selected': {\r\n      color: '#1890ff',\r\n      fontWeight: theme.typography.fontWeightMedium,\r\n    },\r\n    '&:focus': {\r\n      color: '#40a9ff',\r\n    },\r\n  },\r\n  selected: {},\r\n}))(props => <Tab disableRipple {...props} />);\r\n\r\nconst StyledTabs = withStyles({\r\n  indicator: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    backgroundColor: 'transparent',\r\n    '& > div': {\r\n      maxWidth: 40,\r\n      width: '100%',\r\n      backgroundColor: '#635ee7',\r\n    },\r\n  },\r\n})(props => <Tabs {...props} TabIndicatorProps={{ children: <div /> }} />);\r\n\r\nconst StyledTab = withStyles(theme => ({\r\n  root: {\r\n    textTransform: 'none',\r\n    color: '#fff',\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: theme.typography.pxToRem(15),\r\n    marginRight: theme.spacing(1),\r\n    '&:focus': {\r\n      opacity: 1,\r\n    },\r\n  },\r\n}))(props => <Tab disableRipple {...props} />);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  typography: {\r\n    padding: theme.spacing(3),\r\n  },\r\n  demo1: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  demo2: {\r\n    backgroundColor: '#2e1534',\r\n  },\r\n}));\r\n`;\r\nconst jsCode10 = `\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nfunction LinkTab(props) {\r\n  return (\r\n    <Tab\r\n      component=\"a\"\r\n      onClick={event => {\r\n        event.preventDefault();\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function NavTabs() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  function handleChange(event, newValue) {\r\n    setValue(newValue);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Tabs variant=\"fullWidth\" value={value} onChange={handleChange}>\r\n          <LinkTab label=\"Page One\" href=\"/drafts\" />\r\n          <LinkTab label=\"Page Two\" href=\"/trash\" />\r\n          <LinkTab label=\"Page Three\" href=\"/spam\" />\r\n        </Tabs>\r\n      </AppBar>\r\n      {value === 0 && <TabContainer>Page One</TabContainer>}\r\n      {value === 1 && <TabContainer>Page Two</TabContainer>}\r\n      {value === 2 && <TabContainer>Page Three</TabContainer>}\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode11 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 500,\r\n  },\r\n});\r\n\r\nexport default function IconTabs() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  function handleChange(event, newValue) {\r\n    setValue(newValue);\r\n  }\r\n\r\n  return (\r\n    <Paper square className={classes.root}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        variant=\"fullWidth\"\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n      >\r\n        <Tab icon={<PhoneIcon />} aria-label=\"Phone\" />\r\n        <Tab icon={<FavoriteIcon />} aria-label=\"Favorite\" />\r\n        <Tab icon={<PersonPinIcon />} aria-label=\"Person\" />\r\n      </Tabs>\r\n    </Paper>\r\n  );\r\n}\r\n`;\r\n","/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport {\r\n  BottomNavigation,\r\n  BottomNavigationAction,\r\n  Icon\r\n} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport RestoreIcon from \"@material-ui/icons/Restore\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n// Example 1\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 500\r\n  }\r\n});\r\n\r\n// Example 2\r\nconst useStyles2 = makeStyles({\r\n  root: {\r\n    width: 500\r\n  }\r\n});\r\n\r\nexport default function BottomNavigationExamplesPage() {\r\n  // Example 1\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  // Example 2\r\n  const classes2 = useStyles2();\r\n  const [value2, setValue2] = React.useState(\"recents\");\r\n\r\n  function handleChange2(event, newValue) {\r\n    setValue2(newValue);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          Bottom navigation bars allow movement between primary destinations in\r\n          an app\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/bottom-navigation/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Bottom Navigation\">\r\n            <span>\r\n              When there are only three actions, display both icons and text\r\n              labels at all times.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <BottomNavigation\r\n              value={value}\r\n              onChange={(event, newValue) => {\r\n                setValue(newValue);\r\n              }}\r\n              showLabels\r\n              className={classes.root}\r\n            >\r\n              <BottomNavigationAction label=\"Recents\" icon={<RestoreIcon />} />\r\n              <BottomNavigationAction\r\n                label=\"Favorites\"\r\n                icon={<FavoriteIcon />}\r\n              />\r\n              <BottomNavigationAction\r\n                label=\"Nearby\"\r\n                icon={<LocationOnIcon />}\r\n              />\r\n            </BottomNavigation>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode2}\r\n            beforeCodeTitle=\"Bottom Navigation with no label\"\r\n          >\r\n            <span>\r\n              If there are four or five actions, display inactive views as icons\r\n              only.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <BottomNavigation\r\n              value={value2}\r\n              onChange={handleChange2}\r\n              className={classes2.root}\r\n            >\r\n              <BottomNavigationAction\r\n                label=\"Recents\"\r\n                value=\"recents\"\r\n                icon={<RestoreIcon />}\r\n              />\r\n              <BottomNavigationAction\r\n                label=\"Favorites\"\r\n                value=\"favorites\"\r\n                icon={<FavoriteIcon />}\r\n              />\r\n              <BottomNavigationAction\r\n                label=\"Nearby\"\r\n                value=\"nearby\"\r\n                icon={<LocationOnIcon />}\r\n              />\r\n              <BottomNavigationAction\r\n                label=\"Folder\"\r\n                value=\"folder\"\r\n                icon={<Icon>folder</Icon>}\r\n              />\r\n            </BottomNavigation>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 500,\r\n  },\r\n});\r\n\r\nexport default function SimpleBottomNavigation() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  return (\r\n    <BottomNavigation\r\n      value={value}\r\n      onChange={(event, newValue) => {\r\n        setValue(newValue);\r\n      }}\r\n      showLabels\r\n      className={classes.root}\r\n    >\r\n      <BottomNavigationAction label=\"Recents\" icon={<RestoreIcon />} />\r\n      <BottomNavigationAction label=\"Favorites\" icon={<FavoriteIcon />} />\r\n      <BottomNavigationAction label=\"Nearby\" icon={<LocationOnIcon />} />\r\n    </BottomNavigation>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 500,\r\n  },\r\n});\r\n\r\nexport default function LabelBottomNavigation() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState('recents');\r\n\r\n  function handleChange(event, newValue) {\r\n    setValue(newValue);\r\n  }\r\n\r\n  return (\r\n    <BottomNavigation value={value} onChange={handleChange} className={classes.root}>\r\n      <BottomNavigationAction label=\"Recents\" value=\"recents\" icon={<RestoreIcon />} />\r\n      <BottomNavigationAction label=\"Favorites\" value=\"favorites\" icon={<FavoriteIcon />} />\r\n      <BottomNavigationAction label=\"Nearby\" value=\"nearby\" icon={<LocationOnIcon />} />\r\n      <BottomNavigationAction label=\"Folder\" value=\"folder\" icon={<Icon>folder</Icon>} />\r\n    </BottomNavigation>\r\n  );\r\n}\r\n`;\r\n","import React from \"react\";\r\nimport { Redirect, Switch } from \"react-router-dom\";\r\nimport { ContentRoute } from \"../../../../_metronic/layout\";\r\nimport BreadcrumbsExamplesPage from \"./BreadcrumbsExamplesPage\";\r\nimport DrawerExamplesPage from \"./DrawerExamplesPage\";\r\nimport LinksExamplesPage from \"./LinksExamplesPage\";\r\nimport MenusExamplesPage from \"./MenusExamplesPage\";\r\nimport SteppersExamplesPage from \"./SteppersExamplesPage\";\r\nimport TabsExamplesPage from \"./TabsExamplesPage\";\r\nimport BottomNavigationExamplesPage from \"./BottomNavigationExamplesPage\";\r\n\r\nexport function NavigationPage() {\r\n  return (\r\n    <Switch>\r\n      <Redirect\r\n        exact={true}\r\n        from=\"/google-material/navigation\"\r\n        to=\"/google-material/navigation/bottom-navigation\"\r\n      />\r\n      <ContentRoute\r\n        path=\"/google-material/navigation/bottom-navigation\"\r\n        component={BottomNavigationExamplesPage}\r\n      />\r\n      <ContentRoute\r\n        path=\"/google-material/navigation/breadcrumbs\"\r\n        component={BreadcrumbsExamplesPage}\r\n      />\r\n      <ContentRoute\r\n        path=\"/google-material/navigation/drawer\"\r\n        component={DrawerExamplesPage}\r\n      />\r\n      <ContentRoute\r\n        path=\"/google-material/navigation/links\"\r\n        component={LinksExamplesPage}\r\n      />\r\n      <ContentRoute\r\n        path=\"/google-material/navigation/menus\"\r\n        component={MenusExamplesPage}\r\n      />\r\n      <ContentRoute\r\n        path=\"/google-material/navigation/steppers\"\r\n        component={SteppersExamplesPage}\r\n      />\r\n      <ContentRoute\r\n        path=\"/google-material/navigation/tabs\"\r\n        component={TabsExamplesPage}\r\n      />\r\n    </Switch>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {Box} from \"@material-ui/core\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\nconst jsCode = `\r\n<Box component=\"span\" m={5}>\r\n  <Button />\r\n</Box>\r\n`;\r\nconst jsCode2 = `\r\n<Box color=\"text.primary\" clone>\r\n  <Button />\r\n</Box>\r\n`;\r\nconst jsCode3 = `\r\n<Box color=\"text.primary\">\r\n  {props => <Button {...props} />}\r\n</Box>\r\n`;\r\n\r\nexport default function BoxExamplesPage() {\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning text-primary\">\r\n        <span>\r\n          The <code>Box</code> component serves as a wrapper component for most\r\n          of the CSS utility needs.\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/box/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample jsCode={jsCode} beforeCodeTitle=\"Common example\">\r\n            <span>\r\n              The Box component wraps your component. It creates a new DOM\r\n              element, a <code>&lt;div&gt;</code> by default that can be changed\r\n              with the <code>component</code> property. Let's say you want to\r\n              use a <code>&lt;span&gt;</code> with <code>margin</code> instead\r\n              of <code>&lt;div&gt;</code>:\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7 gutter-t gutter-b\"></div>\r\n            <Box component=\"span\" m={5}>\r\n              <button type=\"button\" className=\"btn btn-primary\">\r\n                Button with margin 5\r\n              </button>\r\n            </Box>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode3} beforeCodeTitle=\"Props example\">\r\n            <span className=\"pb-3\">\r\n              2. <code>Use render props</code>\r\n            </span>\r\n            <div>\r\n              The Box children accepts a render props function. You can pull out\r\n              the <code>className</code>.\r\n            </div>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <Box color=\"text.primary\">\r\n              {props => (\r\n                <button type=\"button\" className=\"btn\" {...props}>\r\n                  PROPS{\" \"}\r\n                </button>\r\n              )}\r\n            </Box>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"Clone example\">\r\n            <span className=\"pb-3\">\r\n              However, sometimes you have to target the underlying DOM element.\r\n              For instance, you want to change the text color of the button. The\r\n              Button component defines its own color. CSS inheritance doesn't\r\n              help. To workaround the problem, you have two options:\r\n            </span>\r\n            <div className=\"pb-3\">\r\n              1. <code>Use React.cloneElement()</code>\r\n            </div>\r\n            <div className=\"pb-3\">\r\n              The Box component has a clone property to enable the usage of the\r\n              clone element method of React.\r\n            </div>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <Box color=\"text.primary\">\r\n              <button type=\"button\" className=\"btn\">\r\n                Primary text\r\n              </button>\r\n            </Box>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {Container, Typography} from \"@material-ui/core\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nexport default function SimpleContainer() {\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"sm\">\r\n        <Typography component=\"div\" style={{ backgroundColor: '#cfe8fc', height: '100vh' }} />\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nexport default function FixedContainer() {\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container fixed>\r\n        <Typography component=\"div\" style={{ backgroundColor: '#cfe8fc', height: '100vh' }} />\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n`;\r\n\r\nexport default function ContainerExamplesPage() {\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          The container centers your content horizontally. It's the most basic\r\n          layout element.\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/container/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n      <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Fluid\">\r\n        <span>\r\n          A fluid container width is bounded by that maxWidth property value.\r\n        </span>\r\n        <div className=\"separator separator-dashed my-7\"></div>\r\n        <Container maxWidth=\"sm\">\r\n          <Typography\r\n            component=\"div\"\r\n            style={{ backgroundColor: \"#cfe8fc\", height: \"100vh\" }}\r\n          />\r\n        </Container>\r\n      </KTCodeExample>\r\n\r\n      <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"Fixed\">\r\n        <span>\r\n          If you prefer to design for a fixed set of sizes instead of trying to\r\n          accommodate a fully fluid viewport, you can set the fixed property.\r\n          The max-width matches the min-width of the current breakpoint.\r\n        </span>\r\n        <div className=\"separator separator-dashed my-7\"></div>\r\n        <Container fixed>\r\n          <Typography\r\n            component=\"div\"\r\n            style={{ backgroundColor: \"#cfe8fc\", height: \"100vh\" }}\r\n          />\r\n        </Container>\r\n      </KTCodeExample>\r\n    </>\r\n  );\r\n}\r\n","/* eslint-disable react/jsx-no-target-blank */\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport {\r\n  Grid,\r\n  FormLabel,\r\n  FormControlLabel,\r\n  RadioGroup,\r\n  Radio\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Paper,\r\n  ButtonBase,\r\n  Typography,\r\n  Avatar,\r\n  Divider\r\n} from \"@material-ui/core\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    height: 140,\r\n    width: 100,\r\n  },\r\n  control: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function SpacingGrid() {\r\n  const [spacing, setSpacing] = React.useState(2);\r\n  const classes = useStyles();\r\n\r\n  function handleChange(event, value) {\r\n    setSpacing(Number(value));\r\n  }\r\n\r\n  return (\r\n    <Grid container className={classes.root} spacing={2}>\r\n      <Grid item xs={12}>\r\n        <Grid container justify=\"center\" spacing={spacing}>\r\n          {[0, 1, 2].map(value => (\r\n            <Grid key={value} item>\r\n              <Paper className={classes.paper} />\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Paper className={classes.control}>\r\n          <Grid container>\r\n            <Grid item>\r\n              <FormLabel>spacing</FormLabel>\r\n              <RadioGroup\r\n                name=\"spacing\"\r\n                aria-label=\"Spacing\"\r\n                value={spacing.toString()}\r\n                onChange={handleChange}\r\n                row\r\n              >\r\n                {[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(value => (\r\n                  <FormControlLabel\r\n                    key={value}\r\n                    value={value.toString()}\r\n                    control={<Radio />}\r\n                    label={value.toString()}\r\n                  />\r\n                ))}\r\n              </RadioGroup>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default function CenteredGrid() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>xs=12</Paper>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Paper className={classes.paper}>xs=6</Paper>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Paper className={classes.paper}>xs=6</Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paper}>xs=3</Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paper}>xs=3</Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paper}>xs=3</Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paper}>xs=3</Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default function FullWidthGrid() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>xs=12</Paper>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Paper className={classes.paper}>xs=12 sm=6</Paper>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Paper className={classes.paper}>xs=12 sm=6</Paper>\r\n        </Grid>\r\n        <Grid item xs={6} sm={3}>\r\n          <Paper className={classes.paper}>xs=6 sm=3</Paper>\r\n        </Grid>\r\n        <Grid item xs={6} sm={3}>\r\n          <Paper className={classes.paper}>xs=6 sm=3</Paper>\r\n        </Grid>\r\n        <Grid item xs={6} sm={3}>\r\n          <Paper className={classes.paper}>xs=6 sm=3</Paper>\r\n        </Grid>\r\n        <Grid item xs={6} sm={3}>\r\n          <Paper className={classes.paper}>xs=6 sm=3</Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode4 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default function AutoGrid() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs>\r\n          <Paper className={classes.paper}>xs</Paper>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Paper className={classes.paper}>xs</Paper>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Paper className={classes.paper}>xs</Paper>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs>\r\n          <Paper className={classes.paper}>xs</Paper>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Paper className={classes.paper}>xs=6</Paper>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Paper className={classes.paper}>xs</Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode5 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    maxWidth: 500,\r\n  },\r\n  image: {\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  img: {\r\n    margin: 'auto',\r\n    display: 'block',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n}));\r\n\r\nexport default function ComplexGrid() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <Grid container spacing={2}>\r\n          <Grid item>\r\n            <ButtonBase className={classes.image}>\r\n              <img className={classes.img} alt=\"complex\" src=\"/static/images/grid/complex.jpg\" />\r\n            </ButtonBase>\r\n          </Grid>\r\n          <Grid item xs={12} sm container>\r\n            <Grid item xs container direction=\"column\" spacing={2}>\r\n              <Grid item xs>\r\n                <Typography gutterBottom variant=\"subtitle1\">\r\n                  Standard license\r\n                </Typography>\r\n                <Typography variant=\"body2\" gutterBottom>\r\n                  Full resolution 1920x1080 • JPEG\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                  ID: 1030114\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"body2\" style={{ cursor: 'pointer' }}>\r\n                  Remove\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant=\"subtitle1\">$19.00</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode6 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default function NestedGrid() {\r\n  const classes = useStyles();\r\n\r\n  function FormRow() {\r\n    return (\r\n      <React.Fragment>\r\n        <Grid item xs={4}>\r\n          <Paper className={classes.paper}>item</Paper>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Paper className={classes.paper}>item</Paper>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Paper className={classes.paper}>item</Paper>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={1}>\r\n        <Grid container item xs={12} spacing={3}>\r\n          <FormRow />\r\n        </Grid>\r\n        <Grid container item xs={12} spacing={3}>\r\n          <FormRow />\r\n        </Grid>\r\n        <Grid container item xs={12} spacing={3}>\r\n          <FormRow />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode7 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default function NestedGrid() {\r\n  const classes = useStyles();\r\n\r\n  function FormRow() {\r\n    return (\r\n      <React.Fragment>\r\n        <Grid item xs={4}>\r\n          <Paper className={classes.paper}>item</Paper>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Paper className={classes.paper}>item</Paper>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Paper className={classes.paper}>item</Paper>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={1}>\r\n        <Grid container item xs={12} spacing={3}>\r\n          <FormRow />\r\n        </Grid>\r\n        <Grid container item xs={12} spacing={3}>\r\n          <FormRow />\r\n        </Grid>\r\n        <Grid container item xs={12} spacing={3}>\r\n          <FormRow />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode8 = `\r\nimport React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    overflow: 'hidden',\r\n    padding: theme.spacing(0, 3),\r\n  },\r\n  paper: {\r\n    maxWidth: 400,\r\n    margin: \\`\\${theme.spacing(1)}px auto\\`,\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst message = \\`Truncation should be conditionally applicable on this long line of text\r\n as this is a much longer line than what the container can support. \\`;\r\n\r\nexport default function AutoGridNoWrap() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <Grid container wrap=\"nowrap\" spacing={2}>\r\n          <Grid item>\r\n            <Avatar>W</Avatar>\r\n          </Grid>\r\n          <Grid item xs zeroMinWidth>\r\n            <Typography noWrap>{message}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n      <Paper className={classes.paper}>\r\n        <Grid container wrap=\"nowrap\" spacing={2}>\r\n          <Grid item>\r\n            <Avatar>W</Avatar>\r\n          </Grid>\r\n          <Grid item xs>\r\n            <Typography noWrap>{message}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n      <Paper className={classes.paper}>\r\n        <Grid container wrap=\"nowrap\" spacing={2}>\r\n          <Grid item>\r\n            <Avatar>W</Avatar>\r\n          </Grid>\r\n          <Grid item xs>\r\n            <Typography>{message}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n`;\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  paper: {\r\n    height: 140,\r\n    width: 100\r\n  },\r\n  control: {\r\n    padding: theme.spacing(2)\r\n  }\r\n}));\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary\r\n  }\r\n}));\r\nconst useStyles3 = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary\r\n  }\r\n}));\r\nconst useStyles4 = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary\r\n  }\r\n}));\r\nconst useStyles5 = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: \"auto\",\r\n    maxWidth: 500\r\n  },\r\n  image: {\r\n    width: 128,\r\n    height: 128\r\n  },\r\n  img: {\r\n    margin: \"auto\",\r\n    display: \"block\",\r\n    maxWidth: \"100%\",\r\n    maxHeight: \"100%\"\r\n  }\r\n}));\r\nconst useStyles6 = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary\r\n  }\r\n}));\r\nconst useStyles8 = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    overflow: \"hidden\",\r\n    padding: theme.spacing(0, 3)\r\n  },\r\n  paper: {\r\n    maxWidth: 400,\r\n    margin: `${theme.spacing(1)}px auto`,\r\n    padding: theme.spacing(2)\r\n  }\r\n}));\r\nconst useStyles7 = makeStyles(theme => ({\r\n  container: {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(12, 1fr)\",\r\n    gridGap: theme.spacing(3)\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n    whiteSpace: \"nowrap\",\r\n    marginBottom: theme.spacing(1)\r\n  },\r\n  divider: {\r\n    margin: theme.spacing(2, 0)\r\n  }\r\n}));\r\n\r\nexport default function GridExamplesPage() {\r\n  const [spacing, setSpacing] = React.useState(2);\r\n  const classes1 = useStyles1();\r\n  const classes2 = useStyles2();\r\n  const classes3 = useStyles3();\r\n  const classes4 = useStyles4();\r\n  const classes5 = useStyles5();\r\n  const classes6 = useStyles6();\r\n  const classes7 = useStyles7();\r\n  const classes8 = useStyles8();\r\n\r\n  const message = `Truncation should be conditionally applicable on this long line of text\r\n      as this is a much longer line than what the container can support. `;\r\n\r\n  function handleChange(event, value) {\r\n    setSpacing(Number(value));\r\n  }\r\n\r\n  function FormRow() {\r\n    return (\r\n      <React.Fragment>\r\n        <Grid item xs={4}>\r\n          <Paper className={classes6.paper}>item</Paper>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Paper className={classes6.paper}>item</Paper>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Paper className={classes6.paper}>item</Paper>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          The Material Design responsive layout grid adapts to screen size and\r\n          orientation, ensuring consistency across layouts.\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/grid/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Spacing\" codeBlockHeight=\"400px\">\r\n        <span>\r\n          The responsive grid focuses on consistent spacing widths, rather than\r\n          column width. Material Design margins and columns follow an 8px square\r\n          baseline grid. The spacing property is an integer between 0 and 10\r\n          inclusive. By default, the spacing between two grid items follows a\r\n          linear function: <code>output(spacing) = spacing * 8px</code>, e.g.{\" \"}\r\n          <code>spacing={2}</code> creates a 16px wide gap.\r\n        </span>\r\n        <div className=\"separator separator-dashed my-7\"></div>\r\n        <Grid container className={classes1.root} spacing={2}>\r\n          <Grid item xs={12}>\r\n            <Grid container justify=\"center\" spacing={spacing}>\r\n              {[0, 1, 2].map(value => (\r\n                <Grid key={value} item>\r\n                  <Paper className={classes1.paper} />\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Paper className={classes1.control}>\r\n              <Grid container>\r\n                <Grid item>\r\n                  <FormLabel>spacing</FormLabel>\r\n                  <RadioGroup\r\n                    name=\"spacing\"\r\n                    aria-label=\"Spacing\"\r\n                    value={spacing.toString()}\r\n                    onChange={handleChange}\r\n                    row\r\n                  >\r\n                    {[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(value => (\r\n                      <FormControlLabel\r\n                        key={value}\r\n                        value={value.toString()}\r\n                        control={<Radio />}\r\n                        label={value.toString()}\r\n                      />\r\n                    ))}\r\n                  </RadioGroup>\r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </KTCodeExample>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"Basic Grid\" codeBlockHeight=\"400px\">\r\n            <span>\r\n              The column widths apply at all breakpoints (i.e. <code>xs</code>{\" \"}\r\n              and up).\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes2.root}>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                  <Paper className={classes2.paper}>xs=12</Paper>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Paper className={classes2.paper}>xs=6</Paper>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Paper className={classes2.paper}>xs=6</Paper>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Paper className={classes2.paper}>xs=3</Paper>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Paper className={classes2.paper}>xs=3</Paper>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Paper className={classes2.paper}>xs=3</Paper>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Paper className={classes2.paper}>xs=3</Paper>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode3}\r\n            beforeCodeTitle=\"Grid with breakpoints\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              Some columns have multiple widths defined, causing the layout to\r\n              change at the defined breakpoint.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes3.root}>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                  <Paper className={classes3.paper}>xs=12</Paper>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <Paper className={classes3.paper}>xs=12 sm=6</Paper>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <Paper className={classes3.paper}>xs=12 sm=6</Paper>\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                  <Paper className={classes3.paper}>xs=6 sm=3</Paper>\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                  <Paper className={classes3.paper}>xs=6 sm=3</Paper>\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                  <Paper className={classes3.paper}>xs=6 sm=3</Paper>\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                  <Paper className={classes3.paper}>xs=6 sm=3</Paper>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n\r\n      <KTCodeExample jsCode={jsCode4} beforeCodeTitle=\"Auto-layout\" codeBlockHeight=\"400px\">\r\n        <span>\r\n          The Auto-layout makes the items equitably share the available space.\r\n          That also means you can set the width of one item and the others will\r\n          automatically resize around it.\r\n        </span>\r\n        <div className=\"separator separator-dashed my-7\"></div>\r\n        <div className={classes4.root}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs>\r\n              <Paper className={classes4.paper}>xs</Paper>\r\n            </Grid>\r\n            <Grid item xs>\r\n              <Paper className={classes4.paper}>xs</Paper>\r\n            </Grid>\r\n            <Grid item xs>\r\n              <Paper className={classes4.paper}>xs</Paper>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs>\r\n              <Paper className={classes4.paper}>xs</Paper>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Paper className={classes4.paper}>xs=6</Paper>\r\n            </Grid>\r\n            <Grid item xs>\r\n              <Paper className={classes4.paper}>xs</Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </KTCodeExample>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample jsCode={jsCode5} beforeCodeTitle=\"Complex Grid\" codeBlockHeight=\"400px\">\r\n            <span>\r\n              The following demo doesn't follow the Material Design\r\n              specification, but illustrates how the grid can be used to build\r\n              complex layouts.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes5.root}>\r\n              <Paper className={classes5.paper}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item>\r\n                    <ButtonBase className={classes5.image}>\r\n                      <img\r\n                        className={classes5.img}\r\n                        alt=\"complex\"\r\n                        src=\"https://material-ui.com/static/images/grid/complex.jpg\"\r\n                      />\r\n                    </ButtonBase>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm container>\r\n                    <Grid item xs container direction=\"column\" spacing={2}>\r\n                      <Grid item xs>\r\n                        <Typography gutterBottom variant=\"subtitle1\">\r\n                          Standard license\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" gutterBottom>\r\n                          Full resolution 1920x1080 • JPEG\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\">\r\n                          ID: 1030114\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <Typography\r\n                          variant=\"body2\"\r\n                          style={{ cursor: \"pointer\" }}\r\n                        >\r\n                          Remove\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Typography variant=\"subtitle1\">$19.00</Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample jsCode={jsCode6} beforeCodeTitle=\"Nested Grid\" codeBlockHeight=\"400px\">\r\n            <span className=\"pb-3\">\r\n              The <code>container</code> and <code>item</code> properties are\r\n              two independent booleans. They can be combined.\r\n            </span>\r\n            <div>\r\n              A flex container is the box generated by an element with a\r\n              computed display of <code>flex</code> or <code>inline-flex</code>.\r\n              In-flow children of a flex container are called flex items and are\r\n              laid out using the flex layout model.\r\n            </div>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes6.root}>\r\n              <Grid container spacing={1}>\r\n                <Grid container item xs={12} spacing={3}>\r\n                  <FormRow />\r\n                </Grid>\r\n                <Grid container item xs={12} spacing={3}>\r\n                  <FormRow />\r\n                </Grid>\r\n                <Grid container item xs={12} spacing={3}>\r\n                  <FormRow />\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n\r\n      <KTCodeExample jsCode={jsCode8} beforeCodeTitle=\"Negative margin\" codeBlockHeight=\"400px\">\r\n        <span>\r\n          There is one limitation with the negative margin we use to implement\r\n          the spacing between items. A horizontal scroll will appear if a\r\n          negative margin goes beyond the <code>&lt;body&gt;</code>. There are 3\r\n          available workarounds:{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            href=\"https://material-ui.com/components/grid/#limitations\"\r\n          >\r\n            see official documentations\r\n          </a>\r\n        </span>\r\n        <div className=\"separator separator-dashed my-7\"></div>\r\n        <div className={classes8.root}>\r\n          <Paper className={classes8.paper}>\r\n            <Grid container wrap=\"nowrap\" spacing={2}>\r\n              <Grid item>\r\n                <Avatar>W</Avatar>\r\n              </Grid>\r\n              <Grid item xs zeroMinWidth>\r\n                <Typography noWrap>{message}</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n          <Paper className={classes8.paper}>\r\n            <Grid container wrap=\"nowrap\" spacing={2}>\r\n              <Grid item>\r\n                <Avatar>W</Avatar>\r\n              </Grid>\r\n              <Grid item xs>\r\n                <Typography noWrap>{message}</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n          <Paper className={classes8.paper}>\r\n            <Grid container wrap=\"nowrap\" spacing={2}>\r\n              <Grid item>\r\n                <Avatar>W</Avatar>\r\n              </Grid>\r\n              <Grid item xs>\r\n                <Typography>{message}</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </div>\r\n      </KTCodeExample>\r\n\r\n      <KTCodeExample jsCode={jsCode7} beforeCodeTitle=\"CSS Grid Layout\" codeBlockHeight=\"400px\">\r\n        <span>\r\n          Material-UI doesn't provide any CSS Grid functionality itself, but as\r\n          seen below you can easily use CSS Grid to layout your pages.\r\n        </span>\r\n        <div className=\"separator separator-dashed my-7\"></div>\r\n        <div>\r\n          <Typography variant=\"subtitle1\" gutterBottom>\r\n            Material-UI Grid:\r\n          </Typography>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={3}>\r\n              <Paper className={classes7.paper}>xs=3</Paper>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Paper className={classes7.paper}>xs=3</Paper>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Paper className={classes7.paper}>xs=3</Paper>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Paper className={classes7.paper}>xs=3</Paper>\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n              <Paper className={classes7.paper}>xs=8</Paper>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <Paper className={classes7.paper}>xs=4</Paper>\r\n            </Grid>\r\n          </Grid>\r\n          <Divider className={classes7.divider} />\r\n          <Typography variant=\"subtitle1\" gutterBottom>\r\n            CSS Grid Layout:\r\n          </Typography>\r\n          <div className={classes7.container}>\r\n            <div style={{ gridColumnEnd: \"span 3\" }}>\r\n              <Paper className={classes7.paper}>xs=3</Paper>\r\n            </div>\r\n            <div style={{ gridColumnEnd: \"span 3\" }}>\r\n              <Paper className={classes7.paper}>xs=3</Paper>\r\n            </div>\r\n            <div style={{ gridColumnEnd: \"span 3\" }}>\r\n              <Paper className={classes7.paper}>xs=3</Paper>\r\n            </div>\r\n            <div style={{ gridColumnEnd: \"span 3\" }}>\r\n              <Paper className={classes7.paper}>xs=3</Paper>\r\n            </div>\r\n            <div style={{ gridColumnEnd: \"span 8\" }}>\r\n              <Paper className={classes7.paper}>xs=8</Paper>\r\n            </div>\r\n            <div style={{ gridColumnEnd: \"span 4\" }}>\r\n              <Paper className={classes7.paper}>xs=4</Paper>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </KTCodeExample>\r\n    </>\r\n  );\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\r\nimport {\r\n  GridList,\r\n  GridListTile,\r\n  ListSubheader,\r\n  GridListTileBar,\r\n  IconButton\r\n} from \"@material-ui/core\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\nconst tileData = [\r\n  {\r\n    img: \"https://material-ui.com/static/images/grid-list/breakfast.jpg\",\r\n    title: \"Breakfast\",\r\n    author: \"jill111\",\r\n    cols: 2,\r\n    featured: true\r\n  },\r\n  {\r\n    img: \"https://material-ui.com/static/images/grid-list/burgers.jpg\",\r\n    title: \"Tasty burger\",\r\n    author: \"director90\"\r\n  },\r\n  {\r\n    img: \"https://material-ui.com/static/images/grid-list/camera.jpg\",\r\n    title: \"Camera\",\r\n    author: \"Danson67\"\r\n  },\r\n  {\r\n    img: \"https://material-ui.com/static/images/grid-list/morning.jpg\",\r\n    title: \"Morning\",\r\n    author: \"fancycrave1\",\r\n    featured: true\r\n  },\r\n  {\r\n    img: \"https://material-ui.com/static/images/grid-list/hats.jpg\",\r\n    title: \"Hats\",\r\n    author: \"Hans\"\r\n  },\r\n  {\r\n    img: \"https://material-ui.com/static/images/grid-list/honey.jpg\",\r\n    title: \"Honey\",\r\n    author: \"fancycravel\"\r\n  },\r\n  {\r\n    img: \"https://material-ui.com/static/images/grid-list/vegetables.jpg\",\r\n    title: \"Vegetables\",\r\n    author: \"jill111\",\r\n    cols: 2\r\n  },\r\n  {\r\n    img: \"https://material-ui.com/static/images/grid-list/plant.jpg\",\r\n    title: \"Water plant\",\r\n    author: \"BkrmadtyaKarki\"\r\n  },\r\n  {\r\n    img: \"https://material-ui.com/static/images/grid-list/mushroom.jpg\",\r\n    title: \"Mushrooms\",\r\n    author: \"PublicDomainPictures\"\r\n  },\r\n  {\r\n    img: \"https://material-ui.com/static/images/grid-list/olive.jpg\",\r\n    title: \"Olive oil\",\r\n    author: \"congerdesign\"\r\n  },\r\n  {\r\n    img: \"https://material-ui.com/static/images/grid-list/star.jpg\",\r\n    title: \"Sea star\",\r\n    cols: 2,\r\n    author: \"821292\"\r\n  },\r\n  {\r\n    img: \"https://material-ui.com/static/images/grid-list/bike.jpg\",\r\n    title: \"Bike\",\r\n    author: \"danfador\"\r\n  }\r\n];\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport tileData from './tileData';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    width: 500,\r\n    height: 450,\r\n  },\r\n}));\r\n\r\n/**\r\n * The example data is structured as follows:\r\n *\r\n * import image from 'path/to/image.jpg';\r\n * [etc...]\r\n *\r\n * const tileData = [\r\n *   {\r\n *     img: image,\r\n *     title: 'Image',\r\n *     author: 'author',\r\n *     cols: 2,\r\n *   },\r\n *   {\r\n *     [etc...]\r\n *   },\r\n * ];\r\n */\r\nexport default function ImageGridList() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <GridList cellHeight={160} className={classes.gridList} cols={3}>\r\n        {tileData.map(tile => (\r\n          <GridListTile key={tile.img} cols={tile.cols || 1}>\r\n            <img src={tile.img} alt={tile.title} />\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport tileData from './tileData';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    width: 500,\r\n    height: 450,\r\n  },\r\n  icon: {\r\n    color: 'rgba(255, 255, 255, 0.54)',\r\n  },\r\n}));\r\n\r\n/**\r\n * The example data is structured as follows:\r\n *\r\n * import image from 'path/to/image.jpg';\r\n * [etc...]\r\n *\r\n * const tileData = [\r\n *   {\r\n *     img: image,\r\n *     title: 'Image',\r\n *     author: 'author',\r\n *   },\r\n *   {\r\n *     [etc...]\r\n *   },\r\n * ];\r\n */\r\nexport default function TitlebarGridList() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <GridList cellHeight={180} className={classes.gridList}>\r\n        <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\r\n          <ListSubheader component=\"div\">December</ListSubheader>\r\n        </GridListTile>\r\n        {tileData.map(tile => (\r\n          <GridListTile key={tile.img}>\r\n            <img src={tile.img} alt={tile.title} />\r\n            <GridListTileBar\r\n              title={tile.title}\r\n              subtitle={<span>by: {tile.author}</span>}\r\n              actionIcon={\r\n                <IconButton aria-label={\\`info about \\${tile.title}\\`} className={classes.icon}>\r\n                  <InfoIcon />\r\n                </IconButton>\r\n              }\r\n            />\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport tileData from './tileData';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    flexWrap: 'nowrap',\r\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n    transform: 'translateZ(0)',\r\n  },\r\n  title: {\r\n    color: theme.palette.primary.light,\r\n  },\r\n  titleBar: {\r\n    background:\r\n      'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n  },\r\n}));\r\n\r\n/**\r\n * The example data is structured as follows:\r\n *\r\n * import image from 'path/to/image.jpg';\r\n * [etc...]\r\n *\r\n * const tileData = [\r\n *   {\r\n *     img: image,\r\n *     title: 'Image',\r\n *     author: 'author',\r\n *   },\r\n *   {\r\n *     [etc...]\r\n *   },\r\n * ];\r\n */\r\nexport default function SingleLineGridList() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <GridList className={classes.gridList} cols={2.5}>\r\n        {tileData.map(tile => (\r\n          <GridListTile key={tile.img}>\r\n            <img src={tile.img} alt={tile.title} />\r\n            <GridListTileBar\r\n              title={tile.title}\r\n              classes={{\r\n                root: classes.titleBar,\r\n                title: classes.title,\r\n              }}\r\n              actionIcon={\r\n                <IconButton aria-label={\\`star \\${tile.title}\\`}>\r\n                  <StarBorderIcon className={classes.title} />\r\n                </IconButton>\r\n              }\r\n            />\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode4 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport tileData from './tileData';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    width: 500,\r\n    height: 450,\r\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n    transform: 'translateZ(0)',\r\n  },\r\n  titleBar: {\r\n    background:\r\n      'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, ' +\r\n      'rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n  },\r\n  icon: {\r\n    color: 'white',\r\n  },\r\n}));\r\n\r\n/**\r\n * The example data is structured as follows:\r\n *\r\n * import image from 'path/to/image.jpg';\r\n * [etc...]\r\n *\r\n * const tileData = [\r\n *   {\r\n *     img: image,\r\n *     title: 'Image',\r\n *     author: 'author',\r\n *     featured: true,\r\n *   },\r\n *   {\r\n *     [etc...]\r\n *   },\r\n * ];\r\n */\r\nexport default function AdvancedGridList() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <GridList cellHeight={200} spacing={1} className={classes.gridList}>\r\n        {tileData.map(tile => (\r\n          <GridListTile key={tile.img} cols={tile.featured ? 2 : 1} rows={tile.featured ? 2 : 1}>\r\n            <img src={tile.img} alt={tile.title} />\r\n            <GridListTileBar\r\n              title={tile.title}\r\n              titlePosition=\"top\"\r\n              actionIcon={\r\n                <IconButton aria-label={\\`star \\${tile.title}\\`} className={classes.icon}>\r\n                  <StarBorderIcon />\r\n                </IconButton>\r\n              }\r\n              actionPosition=\"left\"\r\n              className={classes.titleBar}\r\n            />\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n    </div>\r\n  );\r\n}\r\n`;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  gridList: {\r\n    width: 500,\r\n    height: 450\r\n  },\r\n  icon: {\r\n    color: \"rgba(255, 255, 255, 0.54)\"\r\n  }\r\n}));\r\n\r\nconst useStyles3 = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  gridList: {\r\n    flexWrap: \"nowrap\",\r\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n    transform: \"translateZ(0)\"\r\n  },\r\n  title: {\r\n    color: theme.palette.primary.light\r\n  },\r\n  titleBar: {\r\n    background:\r\n      \"linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)\"\r\n  }\r\n}));\r\n\r\nconst useStyles4 = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  gridList: {\r\n    width: 1200,\r\n    height: 450,\r\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n    transform: \"translateZ(0)\"\r\n  },\r\n  titleBar: {\r\n    background:\r\n      \"linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, \" +\r\n      \"rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)\"\r\n  },\r\n  icon: {\r\n    color: \"white\"\r\n  }\r\n}));\r\n\r\nexport default function GridListExamplesPage() {\r\n  const classes = useStyles();\r\n  const classes3 = useStyles3();\r\n  const classes4 = useStyles4();\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          Grid lists display a collection of images in an organized grid.\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/grid-list/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode1}\r\n            beforeCodeTitle=\"Image-only grid list\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              A simple example of a scrollable image <code>GridList</code> .\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes.root}>\r\n              <GridList cellHeight={160} className={classes.gridList} cols={3}>\r\n                {tileData.map(tile => (\r\n                  <GridListTile key={tile.img} cols={tile.cols || 1}>\r\n                    <img src={tile.img} alt={tile.title} />\r\n                  </GridListTile>\r\n                ))}\r\n              </GridList>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode2}\r\n            beforeCodeTitle=\"Grid list with titlebars\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              This example demonstrates the use of the{\" \"}\r\n              <code>GridListTileBar</code> to add an overlay to each{\" \"}\r\n              <code>GridListTile</code>. The overlay can accommodate a{\" \"}\r\n              <code>title</code>, <code>subtitle</code> and secondary action -\r\n              in this example an <code>IconButton</code>.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes.root}>\r\n              <GridList cellHeight={180} className={classes.gridList}>\r\n                <GridListTile\r\n                  key=\"Subheader\"\r\n                  cols={2}\r\n                  style={{ height: \"auto\" }}\r\n                >\r\n                  <ListSubheader component=\"div\">December</ListSubheader>\r\n                </GridListTile>\r\n                {tileData.map(tile => (\r\n                  <GridListTile key={tile.img}>\r\n                    <img src={tile.img} alt={tile.title} />\r\n                    <GridListTileBar\r\n                      title={tile.title}\r\n                      subtitle={<span>by: {tile.author}</span>}\r\n                      actionIcon={\r\n                        <IconButton\r\n                          aria-label={`info about ${tile.title}`}\r\n                          className={classes.icon}\r\n                        >\r\n                          <i className=\"flaticon-information\"></i>\r\n                        </IconButton>\r\n                      }\r\n                    />\r\n                  </GridListTile>\r\n                ))}\r\n              </GridList>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n\r\n      <KTCodeExample\r\n        jsCode={jsCode3}\r\n        beforeCodeTitle=\"Single line Grid list\"\r\n        codeBlockHeight=\"400px\"\r\n      >\r\n        <span>\r\n          This example demonstrates a horizontal scrollable single-line grid\r\n          list of images. Horizontally scrolling grid lists are discouraged\r\n          because the scrolling interferes with typical reading patterns,\r\n          affecting comprehension. One notable exception is a\r\n          horizontally-scrolling, single-line grid list of images, such as a\r\n          gallery.\r\n        </span>\r\n        <div className=\"separator separator-dashed my-7\"></div>\r\n        <div className={classes3.root}>\r\n          <GridList className={classes3.gridList} cols={2.5}>\r\n            {tileData.map(tile => (\r\n              <GridListTile key={tile.img}>\r\n                <img src={tile.img} alt={tile.title} />\r\n                <GridListTileBar\r\n                  title={tile.title}\r\n                  classes={{\r\n                    root: classes3.titleBar,\r\n                    title: classes3.title\r\n                  }}\r\n                  actionIcon={\r\n                    <IconButton aria-label={`star ${tile.title}`}>\r\n                      <i className=\"flaticon-star\"></i>\r\n                    </IconButton>\r\n                  }\r\n                />\r\n              </GridListTile>\r\n            ))}\r\n          </GridList>\r\n        </div>\r\n      </KTCodeExample>\r\n      <KTCodeExample\r\n        jsCode={jsCode4}\r\n        beforeCodeTitle=\"Advanced Grid list\"\r\n        codeBlockHeight=\"400px\"\r\n      >\r\n        <span>\r\n          This example demonstrates \"featured\" tiles, using the{\" \"}\r\n          <code>rows</code> and <code>cols</code> props to adjust the size of\r\n          the tile, and the <code>padding</code> prop to adjust the spacing. The\r\n          tiles have a customized titlebar, positioned at the top and with a\r\n          custom gradient <code>titleBackground</code>. The secondary action{\" \"}\r\n          <code>IconButton</code> is positioned on the left.\r\n        </span>\r\n        <div className=\"separator separator-dashed my-7\"></div>\r\n        <div className={classes4.root}>\r\n          <GridList cellHeight={200} spacing={1} className={classes4.gridList}>\r\n            {tileData.map(tile => (\r\n              <GridListTile\r\n                key={tile.img}\r\n                cols={tile.featured ? 2 : 1}\r\n                rows={tile.featured ? 2 : 1}\r\n              >\r\n                <img src={tile.img} alt={tile.title} />\r\n                <GridListTileBar\r\n                  title={tile.title}\r\n                  titlePosition=\"top\"\r\n                  actionIcon={\r\n                    <IconButton\r\n                      aria-label={`star ${tile.title}`}\r\n                      className={classes4.icon}\r\n                    >\r\n                      <StarBorderIcon />\r\n                    </IconButton>\r\n                  }\r\n                  actionPosition=\"left\"\r\n                  className={classes4.titleBar}\r\n                />\r\n              </GridListTile>\r\n            ))}\r\n          </GridList>\r\n        </div>\r\n      </KTCodeExample>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport {Hidden, Paper, Typography, Grid} from \"@material-ui/core\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport withWidth from '@material-ui/core/withWidth';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    flex: '1 0 auto',\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction BreakpointUp(props) {\r\n  const classes = useStyles();\r\n  const { width } = props;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography variant=\"subtitle1\">Current width: {width}</Typography>\r\n      <div className={classes.container}>\r\n        <Hidden xsUp>\r\n          <Paper className={classes.paper}>xsUp</Paper>\r\n        </Hidden>\r\n        <Hidden smUp>\r\n          <Paper className={classes.paper}>smUp</Paper>\r\n        </Hidden>\r\n        <Hidden mdUp>\r\n          <Paper className={classes.paper}>mdUp</Paper>\r\n        </Hidden>\r\n        <Hidden lgUp>\r\n          <Paper className={classes.paper}>lgUp</Paper>\r\n        </Hidden>\r\n        <Hidden xlUp>\r\n          <Paper className={classes.paper}>xlUp</Paper>\r\n        </Hidden>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nBreakpointUp.propTypes = {\r\n  width: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withWidth()(BreakpointUp);\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport withWidth from '@material-ui/core/withWidth';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    flex: '1 0 auto',\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction BreakpointDown(props) {\r\n  const classes = useStyles();\r\n  const { width } = props;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography variant=\"subtitle1\">Current width: {width}</Typography>\r\n      <div className={classes.container}>\r\n        <Hidden xsDown>\r\n          <Paper className={classes.paper}>xsDown</Paper>\r\n        </Hidden>\r\n        <Hidden smDown>\r\n          <Paper className={classes.paper}>smDown</Paper>\r\n        </Hidden>\r\n        <Hidden mdDown>\r\n          <Paper className={classes.paper}>mdDown</Paper>\r\n        </Hidden>\r\n        <Hidden lgDown>\r\n          <Paper className={classes.paper}>lgDown</Paper>\r\n        </Hidden>\r\n        <Hidden xlDown>\r\n          <Paper className={classes.paper}>xlDown</Paper>\r\n        </Hidden>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nBreakpointDown.propTypes = {\r\n  width: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withWidth()(BreakpointDown);\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport withWidth from '@material-ui/core/withWidth';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    flex: '1 0 auto',\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction BreakpointOnly(props) {\r\n  const classes = useStyles();\r\n  const { width } = props;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography variant=\"subtitle1\">Current width: {width}</Typography>\r\n      <div className={classes.container}>\r\n        <Hidden only=\"lg\">\r\n          <Paper className={classes.paper}>Hidden on lg</Paper>\r\n        </Hidden>\r\n        <Hidden only=\"sm\">\r\n          <Paper className={classes.paper}>Hidden on sm</Paper>\r\n        </Hidden>\r\n        <Hidden only={['sm', 'lg']}>\r\n          <Paper className={classes.paper}>Hidden on sm and lg</Paper>\r\n        </Hidden>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nBreakpointOnly.propTypes = {\r\n  width: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withWidth()(BreakpointOnly);\r\n`;\r\nconst jsCode4 = `\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport withWidth from '@material-ui/core/withWidth';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nfunction GridIntegration(props) {\r\n  const classes = useStyles();\r\n  const { width } = props;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography variant=\"subtitle1\" gutterBottom>\r\n        Current width: {width}\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Hidden xsUp>\r\n          <Grid item xs>\r\n            <Paper className={classes.paper}>xsUp</Paper>\r\n          </Grid>\r\n        </Hidden>\r\n        <Hidden smUp>\r\n          <Grid item xs>\r\n            <Paper className={classes.paper}>smUp</Paper>\r\n          </Grid>\r\n        </Hidden>\r\n        <Hidden mdUp>\r\n          <Grid item xs>\r\n            <Paper className={classes.paper}>mdUp</Paper>\r\n          </Grid>\r\n        </Hidden>\r\n        <Hidden lgUp>\r\n          <Grid item xs>\r\n            <Paper className={classes.paper}>lgUp</Paper>\r\n          </Grid>\r\n        </Hidden>\r\n        <Hidden xlUp>\r\n          <Grid item xs>\r\n            <Paper className={classes.paper}>xlUp</Paper>\r\n          </Grid>\r\n        </Hidden>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nGridIntegration.propTypes = {\r\n  width: PropTypes.string,\r\n};\r\n\r\nexport default withWidth()(GridIntegration);\r\n`;\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  container: {\r\n    display: \"flex\"\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n    flex: \"1 0 auto\",\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary\r\n  }\r\n}));\r\n\r\nexport default function HiddenExamplesPage(props) {\r\n  const classes1 = useStyles1();\r\n  const classes2 = useStyles2();\r\n  const { width } = props;\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          Quickly and responsively toggle the visibility value of components and\r\n          more with our hidden utilities.\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/hidden/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Breakpoint up\">\r\n            <span>\r\n              Using any breakpoint <code>up</code> property, the given children\r\n              will be hidden at or above the breakpoint.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes1.root}>\r\n              <Typography variant=\"subtitle1\">\r\n                Current width: {width}\r\n              </Typography>\r\n              <div className={classes1.container}>\r\n                <Hidden xsUp>\r\n                  <Paper className={classes1.paper}>xsUp</Paper>\r\n                </Hidden>\r\n                <Hidden smUp>\r\n                  <Paper className={classes1.paper}>smUp</Paper>\r\n                </Hidden>\r\n                <Hidden mdUp>\r\n                  <Paper className={classes1.paper}>mdUp</Paper>\r\n                </Hidden>\r\n                <Hidden lgUp>\r\n                  <Paper className={classes1.paper}>lgUp</Paper>\r\n                </Hidden>\r\n                <Hidden xlUp>\r\n                  <Paper className={classes1.paper}>xlUp</Paper>\r\n                </Hidden>\r\n              </div>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode3} beforeCodeTitle=\"Breakpoint only\">\r\n            <span>\r\n              Using the breakpoint <code>only</code> property, the given\r\n              children will be hidden at the specified breakpoint(s).\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes1.root}>\r\n              <Typography variant=\"subtitle1\">\r\n                Current width: {width}\r\n              </Typography>\r\n              <div className={classes1.container}>\r\n                <Hidden only=\"lg\">\r\n                  <Paper className={classes1.paper}>Hidden on lg</Paper>\r\n                </Hidden>\r\n                <Hidden only=\"sm\">\r\n                  <Paper className={classes1.paper}>Hidden on sm</Paper>\r\n                </Hidden>\r\n                <Hidden only={[\"sm\", \"lg\"]}>\r\n                  <Paper className={classes1.paper}>Hidden on sm and lg</Paper>\r\n                </Hidden>\r\n              </div>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"Breakpoint down\">\r\n            <span>\r\n              Using any breakpoint <code>down</code> property, the given\r\n              children will be hidden at or below the breakpoint.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes1.root}>\r\n              <Typography variant=\"subtitle1\">\r\n                Current width: {width}\r\n              </Typography>\r\n              <div className={classes1.container}>\r\n                <Hidden xsDown>\r\n                  <Paper className={classes1.paper}>xsDown</Paper>\r\n                </Hidden>\r\n                <Hidden smDown>\r\n                  <Paper className={classes1.paper}>smDown</Paper>\r\n                </Hidden>\r\n                <Hidden mdDown>\r\n                  <Paper className={classes1.paper}>mdDown</Paper>\r\n                </Hidden>\r\n                <Hidden lgDown>\r\n                  <Paper className={classes1.paper}>lgDown</Paper>\r\n                </Hidden>\r\n                <Hidden xlDown>\r\n                  <Paper className={classes1.paper}>xlDown</Paper>\r\n                </Hidden>\r\n              </div>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode4}\r\n            beforeCodeTitle=\"Integration with Grid\"\r\n          >\r\n            <span>\r\n              It is quite common to alter <code>Grid</code> at different\r\n              responsive breakpoints, and in many cases, you want to hide some\r\n              of those elements.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes2.root}>\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                Current width: {width}\r\n              </Typography>\r\n              <Grid container spacing={3}>\r\n                <Hidden xsUp>\r\n                  <Grid item xs>\r\n                    <Paper className={classes2.paper}>xsUp</Paper>\r\n                  </Grid>\r\n                </Hidden>\r\n                <Hidden smUp>\r\n                  <Grid item xs>\r\n                    <Paper className={classes2.paper}>smUp</Paper>\r\n                  </Grid>\r\n                </Hidden>\r\n                <Hidden mdUp>\r\n                  <Grid item xs>\r\n                    <Paper className={classes2.paper}>mdUp</Paper>\r\n                  </Grid>\r\n                </Hidden>\r\n                <Hidden lgUp>\r\n                  <Grid item xs>\r\n                    <Paper className={classes2.paper}>lgUp</Paper>\r\n                  </Grid>\r\n                </Hidden>\r\n                <Hidden xlUp>\r\n                  <Grid item xs>\r\n                    <Paper className={classes2.paper}>xlUp</Paper>\r\n                  </Grid>\r\n                </Hidden>\r\n              </Grid>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Redirect, Switch } from \"react-router-dom\";\r\nimport { ContentRoute } from \"../../../../_metronic/layout\";\r\nimport BoxExamplesPage from \"./BoxExamplesPage\";\r\nimport ContainerExamplesPage from \"./ContainerExamplesPage\";\r\nimport GridExamplesPage from \"./GridExamplesPage\";\r\nimport GridListExamplesPage from \"./GridListExamplesPage\";\r\nimport HiddenExamplesPage from \"./HiddenExamplesPage\";\r\n\r\nexport function LayoutPage() {\r\n  return (\r\n    <Switch>\r\n      <Redirect\r\n        exact={true}\r\n        from=\"/google-material/layout\"\r\n        to=\"/google-material/layout/box\"\r\n      />\r\n\r\n      <ContentRoute\r\n        path=\"/google-material/layout/box\"\r\n        component={BoxExamplesPage}\r\n      />\r\n      <ContentRoute\r\n        path=\"/google-material/layout/container\"\r\n        component={ContainerExamplesPage}\r\n      />\r\n      <ContentRoute\r\n        path=\"/google-material/layout/grid\"\r\n        component={GridExamplesPage}\r\n      />\r\n      <ContentRoute\r\n        path=\"/google-material/layout/grid-list\"\r\n        component={GridListExamplesPage}\r\n      />\r\n      <ContentRoute\r\n        path=\"/google-material/layout/hidden\"\r\n        component={HiddenExamplesPage}\r\n      />\r\n    </Switch>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport {makeStyles, fade} from \"@material-ui/core/styles\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  Button,\r\n  Menu,\r\n  MenuItem,\r\n  Badge,\r\n  InputBase,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Switch\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n// Example 1\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  }\r\n}));\r\n\r\n// Example 2\r\nconst useStyles2 = makeStyles({\r\n  root: {\r\n    flexGrow: 1\r\n  }\r\n});\r\n\r\n// Example 3\r\nconst useStyles3 = makeStyles(theme => ({\r\n  grow: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\"\r\n    }\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25)\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: \"auto\"\r\n    }\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing(7),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\"\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 7),\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: 200\r\n    }\r\n  },\r\n  sectionDesktop: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\"\r\n    }\r\n  },\r\n  sectionMobile: {\r\n    display: \"flex\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\"\r\n    }\r\n  }\r\n}));\r\n\r\n// Example 4\r\nconst useStyles4 = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  }\r\n}));\r\n\r\n// Example 5\r\nconst useStyles5 = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\"\r\n    }\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25)\r\n    },\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: \"auto\"\r\n    }\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing(7),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\"\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 7),\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: 120,\r\n      \"&:focus\": {\r\n        width: 200\r\n      }\r\n    }\r\n  }\r\n}));\r\n\r\n// Example 6\r\nconst useStyles6 = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nexport default function AppBarExamplesPage(props) {\r\n  // Example 1\r\n  const classes1 = useStyles1();\r\n\r\n  // Example 2\r\n  const classes2 = useStyles2();\r\n\r\n  // Example 3\r\n  const classes3 = useStyles3();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  function handleProfileMenuOpen(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  function handleMobileMenuClose() {\r\n    setMobileMoreAnchorEl(null);\r\n  }\r\n\r\n  function handleMenuClose() {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  }\r\n\r\n  function handleMobileMenuOpen(event) {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton aria-label=\"Show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"secondary\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton aria-label=\"Show 11 new notifications\" color=\"inherit\">\r\n          <Badge badgeContent={11} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"Account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  // Example 4\r\n  const classes4 = useStyles4();\r\n  const [auth4, setAuth4] = React.useState(true);\r\n  const [anchorEl4, setAnchorEl4] = React.useState(null);\r\n  const open4 = Boolean(anchorEl4);\r\n\r\n  function handleChange4(event) {\r\n    setAuth4(event.target.checked);\r\n  }\r\n\r\n  function handleMenu4(event) {\r\n    setAnchorEl4(event.currentTarget);\r\n  }\r\n\r\n  function handleClose4() {\r\n    setAnchorEl4(null);\r\n  }\r\n\r\n  // Example 5\r\n  const classes5 = useStyles5();\r\n\r\n  // Example 6\r\n  const classes6 = useStyles6();\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          The App Bar displays information and actions relating to the current\r\n          screen.\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/app-bar/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode1}\r\n            beforeCodeTitle=\"App Bar with buttons\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <div className={classes1.root}>\r\n              <AppBar position=\"static\">\r\n                <Toolbar>\r\n                  <IconButton\r\n                    edge=\"start\"\r\n                    className={classes1.menuButton}\r\n                    color=\"inherit\"\r\n                    aria-label=\"Menu\"\r\n                  >\r\n                    <MenuIcon />\r\n                  </IconButton>\r\n                  <Typography variant=\"h6\" className={classes1.title}>\r\n                    News\r\n                  </Typography>\r\n                  <Button color=\"inherit\">Login</Button>\r\n                </Toolbar>\r\n              </AppBar>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode3}\r\n            beforeCodeTitle=\"App Bar with a primary search field\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>A primary searchbar.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes3.grow}>\r\n              <AppBar position=\"static\">\r\n                <Toolbar>\r\n                  <IconButton\r\n                    edge=\"start\"\r\n                    className={classes3.menuButton}\r\n                    color=\"inherit\"\r\n                    aria-label=\"Open drawer\"\r\n                  >\r\n                    <MenuIcon />\r\n                  </IconButton>\r\n                  <Typography className={classes3.title} variant=\"h6\" noWrap>\r\n                    Material-UI\r\n                  </Typography>\r\n                  <div className={classes3.search}>\r\n                    <div className={classes3.searchIcon}>\r\n                      <SearchIcon />\r\n                    </div>\r\n                    <InputBase\r\n                      placeholder=\"Search…\"\r\n                      classes={{\r\n                        root: classes3.inputRoot,\r\n                        input: classes3.inputInput\r\n                      }}\r\n                      inputProps={{ \"aria-label\": \"Search\" }}\r\n                    />\r\n                  </div>\r\n                  <div className={classes3.grow} />\r\n                  <div className={classes3.sectionDesktop}>\r\n                    <IconButton aria-label=\"Show 4 new mails\" color=\"inherit\">\r\n                      <Badge badgeContent={4} color=\"secondary\">\r\n                        <MailIcon />\r\n                      </Badge>\r\n                    </IconButton>\r\n                    <IconButton\r\n                      aria-label=\"Show 17 new notifications\"\r\n                      color=\"inherit\"\r\n                    >\r\n                      <Badge badgeContent={17} color=\"secondary\">\r\n                        <NotificationsIcon />\r\n                      </Badge>\r\n                    </IconButton>\r\n                    <IconButton\r\n                      edge=\"end\"\r\n                      aria-label=\"Account of current user\"\r\n                      aria-controls={menuId}\r\n                      aria-haspopup=\"true\"\r\n                      onClick={handleProfileMenuOpen}\r\n                      color=\"inherit\"\r\n                    >\r\n                      <AccountCircle />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className={classes3.sectionMobile}>\r\n                    <IconButton\r\n                      aria-label=\"Show more\"\r\n                      aria-controls={mobileMenuId}\r\n                      aria-haspopup=\"true\"\r\n                      onClick={handleMobileMenuOpen}\r\n                      color=\"inherit\"\r\n                    >\r\n                      <MoreIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                </Toolbar>\r\n              </AppBar>\r\n              {renderMobileMenu}\r\n              {renderMenu}\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode5}\r\n            beforeCodeTitle=\"App Bar with search field\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>A side searchbar.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes5.root}>\r\n              <AppBar position=\"static\">\r\n                <Toolbar>\r\n                  <IconButton\r\n                    edge=\"start\"\r\n                    className={classes5.menuButton}\r\n                    color=\"inherit\"\r\n                    aria-label=\"Open drawer\"\r\n                  >\r\n                    <MenuIcon />\r\n                  </IconButton>\r\n                  <Typography className={classes5.title} variant=\"h6\" noWrap>\r\n                    Material-UI\r\n                  </Typography>\r\n                  <div className={classes5.search}>\r\n                    <div className={classes5.searchIcon}>\r\n                      <SearchIcon />\r\n                    </div>\r\n                    <InputBase\r\n                      placeholder=\"Search…\"\r\n                      classes={{\r\n                        root: classes5.inputRoot,\r\n                        input: classes5.inputInput\r\n                      }}\r\n                      inputProps={{ \"aria-label\": \"Search\" }}\r\n                    />\r\n                  </div>\r\n                </Toolbar>\r\n              </AppBar>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode2}\r\n            beforeCodeTitle=\"Simple App Bar\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <div className={classes2.root}>\r\n              <AppBar position=\"static\" color=\"default\">\r\n                <Toolbar>\r\n                  <Typography variant=\"h6\" color=\"inherit\">\r\n                    Photos\r\n                  </Typography>\r\n                </Toolbar>\r\n              </AppBar>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode4}\r\n            beforeCodeTitle=\"App Bar with menu\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <div className={classes4.root}>\r\n              <FormGroup>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Switch\r\n                      checked={auth4}\r\n                      onChange={handleChange4}\r\n                      aria-label=\"LoginSwitch\"\r\n                    />\r\n                  }\r\n                  label={auth4 ? \"Logout\" : \"Login\"}\r\n                />\r\n              </FormGroup>\r\n              <AppBar position=\"static\">\r\n                <Toolbar>\r\n                  <IconButton\r\n                    edge=\"start\"\r\n                    className={classes4.menuButton}\r\n                    color=\"inherit\"\r\n                    aria-label=\"Menu\"\r\n                  >\r\n                    <MenuIcon />\r\n                  </IconButton>\r\n                  <Typography variant=\"h6\" className={classes4.title}>\r\n                    Photos\r\n                  </Typography>\r\n                  {auth4 && (\r\n                    <div>\r\n                      <IconButton\r\n                        aria-label=\"Account of current user\"\r\n                        aria-controls=\"menu-appbar\"\r\n                        aria-haspopup=\"true\"\r\n                        onClick={handleMenu4}\r\n                        color=\"inherit\"\r\n                      >\r\n                        <AccountCircle />\r\n                      </IconButton>\r\n                      <Menu\r\n                        id=\"menu-appbar\"\r\n                        anchorEl={anchorEl4}\r\n                        anchorOrigin={{\r\n                          vertical: \"top\",\r\n                          horizontal: \"right\"\r\n                        }}\r\n                        keepMounted\r\n                        transformOrigin={{\r\n                          vertical: \"top\",\r\n                          horizontal: \"right\"\r\n                        }}\r\n                        open={open4}\r\n                        onClose={handleClose4}\r\n                      >\r\n                        <MenuItem onClick={handleClose4}>Profile</MenuItem>\r\n                        <MenuItem onClick={handleClose4}>My account</MenuItem>\r\n                      </Menu>\r\n                    </div>\r\n                  )}\r\n                </Toolbar>\r\n              </AppBar>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode6}\r\n            beforeCodeTitle=\"Dense (desktop only)\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <div className={classes6.root}>\r\n              <AppBar position=\"static\">\r\n                <Toolbar variant=\"dense\">\r\n                  <IconButton\r\n                    edge=\"start\"\r\n                    className={classes6.menuButton}\r\n                    color=\"inherit\"\r\n                    aria-label=\"Menu\"\r\n                  >\r\n                    <MenuIcon />\r\n                  </IconButton>\r\n                  <Typography variant=\"h6\" color=\"inherit\">\r\n                    Photos\r\n                  </Typography>\r\n                </Toolbar>\r\n              </AppBar>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            News\r\n          </Typography>\r\n          <Button color=\"inherit\">Login</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nexport default function SimpleAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\">\r\n            Photos\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing(7),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 7),\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: 200,\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function PrimarySearchAppBar() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  function handleProfileMenuOpen(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  function handleMobileMenuClose() {\r\n    setMobileMoreAnchorEl(null);\r\n  }\r\n\r\n  function handleMenuClose() {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  }\r\n\r\n  function handleMobileMenuOpen(event) {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  const menuId = 'primary-search-account-menu';\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton aria-label=\"Show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"secondary\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton aria-label=\"Show 11 new notifications\" color=\"inherit\">\r\n          <Badge badgeContent={11} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"Account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"Open drawer\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Material-UI\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'Search' }}\r\n            />\r\n          </div>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton aria-label=\"Show 4 new mails\" color=\"inherit\">\r\n              <Badge badgeContent={4} color=\"secondary\">\r\n                <MailIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton aria-label=\"Show 17 new notifications\" color=\"inherit\">\r\n              <Badge badgeContent={17} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"Account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"Show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode4 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function MenuAppBar() {\r\n  const classes = useStyles();\r\n  const [auth, setAuth] = React.useState(true);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  function handleChange(event) {\r\n    setAuth(event.target.checked);\r\n  }\r\n\r\n  function handleMenu(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormGroup>\r\n        <FormControlLabel\r\n          control={<Switch checked={auth} onChange={handleChange} aria-label=\"LoginSwitch\" />}\r\n          label={auth ? 'Logout' : 'Login'}\r\n        />\r\n      </FormGroup>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Photos\r\n          </Typography>\r\n          {auth && (\r\n            <div>\r\n              <IconButton\r\n                aria-label=\"Account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                <MenuItem onClick={handleClose}>My account</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode5 = `\r\nimport React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing(7),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 7),\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: 120,\r\n      '&:focus': {\r\n        width: 200,\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SearchAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"Open drawer\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Material-UI\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'Search' }}\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode6 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function DenseAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar variant=\"dense\">\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" color=\"inherit\">\r\n            Photos\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n`;\r\n","/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Paper, Typography} from \"@material-ui/core\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3, 2)\r\n  }\r\n}));\r\n\r\nexport default function PaperExamplesPage() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          In Material Design, the physical properties of paper are translated to\r\n          the screen.\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/paper/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Paper\">\r\n        <span>\r\n          The background of an application resembles the flat, opaque texture of\r\n          a sheet of paper, and an application’s behavior mimics paper’s ability\r\n          to be re-sized, shuffled, and bound together in multiple sheets.\r\n        </span>\r\n        <div className=\"separator separator-dashed my-7\"></div>\r\n        <div>\r\n          <Paper className={classes.root}>\r\n            <Typography variant=\"h5\" component=\"h3\">\r\n              This is a sheet of paper.\r\n            </Typography>\r\n            <Typography component=\"p\">\r\n              Paper can be used to build surface or other elements for your\r\n              application.\r\n            </Typography>\r\n          </Paper>\r\n        </div>\r\n      </KTCodeExample>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n}));\r\n\r\nexport default function PaperSheet() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Typography variant=\"h5\" component=\"h3\">\r\n          This is a sheet of paper.\r\n        </Typography>\r\n        <Typography component=\"p\">\r\n          Paper can be used to build surface or other elements for your application.\r\n        </Typography>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n`;\r\n","/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  CardActions,\r\n  Button,\r\n  CardHeader,\r\n  Avatar,\r\n  IconButton,\r\n  CardMedia,\r\n  Collapse,\r\n  CardActionArea\r\n} from \"@material-ui/core\";\r\nimport {makeStyles, useTheme} from \"@material-ui/core/styles\";\r\nimport {red} from \"@material-ui/core/colors\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n// Example 1\r\nconst useStyles1 = makeStyles({\r\n  card: {\r\n    minWidth: 275\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\"\r\n  },\r\n  title: {\r\n    fontSize: 14\r\n  },\r\n  pos: {\r\n    marginBottom: 12\r\n  }\r\n});\r\n\r\n// Example 2\r\nconst useStyles2 = makeStyles(theme => ({\r\n  card: {\r\n    maxWidth: 345\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\"\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500]\r\n  }\r\n}));\r\n\r\n// Example 3\r\nconst useStyles3 = makeStyles({\r\n  card: {\r\n    maxWidth: 345\r\n  },\r\n  media: {\r\n    height: 140\r\n  }\r\n});\r\n\r\n// Example 4\r\nconst useStyles4 = makeStyles(theme => ({\r\n  card: {\r\n    display: \"flex\"\r\n  },\r\n  details: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  content: {\r\n    flex: \"1 0 auto\"\r\n  },\r\n  cover: {\r\n    width: 151\r\n  },\r\n  controls: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingLeft: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1)\r\n  },\r\n  playIcon: {\r\n    height: 38,\r\n    width: 38\r\n  }\r\n}));\r\n\r\nexport default function CardsExamplesPage() {\r\n  // Example 1\r\n  const classes1 = useStyles1();\r\n  const bull1 = <span className={classes1.bullet}>•</span>;\r\n\r\n  // Example 2\r\n  const classes2 = useStyles2();\r\n  const [expanded2, setExpanded2] = React.useState(false);\r\n\r\n  function handleExpandClick2() {\r\n    setExpanded2(!expanded2);\r\n  }\r\n\r\n  // Example 3\r\n  const classes3 = useStyles3();\r\n\r\n  // Example 4\r\n  const classes4 = useStyles4();\r\n  const theme4 = useTheme();\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>Cards contain content and actions about a single subject.</span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/cards/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode1}\r\n            beforeCodeTitle=\"Simple Card\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              Although cards can support multiple actions, UI controls, and an\r\n              overflow menu, use restraint and remember that cards are entry\r\n              points to more complex and detailed information.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <Card className={classes1.card}>\r\n              <CardContent>\r\n                <Typography\r\n                  className={classes1.title}\r\n                  color=\"textSecondary\"\r\n                  gutterBottom\r\n                >\r\n                  Word of the Day\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  be\r\n                  {bull1}\r\n                  nev\r\n                  {bull1}o{bull1}\r\n                  lent\r\n                </Typography>\r\n                <Typography className={classes1.pos} color=\"textSecondary\">\r\n                  adjective\r\n                </Typography>\r\n                <Typography variant=\"body2\" component=\"p\">\r\n                  well meaning and kindly.\r\n                  <br />\r\n                  {'\"a benevolent smile\"'}\r\n                </Typography>\r\n              </CardContent>\r\n              <CardActions>\r\n                <Button size=\"small\">Learn More</Button>\r\n              </CardActions>\r\n            </Card>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode3}\r\n            beforeCodeTitle=\"Media\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              Example of a card using an image to reinforce the content.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <Card className={classes3.card}>\r\n              <CardActionArea>\r\n                <CardMedia\r\n                  className={classes3.media}\r\n                  image=\"https://material-ui.com/static/images/cards/contemplative-reptile.jpg\"\r\n                  title=\"Contemplative Reptile\"\r\n                />\r\n                <CardContent>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                    Lizard\r\n                  </Typography>\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    color=\"textSecondary\"\r\n                    component=\"p\"\r\n                  >\r\n                    Lizards are a widespread group of squamate reptiles, with\r\n                    over 6,000 species, ranging across all continents except\r\n                    Antarctica\r\n                  </Typography>\r\n                </CardContent>\r\n              </CardActionArea>\r\n              <CardActions>\r\n                <Button size=\"small\" color=\"primary\">\r\n                  Share\r\n                </Button>\r\n                <Button size=\"small\" color=\"primary\">\r\n                  Learn More\r\n                </Button>\r\n              </CardActions>\r\n            </Card>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode2}\r\n            beforeCodeTitle=\"Complex Interaction\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>On desktop, card content can expand.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <Card className={classes2.card}>\r\n              <CardHeader\r\n                avatar={\r\n                  <Avatar aria-label=\"Recipe\" className={classes2.avatar}>\r\n                    R\r\n                  </Avatar>\r\n                }\r\n                action={\r\n                  <IconButton aria-label=\"Settings\">\r\n                    <MoreVertIcon />\r\n                  </IconButton>\r\n                }\r\n                title=\"Shrimp and Chorizo Paella\"\r\n                subheader=\"September 14, 2016\"\r\n              />\r\n              <CardMedia\r\n                className={classes2.media}\r\n                image=\"https://material-ui.com/static/images/cards/paella.jpg\"\r\n                title=\"Paella dish\"\r\n              />\r\n              <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  This impressive paella is a perfect party dish and a fun meal\r\n                  to cook together with your guests. Add 1 cup of frozen peas\r\n                  along with the mussels, if you like.\r\n                </Typography>\r\n              </CardContent>\r\n              <CardActions disableSpacing>\r\n                <IconButton aria-label=\"Add to favorites\">\r\n                  <FavoriteIcon />\r\n                </IconButton>\r\n                <IconButton aria-label=\"Share\">\r\n                  <ShareIcon />\r\n                </IconButton>\r\n                <IconButton\r\n                  className={clsx(classes2.expand, {\r\n                    [classes2.expandOpen]: expanded2\r\n                  })}\r\n                  onClick={handleExpandClick2}\r\n                  aria-expanded={expanded2}\r\n                  aria-label=\"Show more\"\r\n                >\r\n                  <ExpandMoreIcon />\r\n                </IconButton>\r\n              </CardActions>\r\n              <Collapse in={expanded2} timeout=\"auto\" unmountOnExit>\r\n                <CardContent>\r\n                  <Typography paragraph>Method:</Typography>\r\n                  <Typography paragraph>\r\n                    Heat 1/2 cup of the broth in a pot until simmering, add\r\n                    saffron and set aside for 10 minutes.\r\n                  </Typography>\r\n                  <Typography paragraph>\r\n                    Heat oil in a (14- to 16-inch) paella pan or a large, deep\r\n                    skillet over medium-high heat. Add chicken, shrimp and\r\n                    chorizo, and cook, stirring occasionally until lightly\r\n                    browned, 6 to 8 minutes. Transfer shrimp to a large plate\r\n                    and set aside, leaving chicken and chorizo in the pan. Add\r\n                    pimentón, bay leaves, garlic, tomatoes, onion, salt and\r\n                    pepper, and cook, stirring often until thickened and\r\n                    fragrant, about 10 minutes. Add saffron broth and remaining\r\n                    4 1/2 cups chicken broth; bring to a boil.\r\n                  </Typography>\r\n                  <Typography paragraph>\r\n                    Add rice and stir very gently to distribute. Top with\r\n                    artichokes and peppers, and cook without stirring, until\r\n                    most of the liquid is absorbed, 15 to 18 minutes. Reduce\r\n                    heat to medium-low, add reserved shrimp and mussels, tucking\r\n                    them down into the rice, and cook again without stirring,\r\n                    until mussels have opened and rice is just tender, 5 to 7\r\n                    minutes more. (Discard any mussels that don’t open.)\r\n                  </Typography>\r\n                  <Typography>\r\n                    Set aside off of the heat to let rest for 10 minutes, and\r\n                    then serve.\r\n                  </Typography>\r\n                </CardContent>\r\n              </Collapse>\r\n            </Card>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode4}\r\n            beforeCodeTitle=\"UI Controls\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              Supplemental actions within the card are explicitly called out\r\n              using icons, text, and UI controls, typically placed at the bottom\r\n              of the card.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <Card className={classes4.card}>\r\n              <div className={classes4.details}>\r\n                <CardContent className={classes4.content}>\r\n                  <Typography component=\"h5\" variant=\"h5\">\r\n                    Live From Space\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                    Mac Miller\r\n                  </Typography>\r\n                </CardContent>\r\n                <div className={classes4.controls}>\r\n                  <IconButton aria-label=\"Previous\">\r\n                    {theme4.direction === \"rtl\" ? (\r\n                      <SkipNextIcon />\r\n                    ) : (\r\n                      <SkipPreviousIcon />\r\n                    )}\r\n                  </IconButton>\r\n                  <IconButton aria-label=\"Play/pause\">\r\n                    <PlayArrowIcon className={classes4.playIcon} />\r\n                  </IconButton>\r\n                  <IconButton aria-label=\"Next\">\r\n                    {theme4.direction === \"rtl\" ? (\r\n                      <SkipPreviousIcon />\r\n                    ) : (\r\n                      <SkipNextIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </div>\r\n              </div>\r\n              <CardMedia\r\n                className={classes4.cover}\r\n                image=\"https://material-ui.com/static/images/cards/live-from-space.jpg\"\r\n                title=\"Live from space album cover\"\r\n              />\r\n            </Card>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function SimpleCard() {\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          Word of the Day\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          be\r\n          {bull}\r\n          nev\r\n          {bull}o{bull}\r\n          lent\r\n        </Typography>\r\n        <Typography className={classes.pos} color=\"textSecondary\">\r\n          adjective\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          well meaning and kindly.\r\n          <br />\r\n          {'\"a benevolent smile\"'}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button size=\"small\">Learn More</Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\nexport default function RecipeReviewCard() {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  function handleExpandClick() {\r\n    setExpanded(!expanded);\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"Recipe\" className={classes.avatar}>\r\n            R\r\n          </Avatar>\r\n        }\r\n        action={\r\n          <IconButton aria-label=\"Settings\">\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        }\r\n        title=\"Shrimp and Chorizo Paella\"\r\n        subheader=\"September 14, 2016\"\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image=\"/static/images/cards/paella.jpg\"\r\n        title=\"Paella dish\"\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          This impressive paella is a perfect party dish and a fun meal to cook together with your\r\n          guests. Add 1 cup of frozen peas along with the mussels, if you like.\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton aria-label=\"Add to favorites\">\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"Share\">\r\n          <ShareIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: expanded,\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"Show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          <Typography paragraph>Method:</Typography>\r\n          <Typography paragraph>\r\n            Heat 1/2 cup of the broth in a pot until simmering, add saffron and set aside for 10\r\n            minutes.\r\n          </Typography>\r\n          <Typography paragraph>\r\n            Heat oil in a (14- to 16-inch) paella pan or a large, deep skillet over medium-high\r\n            heat. Add chicken, shrimp and chorizo, and cook, stirring occasionally until lightly\r\n            browned, 6 to 8 minutes. Transfer shrimp to a large plate and set aside, leaving chicken\r\n            and chorizo in the pan. Add pimentón, bay leaves, garlic, tomatoes, onion, salt and\r\n            pepper, and cook, stirring often until thickened and fragrant, about 10 minutes. Add\r\n            saffron broth and remaining 4 1/2 cups chicken broth; bring to a boil.\r\n          </Typography>\r\n          <Typography paragraph>\r\n            Add rice and stir very gently to distribute. Top with artichokes and peppers, and cook\r\n            without stirring, until most of the liquid is absorbed, 15 to 18 minutes. Reduce heat to\r\n            medium-low, add reserved shrimp and mussels, tucking them down into the rice, and cook\r\n            again without stirring, until mussels have opened and rice is just tender, 5 to 7\r\n            minutes more. (Discard any mussels that don’t open.)\r\n          </Typography>\r\n          <Typography>\r\n            Set aside off of the heat to let rest for 10 minutes, and then serve.\r\n          </Typography>\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nexport default function MediaCard() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image=\"/static/images/cards/contemplative-reptile.jpg\"\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            Lizard\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\r\n            across all continents except Antarctica\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Share\r\n        </Button>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Learn More\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n`;\r\nconst jsCode4 = `\r\nimport React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    display: 'flex',\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  content: {\r\n    flex: '1 0 auto',\r\n  },\r\n  cover: {\r\n    width: 151,\r\n  },\r\n  controls: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingLeft: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n  playIcon: {\r\n    height: 38,\r\n    width: 38,\r\n  },\r\n}));\r\n\r\nexport default function MediaControlCard() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <div className={classes.details}>\r\n        <CardContent className={classes.content}>\r\n          <Typography component=\"h5\" variant=\"h5\">\r\n            Live From Space\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n            Mac Miller\r\n          </Typography>\r\n        </CardContent>\r\n        <div className={classes.controls}>\r\n          <IconButton aria-label=\"Previous\">\r\n            {theme.direction === 'rtl' ? <SkipNextIcon /> : <SkipPreviousIcon />}\r\n          </IconButton>\r\n          <IconButton aria-label=\"Play/pause\">\r\n            <PlayArrowIcon className={classes.playIcon} />\r\n          </IconButton>\r\n          <IconButton aria-label=\"Next\">\r\n            {theme.direction === 'rtl' ? <SkipPreviousIcon /> : <SkipNextIcon />}\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <CardMedia\r\n        className={classes.cover}\r\n        image=\"/static/images/cards/live-from-space.jpg\"\r\n        title=\"Live from space album cover\"\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n`;\r\n","/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport {makeStyles, withStyles} from \"@material-ui/core/styles\";\r\nimport {\r\n  ExpansionPanel,\r\n  ExpansionPanelSummary,\r\n  Typography,\r\n  Chip,\r\n  Divider,\r\n  Button,\r\n  ExpansionPanelActions,\r\n  ExpansionPanelDetails\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n// Example 1\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular\r\n  }\r\n}));\r\n\r\n// Example 2\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary\r\n  }\r\n}));\r\n\r\n// Example 3\r\nconst useStyles3 = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15)\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary\r\n  },\r\n  icon: {\r\n    verticalAlign: \"bottom\",\r\n    height: 20,\r\n    width: 20\r\n  },\r\n  details: {\r\n    alignItems: \"center\"\r\n  },\r\n  column: {\r\n    flexBasis: \"33.33%\"\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: theme.spacing(1, 2)\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\"\r\n    }\r\n  }\r\n}));\r\n\r\n// Example 4\r\nconst ExpansionPanel4 = withStyles({\r\n  root: {\r\n    border: \"1px solid rgba(0, 0, 0, .125)\",\r\n    boxShadow: \"none\",\r\n    \"&:not(:last-child)\": {\r\n      borderBottom: 0\r\n    },\r\n    \"&:before\": {\r\n      display: \"none\"\r\n    },\r\n    \"&$expanded\": {\r\n      margin: \"auto\"\r\n    }\r\n  },\r\n  expanded: {}\r\n})(ExpansionPanel);\r\n\r\nconst ExpansionPanelSummary4 = withStyles({\r\n  root: {\r\n    backgroundColor: \"rgba(0, 0, 0, .03)\",\r\n    borderBottom: \"1px solid rgba(0, 0, 0, .125)\",\r\n    marginBottom: -1,\r\n    minHeight: 56,\r\n    \"&$expanded\": {\r\n      minHeight: 56\r\n    }\r\n  },\r\n  content: {\r\n    \"&$expanded\": {\r\n      margin: \"12px 0\"\r\n    }\r\n  },\r\n  expanded: {}\r\n})(ExpansionPanelSummary);\r\n\r\nconst ExpansionPanelDetails4 = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2)\r\n  }\r\n}))(ExpansionPanelDetails);\r\n\r\nexport default function ExpansionPanelsExamplesPage() {\r\n  // Example 1\r\n  const classes1 = useStyles1();\r\n\r\n  // Example 2\r\n  const classes2 = useStyles2();\r\n  const [expanded2, setExpanded2] = React.useState(false);\r\n\r\n  const handleChange2 = panel => (event, isExpanded) => {\r\n    setExpanded2(isExpanded ? panel : false);\r\n  };\r\n\r\n  // Example 3\r\n  const classes3 = useStyles3();\r\n\r\n  // Example 4\r\n  const [expanded4, setExpanded4] = React.useState(\"panel1\");\r\n\r\n  const handleChange4 = panel => (event, newExpanded) => {\r\n    setExpanded4(newExpanded ? panel : false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          Expansion panels contain creation flows and allow lightweight editing\r\n          of an element.\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/expansion-panels/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode1}\r\n            beforeCodeTitle=\"Simple Expansion Panel\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <div className={classes1.root}>\r\n              <ExpansionPanel4>\r\n                <ExpansionPanelSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                >\r\n                  <Typography className={classes1.heading}>\r\n                    Expansion Panel 1\r\n                  </Typography>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails4>\r\n                  <Typography>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                    Suspendisse malesuada lacus ex, sit amet blandit leo\r\n                    lobortis eget.\r\n                  </Typography>\r\n                </ExpansionPanelDetails4>\r\n              </ExpansionPanel4>\r\n              <ExpansionPanel4>\r\n                <ExpansionPanelSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel2a-content\"\r\n                  id=\"panel2a-header\"\r\n                >\r\n                  <Typography className={classes1.heading}>\r\n                    Expansion Panel 2\r\n                  </Typography>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails4>\r\n                  <Typography>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                    Suspendisse malesuada lacus ex, sit amet blandit leo\r\n                    lobortis eget.\r\n                  </Typography>\r\n                </ExpansionPanelDetails4>\r\n              </ExpansionPanel4>\r\n              <ExpansionPanel disabled>\r\n                <ExpansionPanelSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel3a-content\"\r\n                  id=\"panel3a-header\"\r\n                >\r\n                  <Typography className={classes1.heading}>\r\n                    Disabled Expansion Panel\r\n                  </Typography>\r\n                </ExpansionPanelSummary>\r\n              </ExpansionPanel>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode3}\r\n            beforeCodeTitle=\"Secondary heading and Columns\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              Multiple columns can be used to structure the content, and a\r\n              helper text may be added to the panel to assist the user.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes3.root}>\r\n              <ExpansionPanel defaultExpanded>\r\n                <ExpansionPanelSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1c-content\"\r\n                  id=\"panel1c-header\"\r\n                >\r\n                  <div className={classes3.column}>\r\n                    <Typography className={classes3.heading}>\r\n                      Location\r\n                    </Typography>\r\n                  </div>\r\n                  <div className={classes3.column}>\r\n                    <Typography className={classes3.secondaryHeading}>\r\n                      Select trip destination\r\n                    </Typography>\r\n                  </div>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails className={classes3.details}>\r\n                  <div className={classes3.column} />\r\n                  <div className={classes3.column}>\r\n                    <Chip label=\"Barbados\" onDelete={() => {}} />\r\n                  </div>\r\n                  <div className={clsx(classes3.column, classes3.helper)}>\r\n                    <Typography variant=\"caption\">\r\n                      Select your destination of choice\r\n                      <br />\r\n                      <a\r\n                        href=\"#sub-labels-and-columns\"\r\n                        className={classes3.link}\r\n                      >\r\n                        Learn more\r\n                      </a>\r\n                    </Typography>\r\n                  </div>\r\n                </ExpansionPanelDetails>\r\n                <Divider />\r\n                <ExpansionPanelActions>\r\n                  <Button size=\"small\">Cancel</Button>\r\n                  <Button size=\"small\" color=\"primary\">\r\n                    Save\r\n                  </Button>\r\n                </ExpansionPanelActions>\r\n              </ExpansionPanel>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode2}\r\n            beforeCodeTitle=\"Controlled Accordion\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            <span>\r\n              Extend the default panel behavior to create an accordion with the{\" \"}\r\n              <code>ExpansionPanel</code> component.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes2.root}>\r\n              <ExpansionPanel\r\n                expanded={expanded2 === \"panel1\"}\r\n                onChange={handleChange2(\"panel1\")}\r\n              >\r\n                <ExpansionPanelSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1bh-content\"\r\n                  id=\"panel1bh-header\"\r\n                >\r\n                  <Typography className={classes2.heading}>\r\n                    General settings\r\n                  </Typography>\r\n                  <Typography className={classes2.secondaryHeading}>\r\n                    I am an expansion panel\r\n                  </Typography>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails4>\r\n                  <Typography>\r\n                    Nulla facilisi. Phasellus sollicitudin nulla et quam mattis\r\n                    feugiat. Aliquam eget maximus est, id dignissim quam.\r\n                  </Typography>\r\n                </ExpansionPanelDetails4>\r\n              </ExpansionPanel>\r\n              <ExpansionPanel\r\n                expanded={expanded2 === \"panel2\"}\r\n                onChange={handleChange2(\"panel2\")}\r\n              >\r\n                <ExpansionPanelSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel2bh-content\"\r\n                  id=\"panel2bh-header\"\r\n                >\r\n                  <Typography className={classes2.heading}>Users</Typography>\r\n                  <Typography className={classes2.secondaryHeading}>\r\n                    You are currently not an owner\r\n                  </Typography>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails4>\r\n                  <Typography>\r\n                    Donec placerat, lectus sed mattis semper, neque lectus\r\n                    feugiat lectus, varius pulvinar diam eros in elit.\r\n                    Pellentesque convallis laoreet laoreet.\r\n                  </Typography>\r\n                </ExpansionPanelDetails4>\r\n              </ExpansionPanel>\r\n              <ExpansionPanel\r\n                expanded={expanded2 === \"panel3\"}\r\n                onChange={handleChange2(\"panel3\")}\r\n              >\r\n                <ExpansionPanelSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel3bh-content\"\r\n                  id=\"panel3bh-header\"\r\n                >\r\n                  <Typography className={classes2.heading}>\r\n                    Advanced settings\r\n                  </Typography>\r\n                  <Typography className={classes2.secondaryHeading}>\r\n                    Filtering has been entirely disabled for whole web server\r\n                  </Typography>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails4>\r\n                  <Typography>\r\n                    Nunc vitae orci ultricies, auctor nunc in, volutpat nisl.\r\n                    Integer sit amet egestas eros, vitae egestas augue. Duis vel\r\n                    est augue.\r\n                  </Typography>\r\n                </ExpansionPanelDetails4>\r\n              </ExpansionPanel>\r\n              <ExpansionPanel\r\n                expanded={expanded2 === \"panel4\"}\r\n                onChange={handleChange2(\"panel4\")}\r\n              >\r\n                <ExpansionPanelSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel4bh-content\"\r\n                  id=\"panel4bh-header\"\r\n                >\r\n                  <Typography className={classes2.heading}>\r\n                    Personal data\r\n                  </Typography>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails4>\r\n                  <Typography>\r\n                    Nunc vitae orci ultricies, auctor nunc in, volutpat nisl.\r\n                    Integer sit amet egestas eros, vitae egestas augue. Duis vel\r\n                    est augue.\r\n                  </Typography>\r\n                </ExpansionPanelDetails4>\r\n              </ExpansionPanel>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode4}\r\n            beforeCodeTitle=\"Customized expansion panels\"\r\n            codeBlockHeight=\"400px\"\r\n          >\r\n            {\" \"}\r\n            <span>Here is an example of customizing the component.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <ExpansionPanel4\r\n                square\r\n                expanded={expanded4 === \"panel1\"}\r\n                onChange={handleChange4(\"panel1\")}\r\n              >\r\n                <ExpansionPanelSummary4\r\n                  aria-controls=\"panel1d-content\"\r\n                  id=\"panel1d-header\"\r\n                >\r\n                  <Typography>Collapsible Group Item #1</Typography>\r\n                </ExpansionPanelSummary4>\r\n                <ExpansionPanelDetails4>\r\n                  <Typography>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                    Suspendisse malesuada lacus ex, sit amet blandit leo\r\n                    lobortis eget. Lorem ipsum dolor sit amet, consectetur\r\n                    adipiscing elit. Suspendisse malesuada lacus ex, sit amet\r\n                    blandit leo lobortis eget.\r\n                  </Typography>\r\n                </ExpansionPanelDetails4>\r\n              </ExpansionPanel4>\r\n              <ExpansionPanel4\r\n                square\r\n                expanded={expanded4 === \"panel2\"}\r\n                onChange={handleChange4(\"panel2\")}\r\n              >\r\n                <ExpansionPanelSummary4\r\n                  aria-controls=\"panel2d-content\"\r\n                  id=\"panel2d-header\"\r\n                >\r\n                  <Typography>Collapsible Group Item #2</Typography>\r\n                </ExpansionPanelSummary4>\r\n                <ExpansionPanelDetails4>\r\n                  <Typography>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                    Suspendisse malesuada lacus ex, sit amet blandit leo\r\n                    lobortis eget. Lorem ipsum dolor sit amet, consectetur\r\n                    adipiscing elit. Suspendisse malesuada lacus ex, sit amet\r\n                    blandit leo lobortis eget.\r\n                  </Typography>\r\n                </ExpansionPanelDetails4>\r\n              </ExpansionPanel4>\r\n              <ExpansionPanel4\r\n                square\r\n                expanded={expanded4 === \"panel3\"}\r\n                onChange={handleChange4(\"panel3\")}\r\n              >\r\n                <ExpansionPanelSummary4\r\n                  aria-controls=\"panel3d-content\"\r\n                  id=\"panel3d-header\"\r\n                >\r\n                  <Typography>Collapsible Group Item #3</Typography>\r\n                </ExpansionPanelSummary4>\r\n                <ExpansionPanelDetails4>\r\n                  <Typography>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                    Suspendisse malesuada lacus ex, sit amet blandit leo\r\n                    lobortis eget. Lorem ipsum dolor sit amet, consectetur\r\n                    adipiscing elit. Suspendisse malesuada lacus ex, sit amet\r\n                    blandit leo lobortis eget.\r\n                  </Typography>\r\n                </ExpansionPanelDetails4>\r\n              </ExpansionPanel4>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n}));\r\n\r\nexport default function SimpleExpansionPanel() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n          <Typography className={classes.heading}>Expansion Panel 1</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <Typography>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\r\n            sit amet blandit leo lobortis eget.\r\n          </Typography>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel2a-content\"\r\n          id=\"panel2a-header\"\r\n        >\r\n          <Typography className={classes.heading}>Expansion Panel 2</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <Typography>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\r\n            sit amet blandit leo lobortis eget.\r\n          </Typography>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n      <ExpansionPanel disabled>\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel3a-content\"\r\n          id=\"panel3a-header\"\r\n        >\r\n          <Typography className={classes.heading}>Disabled Expansion Panel</Typography>\r\n        </ExpansionPanelSummary>\r\n      </ExpansionPanel>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default function ControlledExpansionPanels() {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleChange = panel => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ExpansionPanel expanded={expanded === 'panel1'} onChange={handleChange('panel1')}>\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1bh-content\"\r\n          id=\"panel1bh-header\"\r\n        >\r\n          <Typography className={classes.heading}>General settings</Typography>\r\n          <Typography className={classes.secondaryHeading}>I am an expansion panel</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <Typography>\r\n            Nulla facilisi. Phasellus sollicitudin nulla et quam mattis feugiat. Aliquam eget\r\n            maximus est, id dignissim quam.\r\n          </Typography>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n      <ExpansionPanel expanded={expanded === 'panel2'} onChange={handleChange('panel2')}>\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel2bh-content\"\r\n          id=\"panel2bh-header\"\r\n        >\r\n          <Typography className={classes.heading}>Users</Typography>\r\n          <Typography className={classes.secondaryHeading}>\r\n            You are currently not an owner\r\n          </Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <Typography>\r\n            Donec placerat, lectus sed mattis semper, neque lectus feugiat lectus, varius pulvinar\r\n            diam eros in elit. Pellentesque convallis laoreet laoreet.\r\n          </Typography>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n      <ExpansionPanel expanded={expanded === 'panel3'} onChange={handleChange('panel3')}>\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel3bh-content\"\r\n          id=\"panel3bh-header\"\r\n        >\r\n          <Typography className={classes.heading}>Advanced settings</Typography>\r\n          <Typography className={classes.secondaryHeading}>\r\n            Filtering has been entirely disabled for whole web server\r\n          </Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <Typography>\r\n            Nunc vitae orci ultricies, auctor nunc in, volutpat nisl. Integer sit amet egestas eros,\r\n            vitae egestas augue. Duis vel est augue.\r\n          </Typography>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n      <ExpansionPanel expanded={expanded === 'panel4'} onChange={handleChange('panel4')}>\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel4bh-content\"\r\n          id=\"panel4bh-header\"\r\n        >\r\n          <Typography className={classes.heading}>Personal data</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <Typography>\r\n            Nunc vitae orci ultricies, auctor nunc in, volutpat nisl. Integer sit amet egestas eros,\r\n            vitae egestas augue. Duis vel est augue.\r\n          </Typography>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '33.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: \\`2px solid \\${theme.palette.divider}\\`,\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function DetailedExpansionPanel() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ExpansionPanel defaultExpanded>\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1c-content\"\r\n          id=\"panel1c-header\"\r\n        >\r\n          <div className={classes.column}>\r\n            <Typography className={classes.heading}>Location</Typography>\r\n          </div>\r\n          <div className={classes.column}>\r\n            <Typography className={classes.secondaryHeading}>Select trip destination</Typography>\r\n          </div>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails className={classes.details}>\r\n          <div className={classes.column} />\r\n          <div className={classes.column}>\r\n            <Chip label=\"Barbados\" onDelete={() => {}} />\r\n          </div>\r\n          <div className={clsx(classes.column, classes.helper)}>\r\n            <Typography variant=\"caption\">\r\n              Select your destination of choice\r\n              <br />\r\n              <a href=\"#sub-labels-and-columns\" className={classes.link}>\r\n                Learn more\r\n              </a>\r\n            </Typography>\r\n          </div>\r\n        </ExpansionPanelDetails>\r\n        <Divider />\r\n        <ExpansionPanelActions>\r\n          <Button size=\"small\">Cancel</Button>\r\n          <Button size=\"small\" color=\"primary\">\r\n            Save\r\n          </Button>\r\n        </ExpansionPanelActions>\r\n      </ExpansionPanel>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode4 = `\r\nimport React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport MuiExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport MuiExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst ExpansionPanel = withStyles({\r\n  root: {\r\n    border: '1px solid rgba(0, 0, 0, .125)',\r\n    boxShadow: 'none',\r\n    '&:not(:last-child)': {\r\n      borderBottom: 0,\r\n    },\r\n    '&:before': {\r\n      display: 'none',\r\n    },\r\n    '&$expanded': {\r\n      margin: 'auto',\r\n    },\r\n  },\r\n  expanded: {},\r\n})(MuiExpansionPanel);\r\n\r\nconst ExpansionPanelSummary = withStyles({\r\n  root: {\r\n    backgroundColor: 'rgba(0, 0, 0, .03)',\r\n    borderBottom: '1px solid rgba(0, 0, 0, .125)',\r\n    marginBottom: -1,\r\n    minHeight: 56,\r\n    '&$expanded': {\r\n      minHeight: 56,\r\n    },\r\n  },\r\n  content: {\r\n    '&$expanded': {\r\n      margin: '12px 0',\r\n    },\r\n  },\r\n  expanded: {},\r\n})(MuiExpansionPanelSummary);\r\n\r\nconst ExpansionPanelDetails = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiExpansionPanelDetails);\r\n\r\nexport default function CustomizedExpansionPanels() {\r\n  const [expanded, setExpanded] = React.useState('panel1');\r\n\r\n  const handleChange = panel => (event, newExpanded) => {\r\n    setExpanded(newExpanded ? panel : false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ExpansionPanel square expanded={expanded === 'panel1'} onChange={handleChange('panel1')}>\r\n        <ExpansionPanelSummary aria-controls=\"panel1d-content\" id=\"panel1d-header\">\r\n          <Typography>Collapsible Group Item #1</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <Typography>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\r\n            sit amet blandit leo lobortis eget. Lorem ipsum dolor sit amet, consectetur adipiscing\r\n            elit. Suspendisse malesuada lacus ex, sit amet blandit leo lobortis eget.\r\n          </Typography>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n      <ExpansionPanel square expanded={expanded === 'panel2'} onChange={handleChange('panel2')}>\r\n        <ExpansionPanelSummary aria-controls=\"panel2d-content\" id=\"panel2d-header\">\r\n          <Typography>Collapsible Group Item #2</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <Typography>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\r\n            sit amet blandit leo lobortis eget. Lorem ipsum dolor sit amet, consectetur adipiscing\r\n            elit. Suspendisse malesuada lacus ex, sit amet blandit leo lobortis eget.\r\n          </Typography>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n      <ExpansionPanel square expanded={expanded === 'panel3'} onChange={handleChange('panel3')}>\r\n        <ExpansionPanelSummary aria-controls=\"panel3d-content\" id=\"panel3d-header\">\r\n          <Typography>Collapsible Group Item #3</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <Typography>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\r\n            sit amet blandit leo lobortis eget. Lorem ipsum dolor sit amet, consectetur adipiscing\r\n            elit. Suspendisse malesuada lacus ex, sit amet blandit leo lobortis eget.\r\n          </Typography>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n    </div>\r\n  );\r\n}\r\n`;\r\n","import React from \"react\";\r\nimport { Redirect, Switch } from \"react-router-dom\";\r\nimport { ContentRoute } from \"../../../../_metronic/layout\";\r\nimport AppBarExamplesPage from \"./AppBarExamplesPage\";\r\nimport PaperExamplesPage from \"./PaperExamplesPage\";\r\nimport CardsExamplesPage from \"./CardsExamplesPage\";\r\nimport ExpansionPanelsExamplesPage from \"./ExpansionPanelsExamplesPage\";\r\n\r\nexport function SurfacesPage() {\r\n  return (\r\n    <Switch>\r\n      <Redirect\r\n        exact={true}\r\n        from=\"/google-material/surfaces\"\r\n        to=\"/google-material/surfaces/app-bar\"\r\n      />\r\n      <ContentRoute\r\n        path=\"/google-material/surfaces/app-bar\"\r\n        component={AppBarExamplesPage}\r\n      />\r\n      <ContentRoute\r\n        path=\"/google-material/surfaces/paper\"\r\n        component={PaperExamplesPage}\r\n      />\r\n      <ContentRoute\r\n        path=\"/google-material/surfaces/cards\"\r\n        component={CardsExamplesPage}\r\n      />\r\n      <ContentRoute\r\n        path=\"/google-material/surfaces/expansion-panels\"\r\n        component={ExpansionPanelsExamplesPage}\r\n      />\r\n    </Switch>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {ClickAwayListener, Button, Paper} from \"@material-ui/core\";\r\nimport {grey} from \"@material-ui/core/colors\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n// Example 1\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    position: \"relative\"\r\n  },\r\n  paper: {\r\n    position: \"absolute\",\r\n    top: 36,\r\n    right: 0,\r\n    left: 0\r\n  },\r\n  fake: {\r\n    backgroundColor: grey[200],\r\n    height: theme.spacing(1),\r\n    margin: theme.spacing(2),\r\n    // Selects every two elements among any group of siblings.\r\n    \"&:nth-child(2n)\": {\r\n      marginRight: theme.spacing(3)\r\n    }\r\n  }\r\n}));\r\n\r\nexport default function ClickAwayListenerExamplesPage() {\r\n  // Example 1\r\n  const [open, setOpen] = React.useState(false);\r\n  const classes = useStyles();\r\n\r\n  const handleClick = () => {\r\n    setOpen(prev => !prev);\r\n  };\r\n\r\n  const handleClickAway = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const fake = <div className={classes.fake} />;\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          Detect if a click event happened outside of an element. It listens for\r\n          clicks that occur somewhere in the document.\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/click-away-listener/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Simple menu dropdown\">\r\n        <span>\r\n          For instance, if you need to hide a menu dropdown when people click\r\n          anywhere else on your page:\r\n        </span>\r\n        <div className=\"separator separator-dashed my-7\"></div>\r\n        <div className={classes.root}>\r\n          <ClickAwayListener onClickAway={handleClickAway}>\r\n            <div>\r\n              <Button onClick={handleClick}>Open menu</Button>\r\n              {open ? (\r\n                <Paper className={classes.paper}>\r\n                  {fake}\r\n                  {fake}\r\n                  {fake}\r\n                  {fake}\r\n                  {fake}\r\n                </Paper>\r\n              ) : null}\r\n            </div>\r\n          </ClickAwayListener>\r\n        </div>\r\n      </KTCodeExample>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { grey } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    position: 'relative',\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    top: 36,\r\n    right: 0,\r\n    left: 0,\r\n  },\r\n  fake: {\r\n    backgroundColor: grey[200],\r\n    height: theme.spacing(1),\r\n    margin: theme.spacing(2),\r\n    // Selects every two elements among any group of siblings.\r\n    '&:nth-child(2n)': {\r\n      marginRight: theme.spacing(3),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function ClickAway() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const classes = useStyles();\r\n\r\n  const handleClick = () => {\r\n    setOpen(prev => !prev);\r\n  };\r\n\r\n  const handleClickAway = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const fake = <div className={classes.fake} />;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ClickAwayListener onClickAway={handleClickAway}>\r\n        <div>\r\n          <Button onClick={handleClick}>Open menu</Button>\r\n          {open ? (\r\n            <Paper className={classes.paper}>\r\n              {fake}\r\n              {fake}\r\n              {fake}\r\n              {fake}\r\n              {fake}\r\n            </Paper>\r\n          ) : null}\r\n        </div>\r\n      </ClickAwayListener>\r\n    </div>\r\n  );\r\n}\r\n`;\r\n","/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Typography, Button, Modal} from \"@material-ui/core\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n// Example 1\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 + rand();\r\n  const left = 50 + rand();\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(4),\r\n    outline: \"none\"\r\n  }\r\n}));\r\n\r\nfunction SimpleModal() {\r\n  const [open, setOpen] = React.useState(false);\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Typography gutterBottom>\r\n        Click to get the full Modal experience!\r\n      </Typography>\r\n      <Button onClick={handleOpen}>Open Modal</Button>\r\n      <Modal\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <Typography variant=\"h6\" id=\"modal-title\">\r\n            Text in a modal\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\r\n            Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\r\n          </Typography>\r\n          <SimpleModal />\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function ModalExamplesPage() {\r\n  // Example 1\r\n  const [open, setOpen] = React.useState(false);\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          The modal component provides a solid foundation for creating dialogs,\r\n          popovers, lightboxes, or whatever else.\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/modal/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Simple modal\">\r\n            <div>\r\n              <Typography gutterBottom>\r\n                Click to get the full Modal experience!\r\n              </Typography>\r\n              <Button onClick={handleOpen}>Open Modal</Button>\r\n              <Modal\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                <div style={modalStyle} className={classes.paper}>\r\n                  <Typography variant=\"h6\" id=\"modal-title\">\r\n                    Text in a modal\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\r\n                    Duis mollis, est non commodo luctus, nisi erat porttitor\r\n                    ligula.\r\n                  </Typography>\r\n                  <SimpleModal />\r\n                </div>\r\n              </Modal>\r\n            </div>\r\n      </KTCodeExample>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 + rand();\r\n  const left = 50 + rand();\r\n\r\n  return {\r\n    top: \\`\\${top}%\\`,\r\n    left: \\`\\${left}%\\`,\r\n    transform: \\`translate(-\\${top}%, -\\${left}%)\\`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(4),\r\n    outline: 'none',\r\n  },\r\n}));\r\n\r\nexport default function SimpleModal() {\r\n  const [open, setOpen] = React.useState(false);\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Typography gutterBottom>Click to get the full Modal experience!</Typography>\r\n      <Button onClick={handleOpen}>Open Modal</Button>\r\n      <Modal\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <Typography variant=\"h6\" id=\"modal-title\">\r\n            Text in a modal\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\r\n            Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\r\n          </Typography>\r\n          <SimpleModal />\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n`;\r\n","/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {makeStyles, withStyles} from \"@material-ui/core/styles\";\r\nimport {NoSsr, Button} from \"@material-ui/core\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n// Example 1\r\nconst styles = theme => ({\r\n  button: {\r\n    display: \"block\",\r\n    margin: theme.spacing(2)\r\n  }\r\n});\r\n\r\n// Example 2\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    maxWidth: 300,\r\n    wordBreak: \"break-all\"\r\n  }\r\n});\r\n\r\nfunction LargeTree() {\r\n  return Array.from(new Array(3000)).map((_, index) => (\r\n    <span key={index}>.</span>\r\n  ));\r\n}\r\n\r\nfunction NoSSRExamplesPage(props) {\r\n  // Example 1\r\n  const { classes } = props;\r\n\r\n  // Example 2\r\n  const classes2 = useStyles();\r\n  const [state, setState] = React.useState({ open: false, defer: false });\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          NoSsr purposely removes components from the subject of Server Side\r\n          Rendering (SSR).\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/no-ssr/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Client side deferring\">\r\n        <span>\r\n          In it's core, the NoSsr component purpose is to defer rendering. You\r\n          can use it to defer the rendering from the server to the client.\r\n        </span>\r\n        <div className=\"separator separator-dashed my-7\"></div>\r\n        <div>\r\n          <Button\r\n            className={classes.button}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Server & Client\r\n          </Button>\r\n          <NoSsr>\r\n            <Button\r\n              className={classes.button}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n            >\r\n              Client only\r\n            </Button>\r\n          </NoSsr>\r\n        </div>\r\n      </KTCodeExample>\r\n\r\n      <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"Frame deferring\">\r\n        <span>\r\n          You can also use it to defer the rendering within the client itself.\r\n          You can wait a screen frame with the <code>defer</code> property to\r\n          render the children. React does 2 commits instead of 1.\r\n        </span>\r\n        <div className=\"separator separator-dashed my-7\"></div>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary mr-3\"\r\n            onClick={() =>\r\n              setState({\r\n                open: !state.open,\r\n                defer: false\r\n              })\r\n            }\r\n          >\r\n            {'Render NoSsr defer=\"false\"'}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            onClick={() =>\r\n              setState({\r\n                open: !state.open,\r\n                defer: true\r\n              })\r\n            }\r\n          >\r\n            {'Render NoSsr defer=\"true\"'}\r\n          </button>\r\n          {state.open ? (\r\n            <div className={classes2.container}>\r\n              <span>Outside NoSsr</span>\r\n              <NoSsr defer={state.defer}>\r\n                ....Inside NoSsr\r\n                <LargeTree />\r\n              </NoSsr>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </KTCodeExample>\r\n    </>\r\n  );\r\n}\r\n\r\nNoSSRExamplesPage.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(NoSSRExamplesPage);\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    display: 'block',\r\n    margin: theme.spacing(2),\r\n  },\r\n});\r\n\r\nfunction SimpleNoSsr(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <div>\r\n      <Button className={classes.button} variant=\"contained\" color=\"primary\">\r\n        Server & Client\r\n      </Button>\r\n      <NoSsr>\r\n        <Button className={classes.button} variant=\"contained\" color=\"secondary\">\r\n          Client only\r\n        </Button>\r\n      </NoSsr>\r\n    </div>\r\n  );\r\n}\r\n\r\nSimpleNoSsr.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SimpleNoSsr);\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    maxWidth: 300,\r\n    wordBreak: 'break-all',\r\n  },\r\n});\r\n\r\nfunction LargeTree() {\r\n  return Array.from(new Array(3000)).map((_, index) => <span key={index}>.</span>);\r\n}\r\n\r\nfunction FrameDeferring() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({ open: false, defer: false });\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() =>\r\n          setState({\r\n            open: !state.open,\r\n            defer: false,\r\n          })\r\n        }\r\n      >\r\n        {'Render NoSsr defer=\"false\"'}\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() =>\r\n          setState({\r\n            open: !state.open,\r\n            defer: true,\r\n          })\r\n        }\r\n      >\r\n        {'Render NoSsr defer=\"true\"'}\r\n      </button>\r\n      {state.open ? (\r\n        <div className={classes.container}>\r\n          <span>Outside NoSsr</span>\r\n          <NoSsr defer={state.defer}>\r\n            ....Inside NoSsr\r\n            <LargeTree />\r\n          </NoSsr>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FrameDeferring;\r\n`;\r\n","/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Popover, Button, Typography} from \"@material-ui/core\";\r\nimport PopupState, {bindTrigger, bindPopover} from \"material-ui-popup-state\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n// Example 1\r\nconst useStyles1 = makeStyles(theme => ({\r\n  typography: {\r\n    padding: theme.spacing(2)\r\n  }\r\n}));\r\n\r\n// Example 2\r\nconst useStyles2 = makeStyles(theme => ({\r\n  popover: {\r\n    pointerEvents: \"none\"\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1)\r\n  }\r\n}));\r\n\r\n// Example 3\r\nconst useStyles3 = makeStyles(theme => ({\r\n  typography: {\r\n    margin: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nexport default function PopoverExamplesPage() {\r\n  // Example 1\r\n  const classes1 = useStyles1();\r\n  const [anchorEl1, setAnchorEl1] = React.useState(null);\r\n\r\n  function handleClick1(event) {\r\n    setAnchorEl1(event.currentTarget);\r\n  }\r\n\r\n  function handleClose1() {\r\n    setAnchorEl1(null);\r\n  }\r\n\r\n  const open1 = Boolean(anchorEl1);\r\n  const id = open1 ? \"simple-popover\" : undefined;\r\n\r\n  // Example 2\r\n  const classes2 = useStyles2();\r\n  const [anchorEl2, setAnchorEl2] = React.useState(null);\r\n\r\n  function handlePopoverOpen2(event) {\r\n    setAnchorEl2(event.currentTarget);\r\n  }\r\n\r\n  function handlePopoverClose2() {\r\n    setAnchorEl2(null);\r\n  }\r\n\r\n  const open2 = Boolean(anchorEl2);\r\n\r\n  // Example 3\r\n  const classes3 = useStyles3();\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          A Popover can be used to display some content on top of another\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/popover/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Simple Popover\">\r\n            <div>\r\n              <Button\r\n                aria-describedby={id}\r\n                variant=\"contained\"\r\n                onClick={handleClick1}\r\n              >\r\n                Open Popover\r\n              </Button>\r\n              <Popover\r\n                id={id}\r\n                open={open1}\r\n                anchorEl={anchorEl1}\r\n                onClose={handleClose1}\r\n                anchorOrigin={{\r\n                  vertical: \"bottom\",\r\n                  horizontal: \"center\"\r\n                }}\r\n                transformOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"center\"\r\n                }}\r\n              >\r\n                <Typography className={classes1.typography}>\r\n                  The content of the Popover.\r\n                </Typography>\r\n              </Popover>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode2}\r\n            beforeCodeTitle=\"Mouse over interaction\"\r\n          >\r\n            <span>\r\n              We demonstrate how to use the <code>Popover</code> component to\r\n              implement a popover behavior based on the mouse over event.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <Typography\r\n                aria-owns={open2 ? \"mouse-over-popover\" : undefined}\r\n                aria-haspopup=\"true\"\r\n                onMouseEnter={handlePopoverOpen2}\r\n                onMouseLeave={handlePopoverClose2}\r\n              >\r\n                Hover with a Popover.\r\n              </Typography>\r\n              <Popover\r\n                id=\"mouse-over-popover\"\r\n                className={classes2.popover}\r\n                classes={{\r\n                  paper: classes2.paper\r\n                }}\r\n                open={open2}\r\n                anchorEl={anchorEl2}\r\n                anchorOrigin={{\r\n                  vertical: \"bottom\",\r\n                  horizontal: \"left\"\r\n                }}\r\n                transformOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"left\"\r\n                }}\r\n                onClose={handlePopoverClose2}\r\n                disableRestoreFocus\r\n              >\r\n                <Typography>I use Popover.</Typography>\r\n              </Popover>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample jsCode={jsCode3} beforeCodeTitle=\"PopupState helper\">\r\n            <span>\r\n              There is a 3rd party package <code>material-ui-popup-state</code>{\" \"}\r\n              that takes care of popover state for you in most cases.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <PopupState variant=\"popover\" popupId=\"demo-popup-popover\">\r\n              {popupState => (\r\n                <div>\r\n                  <Button variant=\"contained\" {...bindTrigger(popupState)}>\r\n                    Open Popover\r\n                  </Button>\r\n                  <Popover\r\n                    {...bindPopover(popupState)}\r\n                    anchorOrigin={{\r\n                      vertical: \"bottom\",\r\n                      horizontal: \"center\"\r\n                    }}\r\n                    transformOrigin={{\r\n                      vertical: \"top\",\r\n                      horizontal: \"center\"\r\n                    }}\r\n                  >\r\n                    <Typography className={classes3.typography}>\r\n                      The content of the Popover.\r\n                    </Typography>\r\n                  </Popover>\r\n                </div>\r\n              )}\r\n            </PopupState>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function SimplePopover() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  return (\r\n    <div>\r\n      <Button aria-describedby={id} variant=\"contained\" onClick={handleClick}>\r\n        Open Popover\r\n      </Button>\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n      >\r\n        <Typography className={classes.typography}>The content of the Popover.</Typography>\r\n      </Popover>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  popover: {\r\n    pointerEvents: 'none',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function MouseOverPopover() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  function handlePopoverOpen(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  function handlePopoverClose() {\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  const open = Boolean(anchorEl);\r\n\r\n  return (\r\n    <div>\r\n      <Typography\r\n        aria-owns={open ? 'mouse-over-popover' : undefined}\r\n        aria-haspopup=\"true\"\r\n        onMouseEnter={handlePopoverOpen}\r\n        onMouseLeave={handlePopoverClose}\r\n      >\r\n        Hover with a Popover.\r\n      </Typography>\r\n      <Popover\r\n        id=\"mouse-over-popover\"\r\n        className={classes.popover}\r\n        classes={{\r\n          paper: classes.paper,\r\n        }}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'left',\r\n        }}\r\n        onClose={handlePopoverClose}\r\n        disableRestoreFocus\r\n      >\r\n        <Typography>I use Popover.</Typography>\r\n      </Popover>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport PopupState, { bindTrigger, bindPopover } from 'material-ui-popup-state';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  typography: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function PopoverPopupState() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <PopupState variant=\"popover\" popupId=\"demo-popup-popover\">\r\n      {popupState => (\r\n        <div>\r\n          <Button variant=\"contained\" {...bindTrigger(popupState)}>\r\n            Open Popover\r\n          </Button>\r\n          <Popover\r\n            {...bindPopover(popupState)}\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'center',\r\n            }}\r\n          >\r\n            <Typography className={classes.typography}>The content of the Popover.</Typography>\r\n          </Popover>\r\n        </div>\r\n      )}\r\n    </PopupState>\r\n  );\r\n}\r\n`;\r\n","/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {\r\n  Button,\r\n  Popper,\r\n  Fade,\r\n  Paper,\r\n  Typography,\r\n  Grid\r\n} from \"@material-ui/core\";\r\nimport PopupState, {bindToggle, bindPopper} from \"material-ui-popup-state\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n// Example 1\r\nconst useStyles1 = makeStyles(theme => ({\r\n  typography: {\r\n    padding: theme.spacing(2)\r\n  }\r\n}));\r\n\r\n// Example 3\r\nconst useStyles3 = makeStyles(theme => ({\r\n  root: {\r\n    width: 500\r\n  },\r\n  typography: {\r\n    padding: theme.spacing(2)\r\n  }\r\n}));\r\n\r\n// Example 4\r\nconst useStyles4 = makeStyles(theme => ({\r\n  typography: {\r\n    padding: theme.spacing(2)\r\n  }\r\n}));\r\n\r\n// Example 5\r\nconst useStyles5 = makeStyles(theme => ({\r\n  typography: {\r\n    padding: theme.spacing(2)\r\n  }\r\n}));\r\n\r\n// Example 6\r\nconst useStyles6 = makeStyles(theme => ({\r\n  typography: {\r\n    padding: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nexport default function PopperExamplesPage() {\r\n  // Example 1\r\n  const classes1 = useStyles1();\r\n  const [anchorEl1, setAnchorEl1] = React.useState(null);\r\n\r\n  function handleClick1(event) {\r\n    setAnchorEl1(anchorEl1 ? null : event.currentTarget);\r\n  }\r\n\r\n  const open1 = Boolean(anchorEl1);\r\n  const id1 = open1 ? \"simple-popper\" : undefined;\r\n\r\n  // Example 2\r\n  const [anchorEl2, setAnchorEl2] = React.useState(null);\r\n\r\n  function handleClick2(event) {\r\n    setAnchorEl2(anchorEl2 ? null : event.currentTarget);\r\n  }\r\n\r\n  const open2 = Boolean(anchorEl2);\r\n  const id2 = open2 ? \"simple-popper\" : undefined;\r\n\r\n  // Example 3\r\n  const [anchorEl3, setAnchorEl3] = React.useState(null);\r\n  const [open3, setOpen3] = React.useState(false);\r\n  const [placement3, setPlacement3] = React.useState();\r\n  const classes3 = useStyles3();\r\n\r\n  const handleClick3 = newPlacement => event => {\r\n    setAnchorEl3(event.currentTarget);\r\n    setOpen3(prev => placement3 !== newPlacement || !prev);\r\n    setPlacement3(newPlacement);\r\n  };\r\n\r\n  // Example 4\r\n  const [anchorEl4, setAnchorEl4] = React.useState(null);\r\n  const classes4 = useStyles4();\r\n\r\n  const handleClick4 = event => {\r\n    setAnchorEl4(prev => (prev ? null : event.currentTarget));\r\n  };\r\n\r\n  const open4 = Boolean(anchorEl4);\r\n  const id4 = open4 ? \"no-transition-popper\" : undefined;\r\n\r\n  // Example 5\r\n  const [open5, setOpen5] = React.useState(false);\r\n  const [anchorEl5, setAnchorEl5] = React.useState(null);\r\n  const classes5 = useStyles5();\r\n\r\n  const handleClose5 = () => {\r\n    setOpen5(false);\r\n  };\r\n\r\n  const handleMouseUp5 = () => {\r\n    const selection = window.getSelection();\r\n\r\n    // Resets when the selection has a length of 0\r\n    if (!selection || selection.anchorOffset === selection.focusOffset) {\r\n      handleClose5();\r\n      return;\r\n    }\r\n\r\n    const getBoundingClientRect = () =>\r\n      selection.getRangeAt(0).getBoundingClientRect();\r\n\r\n    setOpen5(true);\r\n    setAnchorEl5({\r\n      clientWidth: getBoundingClientRect().width,\r\n      clientHeight: getBoundingClientRect().height,\r\n      getBoundingClientRect: getBoundingClientRect\r\n    });\r\n  };\r\n\r\n  const id5 = open5 ? \"faked-reference-popper\" : undefined;\r\n\r\n  // Example 6\r\n  const classes6 = useStyles6();\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          A Popper can be used to display some content on top of another. It's\r\n          an alternative to react-popper\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/popper/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Simple Popper\">\r\n            <div>\r\n              <Button\r\n                aria-describedby={id1}\r\n                variant=\"contained\"\r\n                onClick={handleClick1}\r\n              >\r\n                Toggle Popper\r\n              </Button>\r\n              <Popper id={id1} open={open1} anchorEl={anchorEl1} transition>\r\n                {({ TransitionProps }) => (\r\n                  <Fade {...TransitionProps} timeout={350}>\r\n                    <Paper>\r\n                      <Typography className={classes1.typography}>\r\n                        The content of the Popper.\r\n                      </Typography>\r\n                    </Paper>\r\n                  </Fade>\r\n                )}\r\n              </Popper>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode3} beforeCodeTitle=\"Positioned Popper\">\r\n            <div className={classes3.root}>\r\n              <Popper\r\n                open={open3}\r\n                anchorEl={anchorEl3}\r\n                placement={placement3}\r\n                transition\r\n              >\r\n                {({ TransitionProps }) => (\r\n                  <Fade {...TransitionProps} timeout={350}>\r\n                    <Paper>\r\n                      <Typography className={classes3.typography}>\r\n                        The content of the Popper.\r\n                      </Typography>\r\n                    </Paper>\r\n                  </Fade>\r\n                )}\r\n              </Popper>\r\n              <Grid container justify=\"center\">\r\n                <Grid item>\r\n                  <Button onClick={handleClick3(\"top-start\")}>top-start</Button>\r\n                  <Button onClick={handleClick3(\"top\")}>top</Button>\r\n                  <Button onClick={handleClick3(\"top-end\")}>top-end</Button>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container justify=\"center\">\r\n                <Grid item xs={6}>\r\n                  <Button onClick={handleClick3(\"left-start\")}>\r\n                    left-start\r\n                  </Button>\r\n                  <br />\r\n                  <Button onClick={handleClick3(\"left\")}>left</Button>\r\n                  <br />\r\n                  <Button onClick={handleClick3(\"left-end\")}>left-end</Button>\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  container\r\n                  xs={6}\r\n                  alignItems=\"flex-end\"\r\n                  direction=\"column\"\r\n                >\r\n                  <Grid item>\r\n                    <Button onClick={handleClick3(\"right-start\")}>\r\n                      right-start\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Button onClick={handleClick3(\"right\")}>right</Button>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Button onClick={handleClick3(\"right-end\")}>\r\n                      right-end\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container justify=\"center\">\r\n                <Grid item>\r\n                  <Button onClick={handleClick3(\"bottom-start\")}>\r\n                    bottom-start\r\n                  </Button>\r\n                  <Button onClick={handleClick3(\"bottom\")}>bottom</Button>\r\n                  <Button onClick={handleClick3(\"bottom-end\")}>\r\n                    bottom-end\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode5}\r\n            beforeCodeTitle=\"Faked reference object\"\r\n          >\r\n            <span className=\"pb-3\">\r\n              The <code>anchorEl</code> property can be a reference to a fake\r\n              DOM element. You just need to create an object shaped like the{\" \"}\r\n              <code>ReferenceObject</code>.\r\n            </span>\r\n            <div>Highlight part of the text to see the popper:</div>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div onMouseLeave={handleClose5}>\r\n              <Typography aria-describedby={id5} onMouseUp={handleMouseUp5}>\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam\r\n                ipsum purus, bibendum sit amet vulputate eget, porta semper\r\n                ligula. Donec bibendum vulputate erat, ac fringilla mi finibus\r\n                nec. Donec ac dolor sed dolor porttitor blandit vel vel purus.\r\n                Fusce vel malesuada ligula. Nam quis vehicula ante, eu finibus\r\n                est. Proin ullamcorper fermentum orci, quis finibus massa. Nunc\r\n                lobortis, massa ut rutrum ultrices, metus metus finibus ex, sit\r\n                amet facilisis neque enim sed neque. Quisque accumsan metus vel\r\n                maximus consequat. Suspendisse lacinia tellus a libero volutpat\r\n                maximus.\r\n              </Typography>\r\n              <Popper\r\n                id={id5}\r\n                open={open5}\r\n                anchorEl={anchorEl5}\r\n                transition\r\n                placement=\"bottom-start\"\r\n              >\r\n                {({ TransitionProps }) => (\r\n                  <Fade {...TransitionProps} timeout={350}>\r\n                    <Paper>\r\n                      <Typography className={classes5.typography}>\r\n                        The content of the Popper.\r\n                      </Typography>\r\n                    </Paper>\r\n                  </Fade>\r\n                )}\r\n              </Popper>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"Minimalist Popper\">\r\n            <span>You can use the component with zero extra dependencies.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <button\r\n                aria-describedby={id2}\r\n                type=\"button\"\r\n                onClick={handleClick2}\r\n              >\r\n                Toggle Popper\r\n              </button>\r\n              <Popper id={id2} open={open2} anchorEl={anchorEl2}>\r\n                <div>The content of the Popper.</div>\r\n              </Popper>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode4}\r\n            beforeCodeTitle=\"Without transition Popper\"\r\n          >\r\n            <div>\r\n              <Button\r\n                aria-describedby={id4}\r\n                variant=\"contained\"\r\n                onClick={handleClick4}\r\n              >\r\n                Toggle Popper\r\n              </Button>\r\n              <Popper id={id4} open={open4} anchorEl={anchorEl4}>\r\n                <Paper>\r\n                  <Typography className={classes4.typography}>\r\n                    The content of the Popper.\r\n                  </Typography>\r\n                </Paper>\r\n              </Popper>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode6} beforeCodeTitle=\"PopupState helper\">\r\n            <span>\r\n              There is a 3rd party package <code>material-ui-popup-state</code>{\" \"}\r\n              that takes care of popper state for you in most cases.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div>\r\n              <PopupState variant=\"popper\" popupId=\"demo-popup-popper\">\r\n                {popupState => (\r\n                  <div>\r\n                    <Button variant=\"contained\" {...bindToggle(popupState)}>\r\n                      Toggle Popper\r\n                    </Button>\r\n                    <Popper {...bindPopper(popupState)} transition>\r\n                      {({ TransitionProps }) => (\r\n                        <Fade {...TransitionProps} timeout={350}>\r\n                          <Paper>\r\n                            <Typography className={classes6.typography}>\r\n                              The content of the Popper.\r\n                            </Typography>\r\n                          </Paper>\r\n                        </Fade>\r\n                      )}\r\n                    </Popper>\r\n                  </div>\r\n                )}\r\n              </PopupState>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function SimplePopper() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  function handleClick(event) {\r\n    setAnchorEl(anchorEl ? null : event.currentTarget);\r\n  }\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popper' : undefined;\r\n\r\n  return (\r\n    <div>\r\n      <Button aria-describedby={id} variant=\"contained\" onClick={handleClick}>\r\n        Toggle Popper\r\n      </Button>\r\n      <Popper id={id} open={open} anchorEl={anchorEl} transition>\r\n        {({ TransitionProps }) => (\r\n          <Fade {...TransitionProps} timeout={350}>\r\n            <Paper>\r\n              <Typography className={classes.typography}>The content of the Popper.</Typography>\r\n            </Paper>\r\n          </Fade>\r\n        )}\r\n      </Popper>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport Popper from '@material-ui/core/Popper';\r\n\r\nexport default function MinimalPopper() {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  function handleClick(event) {\r\n    setAnchorEl(anchorEl ? null : event.currentTarget);\r\n  }\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popper' : undefined;\r\n\r\n  return (\r\n    <div>\r\n      <button aria-describedby={id} type=\"button\" onClick={handleClick}>\r\n        Toggle Popper\r\n      </button>\r\n      <Popper id={id} open={open} anchorEl={anchorEl}>\r\n        <div>The content of the Popper.</div>\r\n      </Popper>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: 500,\r\n  },\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function PositionedPopper() {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [placement, setPlacement] = React.useState();\r\n  const classes = useStyles();\r\n\r\n  const handleClick = newPlacement => event => {\r\n    setAnchorEl(event.currentTarget);\r\n    setOpen(prev => placement !== newPlacement || !prev);\r\n    setPlacement(newPlacement);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Popper open={open} anchorEl={anchorEl} placement={placement} transition>\r\n        {({ TransitionProps }) => (\r\n          <Fade {...TransitionProps} timeout={350}>\r\n            <Paper>\r\n              <Typography className={classes.typography}>The content of the Popper.</Typography>\r\n            </Paper>\r\n          </Fade>\r\n        )}\r\n      </Popper>\r\n      <Grid container justify=\"center\">\r\n        <Grid item>\r\n          <Button onClick={handleClick('top-start')}>top-start</Button>\r\n          <Button onClick={handleClick('top')}>top</Button>\r\n          <Button onClick={handleClick('top-end')}>top-end</Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container justify=\"center\">\r\n        <Grid item xs={6}>\r\n          <Button onClick={handleClick('left-start')}>left-start</Button>\r\n          <br />\r\n          <Button onClick={handleClick('left')}>left</Button>\r\n          <br />\r\n          <Button onClick={handleClick('left-end')}>left-end</Button>\r\n        </Grid>\r\n        <Grid item container xs={6} alignItems=\"flex-end\" direction=\"column\">\r\n          <Grid item>\r\n            <Button onClick={handleClick('right-start')}>right-start</Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button onClick={handleClick('right')}>right</Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button onClick={handleClick('right-end')}>right-end</Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container justify=\"center\">\r\n        <Grid item>\r\n          <Button onClick={handleClick('bottom-start')}>bottom-start</Button>\r\n          <Button onClick={handleClick('bottom')}>bottom</Button>\r\n          <Button onClick={handleClick('bottom-end')}>bottom-end</Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode4 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function NoTransitionPopper() {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const classes = useStyles();\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(prev => (prev ? null : event.currentTarget));\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'no-transition-popper' : undefined;\r\n\r\n  return (\r\n    <div>\r\n      <Button aria-describedby={id} variant=\"contained\" onClick={handleClick}>\r\n        Toggle Popper\r\n      </Button>\r\n      <Popper id={id} open={open} anchorEl={anchorEl}>\r\n        <Paper>\r\n          <Typography className={classes.typography}>The content of the Popper.</Typography>\r\n        </Paper>\r\n      </Popper>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode5 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function FakedReferencePopper() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const classes = useStyles();\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    const selection = window.getSelection();\r\n\r\n    // Resets when the selection has a length of 0\r\n    if (!selection || selection.anchorOffset === selection.focusOffset) {\r\n      handleClose();\r\n      return;\r\n    }\r\n\r\n    const getBoundingClientRect = () => selection.getRangeAt(0).getBoundingClientRect();\r\n\r\n    setOpen(true);\r\n    setAnchorEl({\r\n      clientWidth: getBoundingClientRect().width,\r\n      clientHeight: getBoundingClientRect().height,\r\n      getBoundingClientRect,\r\n    });\r\n  };\r\n\r\n  const id = open ? 'faked-reference-popper' : undefined;\r\n\r\n  return (\r\n    <div onMouseLeave={handleClose}>\r\n      <Typography aria-describedby={id} onMouseUp={handleMouseUp}>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam ipsum purus, bibendum sit\r\n        amet vulputate eget, porta semper ligula. Donec bibendum vulputate erat, ac fringilla mi\r\n        finibus nec. Donec ac dolor sed dolor porttitor blandit vel vel purus. Fusce vel malesuada\r\n        ligula. Nam quis vehicula ante, eu finibus est. Proin ullamcorper fermentum orci, quis\r\n        finibus massa. Nunc lobortis, massa ut rutrum ultrices, metus metus finibus ex, sit amet\r\n        facilisis neque enim sed neque. Quisque accumsan metus vel maximus consequat. Suspendisse\r\n        lacinia tellus a libero volutpat maximus.\r\n      </Typography>\r\n      <Popper id={id} open={open} anchorEl={anchorEl} transition placement=\"bottom-start\">\r\n        {({ TransitionProps }) => (\r\n          <Fade {...TransitionProps} timeout={350}>\r\n            <Paper>\r\n              <Typography className={classes.typography}>The content of the Popper.</Typography>\r\n            </Paper>\r\n          </Fade>\r\n        )}\r\n      </Popper>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode6 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport PopupState, { bindToggle, bindPopper } from 'material-ui-popup-state';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function PopperPopupState() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <PopupState variant=\"popper\" popupId=\"demo-popup-popper\">\r\n      {popupState => (\r\n        <div>\r\n          <Button variant=\"contained\" {...bindToggle(popupState)}>\r\n            Toggle Popper\r\n          </Button>\r\n          <Popper {...bindPopper(popupState)} transition>\r\n            {({ TransitionProps }) => (\r\n              <Fade {...TransitionProps} timeout={350}>\r\n                <Paper>\r\n                  <Typography className={classes.typography}>The content of the Popper.</Typography>\r\n                </Paper>\r\n              </Fade>\r\n            )}\r\n          </Popper>\r\n        </div>\r\n      )}\r\n    </PopupState>\r\n  );\r\n}\r\n`;\r\n","/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Button, Typography, Portal} from \"@material-ui/core\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  alert: {\r\n    padding: theme.spacing(1),\r\n    margin: theme.spacing(1, 0),\r\n    border: \"1px solid\",\r\n    borderColor: theme.palette.text.primary\r\n  }\r\n}));\r\n\r\nexport default function PortalExamplesPage() {\r\n  // Example 1\r\n  const [show, setShow] = React.useState(false);\r\n  const container = React.useRef(null);\r\n  const classes = useStyles();\r\n\r\n  function handleClick() {\r\n    setShow(!show);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          The portal component renders its children into a new \"subtree\" outside\r\n          of current component hierarchy.\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/portal/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Simple Portal\">\r\n        <span className=\"pb-3\">\r\n          The children of the portal component will be appended to the{\" \"}\r\n          <code>container</code> specified.\r\n        </span>\r\n        <div>\r\n          The component is used internally by the <code>Modal</code> and{\" \"}\r\n          <code>Popper</code> components. On the server, the content won't be\r\n          rendered. You have to wait for the client side hydratation to see the\r\n          children.\r\n        </div>\r\n        <div className=\"separator separator-dashed my-7\"></div>\r\n        <div>\r\n          <Button onClick={handleClick}>\r\n            {show ? \"Unmount children\" : \"Mount children\"}\r\n          </Button>\r\n          <div className={classes.alert}>\r\n            <Typography>It looks like I will render here.</Typography>\r\n            {show ? (\r\n              <Portal container={container.current}>\r\n                <Typography>But I actually render here!</Typography>\r\n              </Portal>\r\n            ) : null}\r\n          </div>\r\n          <div className={classes.alert} ref={container} />\r\n        </div>\r\n      </KTCodeExample>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport Portal from '@material-ui/core/Portal';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  alert: {\r\n    padding: theme.spacing(1),\r\n    margin: theme.spacing(1, 0),\r\n    border: '1px solid',\r\n    borderColor: theme.palette.text.primary,\r\n  },\r\n}));\r\n\r\nexport default function SimplePortal() {\r\n  const [show, setShow] = React.useState(false);\r\n  const container = React.useRef(null);\r\n  const classes = useStyles();\r\n\r\n  function handleClick() {\r\n    setShow(!show);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClick}>{show ? 'Unmount children' : 'Mount children'}</Button>\r\n      <div className={classes.alert}>\r\n        <Typography>It looks like I will render here.</Typography>\r\n        {show ? (\r\n          <Portal container={container.current}>\r\n            <Typography>But I actually render here!</Typography>\r\n          </Portal>\r\n        ) : null}\r\n      </div>\r\n      <div className={classes.alert} ref={container} />\r\n    </div>\r\n  );\r\n}\r\n`;\r\n","/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {\r\n  FormControlLabel,\r\n  Switch,\r\n  Collapse,\r\n  Paper,\r\n  Fade,\r\n  Grow,\r\n  Slide,\r\n  Zoom\r\n} from \"@material-ui/core\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n// Example 1\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    height: 180\r\n  },\r\n  container: {\r\n    display: \"flex\"\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  svg: {\r\n    width: 100,\r\n    height: 100\r\n  },\r\n  polygon: {\r\n    fill: theme.palette.common.white,\r\n    stroke: theme.palette.divider,\r\n    strokeWidth: 1\r\n  }\r\n}));\r\n\r\n// Example 2\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    height: 180\r\n  },\r\n  container: {\r\n    display: \"flex\"\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  svg: {\r\n    width: 100,\r\n    height: 100\r\n  },\r\n  polygon: {\r\n    fill: theme.palette.common.white,\r\n    stroke: theme.palette.divider,\r\n    strokeWidth: 1\r\n  }\r\n}));\r\n\r\n// Example 3\r\nconst useStyles3 = makeStyles(theme => ({\r\n  root: {\r\n    height: 180\r\n  },\r\n  container: {\r\n    display: \"flex\"\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  svg: {\r\n    width: 100,\r\n    height: 100\r\n  },\r\n  polygon: {\r\n    fill: theme.palette.common.white,\r\n    stroke: theme.palette.divider,\r\n    strokeWidth: 1\r\n  }\r\n}));\r\n\r\n// Example 4\r\nconst useStyles4 = makeStyles(theme => ({\r\n  root: {\r\n    height: 180\r\n  },\r\n  wrapper: {\r\n    width: 100 + theme.spacing(2)\r\n  },\r\n  paper: {\r\n    zIndex: 1,\r\n    position: \"relative\",\r\n    margin: theme.spacing(1)\r\n  },\r\n  svg: {\r\n    width: 100,\r\n    height: 100\r\n  },\r\n  polygon: {\r\n    fill: theme.palette.common.white,\r\n    stroke: theme.palette.divider,\r\n    strokeWidth: 1\r\n  }\r\n}));\r\n\r\n// Example 5\r\nconst useStyles5 = makeStyles(theme => ({\r\n  root: {\r\n    height: 180\r\n  },\r\n  container: {\r\n    display: \"flex\"\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  svg: {\r\n    width: 100,\r\n    height: 100\r\n  },\r\n  polygon: {\r\n    fill: theme.palette.common.white,\r\n    stroke: theme.palette.divider,\r\n    strokeWidth: 1\r\n  }\r\n}));\r\n\r\nexport default function TranstitionsExamplesPage() {\r\n  // Example 1\r\n  const classes1 = useStyles1();\r\n  const [checked1, setChecked1] = React.useState(false);\r\n\r\n  function handleChange1() {\r\n    setChecked1(prev => !prev);\r\n  }\r\n\r\n  // Example 2\r\n  const classes2 = useStyles2();\r\n  const [checked2, setChecked2] = React.useState(false);\r\n\r\n  function handleChange2() {\r\n    setChecked2(prev => !prev);\r\n  }\r\n\r\n  // Example 3\r\n  const classes3 = useStyles3();\r\n  const [checked3, setChecked3] = React.useState(false);\r\n\r\n  function handleChange3() {\r\n    setChecked3(prev => !prev);\r\n  }\r\n\r\n  // Example 4\r\n  const classes4 = useStyles4();\r\n  const [checked4, setChecked4] = React.useState(false);\r\n\r\n  function handleChange4() {\r\n    setChecked4(prev => !prev);\r\n  }\r\n\r\n  // Example 5\r\n  const classes5 = useStyles5();\r\n  const [checked5, setChecked5] = React.useState(false);\r\n\r\n  function handleChange5() {\r\n    setChecked5(prev => !prev);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>Transition helps make a UI expressive and easy to use.</span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/transitions/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Collapse\">\r\n            <span>\r\n              Expand vertically from the top of the child element. The{\" \"}\r\n              <code>collapsedHeight</code> property can be used to set the\r\n              minimum height when not expanded.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes1.root}>\r\n              <FormControlLabel\r\n                control={<Switch checked={checked1} onChange={handleChange1} />}\r\n                label=\"Show\"\r\n              />\r\n              <div className={classes1.container}>\r\n                <Collapse in={checked1}>\r\n                  <Paper elevation={4} className={classes1.paper}>\r\n                    <svg className={classes1.svg}>\r\n                      <polygon\r\n                        points=\"0,100 50,00, 100,100\"\r\n                        className={classes1.polygon}\r\n                      />\r\n                    </svg>\r\n                  </Paper>\r\n                </Collapse>\r\n                <Collapse in={checked1} collapsedHeight=\"40px\">\r\n                  <Paper elevation={4} className={classes1.paper}>\r\n                    <svg className={classes1.svg}>\r\n                      <polygon\r\n                        points=\"0,100 50,00, 100,100\"\r\n                        className={classes1.polygon}\r\n                      />\r\n                    </svg>\r\n                  </Paper>\r\n                </Collapse>\r\n              </div>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode3} beforeCodeTitle=\"Grow\">\r\n            <span className=\"pb-3\">\r\n              Expand outwards from the center of the child element, while also\r\n              fading in from transparent to opaque.\r\n            </span>\r\n            <div>\r\n              The second example demonstrates how to change the{\" \"}\r\n              <code>transform-origin</code>, and conditionally applies the{\" \"}\r\n              <code>timeout</code> property to change the entry speed.\r\n            </div>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n\r\n            <div className={classes3.root}>\r\n              <FormControlLabel\r\n                control={<Switch checked={checked3} onChange={handleChange3} />}\r\n                label=\"Show\"\r\n              />\r\n              <div className={classes3.container}>\r\n                <Grow in={checked3}>\r\n                  <Paper elevation={4} className={classes3.paper}>\r\n                    <svg className={classes3.svg}>\r\n                      <polygon\r\n                        points=\"0,100 50,00, 100,100\"\r\n                        className={classes3.polygon}\r\n                      />\r\n                    </svg>\r\n                  </Paper>\r\n                </Grow>\r\n                {/* Conditionally applies the timeout property to change the entry speed. */}\r\n                <Grow\r\n                  in={checked3}\r\n                  style={{ transformOrigin: \"0 0 0\" }}\r\n                  {...(checked3 ? { timeout: 1000 } : {})}\r\n                >\r\n                  <Paper elevation={4} className={classes3.paper}>\r\n                    <svg className={classes3.svg}>\r\n                      <polygon\r\n                        points=\"0,100 50,00, 100,100\"\r\n                        className={classes3.polygon}\r\n                      />\r\n                    </svg>\r\n                  </Paper>\r\n                </Grow>\r\n              </div>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode5} beforeCodeTitle=\"Zoom\">\r\n            <span>Expand outwards from the center of the child element.</span>\r\n            <div className=\"pb-3\">\r\n              This example also demonstrates how to delay the enter transition.\r\n            </div>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes5.root}>\r\n              <FormControlLabel\r\n                control={<Switch checked={checked5} onChange={handleChange5} />}\r\n                label=\"Show\"\r\n              />\r\n              <div className={classes5.container}>\r\n                <Zoom in={checked5}>\r\n                  <Paper elevation={4} className={classes5.paper}>\r\n                    <svg className={classes5.svg}>\r\n                      <polygon\r\n                        points=\"0,100 50,00, 100,100\"\r\n                        className={classes5.polygon}\r\n                      />\r\n                    </svg>\r\n                  </Paper>\r\n                </Zoom>\r\n                <Zoom\r\n                  in={checked5}\r\n                  style={{ transitionDelay: checked5 ? \"500ms\" : \"0ms\" }}\r\n                >\r\n                  <Paper elevation={4} className={classes5.paper}>\r\n                    <svg className={classes5.svg}>\r\n                      <polygon\r\n                        points=\"0,100 50,00, 100,100\"\r\n                        className={classes5.polygon}\r\n                      />\r\n                    </svg>\r\n                  </Paper>\r\n                </Zoom>\r\n              </div>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample jsCode={jsCode2} beforeCodeTitle=\"Fade\">\r\n            <span>Fade in from transparent to opaque.</span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes2.root}>\r\n              <FormControlLabel\r\n                control={<Switch checked={checked2} onChange={handleChange2} />}\r\n                label=\"Show\"\r\n              />\r\n              <div className={classes2.container}>\r\n                <Fade in={checked2}>\r\n                  <Paper elevation={4} className={classes2.paper}>\r\n                    <svg className={classes2.svg}>\r\n                      <polygon\r\n                        points=\"0,100 50,00, 100,100\"\r\n                        className={classes2.polygon}\r\n                      />\r\n                    </svg>\r\n                  </Paper>\r\n                </Fade>\r\n              </div>\r\n            </div>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample jsCode={jsCode4} beforeCodeTitle=\"Slide\">\r\n            <span>\r\n              Slide in from the edge of the screen. The <code>direction</code>{\" \"}\r\n              property controls which edge of the screen the transition starts\r\n              from.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <div className={classes4.root}>\r\n              <div className={classes4.wrapper}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Switch checked={checked4} onChange={handleChange4} />\r\n                  }\r\n                  label=\"Show\"\r\n                />\r\n                <Slide direction=\"up\" in={checked4} mountOnEnter unmountOnExit>\r\n                  <Paper elevation={4} className={classes4.paper}>\r\n                    <svg className={classes4.svg}>\r\n                      <polygon\r\n                        points=\"0,100 50,00, 100,100\"\r\n                        className={classes4.polygon}\r\n                      />\r\n                    </svg>\r\n                  </Paper>\r\n                </Slide>\r\n              </div>\r\n            </div>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: 180,\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  svg: {\r\n    width: 100,\r\n    height: 100,\r\n  },\r\n  polygon: {\r\n    fill: theme.palette.common.white,\r\n    stroke: theme.palette.divider,\r\n    strokeWidth: 1,\r\n  },\r\n}));\r\n\r\nexport default function SimpleCollapse() {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = React.useState(false);\r\n\r\n  function handleChange() {\r\n    setChecked(prev => !prev);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormControlLabel\r\n        control={<Switch checked={checked} onChange={handleChange} />}\r\n        label=\"Show\"\r\n      />\r\n      <div className={classes.container}>\r\n        <Collapse in={checked}>\r\n          <Paper elevation={4} className={classes.paper}>\r\n            <svg className={classes.svg}>\r\n              <polygon points=\"0,100 50,00, 100,100\" className={classes.polygon} />\r\n            </svg>\r\n          </Paper>\r\n        </Collapse>\r\n        <Collapse in={checked} collapsedHeight=\"40px\">\r\n          <Paper elevation={4} className={classes.paper}>\r\n            <svg className={classes.svg}>\r\n              <polygon points=\"0,100 50,00, 100,100\" className={classes.polygon} />\r\n            </svg>\r\n          </Paper>\r\n        </Collapse>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: 180,\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  svg: {\r\n    width: 100,\r\n    height: 100,\r\n  },\r\n  polygon: {\r\n    fill: theme.palette.common.white,\r\n    stroke: theme.palette.divider,\r\n    strokeWidth: 1,\r\n  },\r\n}));\r\n\r\nexport default function SimpleFade() {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = React.useState(false);\r\n\r\n  function handleChange() {\r\n    setChecked(prev => !prev);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormControlLabel\r\n        control={<Switch checked={checked} onChange={handleChange} />}\r\n        label=\"Show\"\r\n      />\r\n      <div className={classes.container}>\r\n        <Fade in={checked}>\r\n          <Paper elevation={4} className={classes.paper}>\r\n            <svg className={classes.svg}>\r\n              <polygon points=\"0,100 50,00, 100,100\" className={classes.polygon} />\r\n            </svg>\r\n          </Paper>\r\n        </Fade>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: 180,\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  svg: {\r\n    width: 100,\r\n    height: 100,\r\n  },\r\n  polygon: {\r\n    fill: theme.palette.common.white,\r\n    stroke: theme.palette.divider,\r\n    strokeWidth: 1,\r\n  },\r\n}));\r\n\r\nexport default function SimpleGrow() {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = React.useState(false);\r\n\r\n  function handleChange() {\r\n    setChecked(prev => !prev);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormControlLabel\r\n        control={<Switch checked={checked} onChange={handleChange} />}\r\n        label=\"Show\"\r\n      />\r\n      <div className={classes.container}>\r\n        <Grow in={checked}>\r\n          <Paper elevation={4} className={classes.paper}>\r\n            <svg className={classes.svg}>\r\n              <polygon points=\"0,100 50,00, 100,100\" className={classes.polygon} />\r\n            </svg>\r\n          </Paper>\r\n        </Grow>\r\n        {/* Conditionally applies the timeout property to change the entry speed. */}\r\n        <Grow\r\n          in={checked}\r\n          style={{ transformOrigin: '0 0 0' }}\r\n          {...(checked ? { timeout: 1000 } : {})}\r\n        >\r\n          <Paper elevation={4} className={classes.paper}>\r\n            <svg className={classes.svg}>\r\n              <polygon points=\"0,100 50,00, 100,100\" className={classes.polygon} />\r\n            </svg>\r\n          </Paper>\r\n        </Grow>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode4 = `\r\nimport React from 'react';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: 180,\r\n  },\r\n  wrapper: {\r\n    width: 100 + theme.spacing(2),\r\n  },\r\n  paper: {\r\n    zIndex: 1,\r\n    position: 'relative',\r\n    margin: theme.spacing(1),\r\n  },\r\n  svg: {\r\n    width: 100,\r\n    height: 100,\r\n  },\r\n  polygon: {\r\n    fill: theme.palette.common.white,\r\n    stroke: theme.palette.divider,\r\n    strokeWidth: 1,\r\n  },\r\n}));\r\n\r\nexport default function SimpleSlide() {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = React.useState(false);\r\n\r\n  function handleChange() {\r\n    setChecked(prev => !prev);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.wrapper}>\r\n        <FormControlLabel\r\n          control={<Switch checked={checked} onChange={handleChange} />}\r\n          label=\"Show\"\r\n        />\r\n        <Slide direction=\"up\" in={checked} mountOnEnter unmountOnExit>\r\n          <Paper elevation={4} className={classes.paper}>\r\n            <svg className={classes.svg}>\r\n              <polygon points=\"0,100 50,00, 100,100\" className={classes.polygon} />\r\n            </svg>\r\n          </Paper>\r\n        </Slide>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n`;\r\nconst jsCode5 = `\r\nimport React from 'react';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: 180,\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  svg: {\r\n    width: 100,\r\n    height: 100,\r\n  },\r\n  polygon: {\r\n    fill: theme.palette.common.white,\r\n    stroke: theme.palette.divider,\r\n    strokeWidth: 1,\r\n  },\r\n}));\r\n\r\nexport default function SimpleZoom() {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = React.useState(false);\r\n\r\n  function handleChange() {\r\n    setChecked(prev => !prev);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormControlLabel\r\n        control={<Switch checked={checked} onChange={handleChange} />}\r\n        label=\"Show\"\r\n      />\r\n      <div className={classes.container}>\r\n        <Zoom in={checked}>\r\n          <Paper elevation={4} className={classes.paper}>\r\n            <svg className={classes.svg}>\r\n              <polygon points=\"0,100 50,00, 100,100\" className={classes.polygon} />\r\n            </svg>\r\n          </Paper>\r\n        </Zoom>\r\n        <Zoom in={checked} style={{ transitionDelay: checked ? '500ms' : '0ms' }}>\r\n          <Paper elevation={4} className={classes.paper}>\r\n            <svg className={classes.svg}>\r\n              <polygon points=\"0,100 50,00, 100,100\" className={classes.polygon} />\r\n            </svg>\r\n          </Paper>\r\n        </Zoom>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n`;\r\n","/* eslint-disable no-restricted-imports */\r\nimport React from \"react\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport {useTheme} from \"@material-ui/core/styles\";\r\nimport json2mq from \"json2mq\";\r\nimport useMediaQueryTheme from \"@material-ui/core/useMediaQuery\";\r\nimport mediaQuery from \"css-mediaquery\";\r\nimport {ThemeProvider} from \"@material-ui/styles\";\r\nimport {createMuiTheme} from \"@material-ui/core/styles\";\r\nimport {Notice, KTCodeExample} from \"../../../../_metronic/_partials/controls\";\r\n\r\n// Example 4\r\nfunction MyComponent4() {\r\n  const matches = useMediaQueryTheme(\"@media (min-width:600px)\");\r\n\r\n  return <span>{`@media (min-width:600px) matches: ${matches}`}</span>;\r\n}\r\n\r\n// Example 5\r\nfunction useWidth5() {\r\n  const theme5 = useTheme();\r\n  const keys5 = [...theme5.breakpoints.keys].reverse();\r\n  return (\r\n    keys5.reduce((output, key) => {\r\n      // eslint-disable-next-line react-hooks/rules-of-hooks\r\n      const matches = useMediaQuery(theme5.breakpoints.only(key));\r\n      return !output && matches ? key : output;\r\n    }, null) || \"xs\"\r\n  );\r\n}\r\n\r\nfunction MyComponent5() {\r\n  const width5 = useWidth5();\r\n  return <span>{`width: ${width5}`}</span>;\r\n}\r\n\r\nconst theme5 = createMuiTheme();\r\n\r\nexport default function UseMediaQueryExamplesPage() {\r\n  // Example 1\r\n  const matches1 = useMediaQuery(\"(min-width:600px)\");\r\n\r\n  // Example 2\r\n  const theme2 = useTheme();\r\n  const matches2 = useMediaQuery(theme2.breakpoints.up(\"sm\"));\r\n\r\n  // Example 3\r\n  const matches3 = useMediaQuery(\r\n    json2mq({\r\n      minWidth: 600\r\n    })\r\n  );\r\n\r\n  // Example 4\r\n  const ssrMatchMedia4 = query => ({\r\n    matches4: mediaQuery.match(query, {\r\n      // The estimated CSS width of the browser.\r\n      // For the sake of this demo, we are using a fixed value.\r\n      // In production, you can look into client-hint https://caniuse.com/#search=client%20hint\r\n      // or user-agent resolution.\r\n      width: 800\r\n    })\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Notice icon=\"flaticon-warning font-primary\">\r\n        <span>\r\n          This is a CSS media query hook for React. It listens for matches to a\r\n          CSS media query. It allows the rendering of components based on\r\n          whether the query matches or not.\r\n        </span>{\" \"}\r\n        <span>\r\n          For more info please check the components's official{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            className=\"font-weight-bold\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://material-ui.com/components/use-media-query/\"\r\n          >\r\n            demos & documentation\r\n          </a>\r\n        </span>\r\n      </Notice>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample jsCode={jsCode1} beforeCodeTitle=\"Simple media query\">\r\n            <span>\r\n              You should provide a media query to the first argument of the\r\n              hook. The media query string can by any valid CSS media query,\r\n              e.g. <code>'print'</code>.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <span>{`(min-width:600px) matches: ${matches1}`}</span>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode3}\r\n            beforeCodeTitle=\"Using JavaScript syntax\"\r\n          >\r\n            <span>\r\n              <code>json2mq</code> is used to generate media query string from a\r\n              JavaScript object.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <span>{`{ minWidth: 600 } matches: ${matches3}`}</span>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode5}\r\n            beforeCodeTitle=\"Migrating from withWidth()\"\r\n          >\r\n            <span>\r\n              The <code>withWidth()</code> higher-order component injects the\r\n              screen width of the page. You can reproduce the same behavior with\r\n              a <code>useWidth</code> hook:\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <ThemeProvider theme={theme5}>\r\n              <MyComponent5 />\r\n            </ThemeProvider>\r\n          </KTCodeExample>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <KTCodeExample\r\n            jsCode={jsCode2}\r\n            beforeCodeTitle=\"Using Material-UI's breakpoint helpers\"\r\n          >\r\n            <span>\r\n              You can use Material-UI's <code>breakpoint helpers</code> as\r\n              follows:\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <span>{`theme.breakpoints.up('sm') matches: ${matches2}`}</span>\r\n          </KTCodeExample>\r\n\r\n          <KTCodeExample\r\n            jsCode={jsCode4}\r\n            beforeCodeTitle=\"Server-side rendering\"\r\n          >\r\n            <span>\r\n              An implementation of matchMedia is required on the server, we\r\n              recommend using css-mediaquery. We also encourage the usage of the{\" \"}\r\n              <code>useMediaQueryTheme</code> version of the hook that fetches\r\n              properties from the theme. This way, you can provide a{\" \"}\r\n              <code>ssrMatchMedia</code> option once for all your React tree.\r\n            </span>\r\n            <div className=\"separator separator-dashed my-7\"></div>\r\n            <ThemeProvider\r\n              theme={{ props: { MuiUseMediaQuery: { ssrMatchMedia4 } } }}\r\n            >\r\n              <MyComponent4 />\r\n            </ThemeProvider>\r\n          </KTCodeExample>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst jsCode1 = `\r\nimport React from 'react';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nexport default function SimpleMediaQuery() {\r\n  const matches = useMediaQuery('(min-width:600px)');\r\n\r\n  return <span>{\\`(min-width:600px) matches: \\${matches}\\`}</span>;\r\n}\r\n`;\r\nconst jsCode2 = `\r\nimport React from 'react';\r\nimport { createMuiTheme, useTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nfunction MyComponent() {\r\n  const theme = useTheme();\r\n  const matches = useMediaQuery(theme.breakpoints.up('sm'));\r\n\r\n  return <span>{\\`theme.breakpoints.up('sm') matches: \\${matches}\\`}</span>;\r\n}\r\n\r\nconst theme = createMuiTheme();\r\n\r\nexport default function ThemeHelper() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <MyComponent />\r\n    </ThemeProvider>\r\n  );\r\n}\r\n`;\r\nconst jsCode3 = `\r\nimport React from 'react';\r\nimport json2mq from 'json2mq';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nexport default function JavaScriptMedia() {\r\n  const matches = useMediaQuery(\r\n    json2mq({\r\n      minWidth: 600,\r\n    }),\r\n  );\r\n\r\n  return <span>{\\`{ minWidth: 600 } matches: \\${matches}\\`}</span>;\r\n}\r\n`;\r\nconst jsCode4 = `\r\nimport React from 'react';\r\nimport mediaQuery from 'css-mediaquery';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport useMediaQueryTheme from '@material-ui/core/useMediaQuery';\r\n\r\nfunction MyComponent() {\r\n  const matches = useMediaQueryTheme('@media (min-width:600px)');\r\n\r\n  return <span>{\\`@media (min-width:600px) matches: \\${matches}\\`}</span>;\r\n}\r\n\r\nexport default function ServerSide() {\r\n  // Use https://github.com/ericf/css-mediaquery as ponyfill.\r\n  const ssrMatchMedia = query => ({\r\n    matches: mediaQuery.match(query, {\r\n      // The estimated CSS width of the browser.\r\n      // For the sake of this demo, we are using a fixed value.\r\n      // In production, you can look into client-hint https://caniuse.com/#search=client%20hint\r\n      // or user-agent resolution.\r\n      width: 800,\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <ThemeProvider theme={{ props: { MuiUseMediaQuery: { ssrMatchMedia } } }}>\r\n      <MyComponent />\r\n    </ThemeProvider>\r\n  );\r\n}\r\n`;\r\nconst jsCode5 = `\r\n/**\r\n * Be careful using this hook. It only works because the number of\r\n * breakpoints in theme is static. It will break once you change the number of\r\n * breakpoints. See https://reactjs.org/docs/hooks-rules.html#only-call-hooks-at-the-top-level\r\n */\r\nfunction useWidth() {\r\n  const theme = useTheme();\r\n  const keys = [...theme.breakpoints.keys].reverse();\r\n  return (\r\n    keys.reduce((output, key) => {\r\n      // eslint-disable-next-line react-hooks/rules-of-hooks\r\n      const matches = useMediaQuery(theme.breakpoints.only(key));\r\n      return !output && matches ? key : output;\r\n    }, null) || 'xs'\r\n  );\r\n}\r\n`;\r\n","import React from \"react\";\r\nimport { Redirect, Switch } from \"react-router-dom\";\r\nimport { ContentRoute } from \"../../../../_metronic/layout\";\r\nimport ClickAwayListenerExamplesPage from \"./ClickAwayListenerExamplesPage\";\r\nimport ModalExamplesPage from \"./ModalExamplesPage\";\r\nimport NoSSRExamplesPage from \"./NoSSRExamplesPage\";\r\nimport PopoverExamplesPage from \"./PopoverExamplesPage\";\r\nimport PopperExamplesPage from \"./PopperExamplesPage\";\r\nimport PortalExamplesPage from \"./PortalExamplesPage\";\r\nimport TransitionsExamplesPage from \"./TransitionsExamplesPage\";\r\nimport UseMediaQueryExamplesPage from \"./UseMediaQueryExamplesPage\";\r\n\r\nexport function UtilsPage() {\r\n  return (\r\n    <Switch>\r\n      <Redirect\r\n        exact={true}\r\n        from=\"/google-material/utils\"\r\n        to=\"/google-material/utils/click-away-listener\"\r\n      />\r\n      <ContentRoute\r\n        path=\"/google-material/utils/click-away-listener\"\r\n        component={ClickAwayListenerExamplesPage}\r\n      />\r\n      <ContentRoute\r\n        path=\"/google-material/utils/modal\"\r\n        component={ModalExamplesPage}\r\n      />\r\n      <ContentRoute\r\n        path=\"/google-material/utils/no-ssr\"\r\n        component={NoSSRExamplesPage}\r\n      />\r\n      <ContentRoute\r\n        path=\"/google-material/utils/popover\"\r\n        component={PopoverExamplesPage}\r\n      />\r\n      <ContentRoute\r\n        path=\"/google-material/utils/popper\"\r\n        component={PopperExamplesPage}\r\n      />\r\n      <ContentRoute\r\n        path=\"/google-material/utils/portal\"\r\n        component={PortalExamplesPage}\r\n      />\r\n      <ContentRoute\r\n        path=\"/google-material/utils/transitions\"\r\n        component={TransitionsExamplesPage}\r\n      />\r\n      <ContentRoute\r\n        path=\"/google-material/utils/use-media-query\"\r\n        component={UseMediaQueryExamplesPage}\r\n      />\r\n    </Switch>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Redirect, Switch } from \"react-router-dom\";\r\nimport { InputsPage } from \"./inputs/InputsPage\";\r\nimport { DataDisplaysPage } from \"./data-displays/DataDisplaysPage\";\r\nimport { FeedbackPage } from \"./feedback/FeedbacksPage\";\r\nimport { LabsPage } from \"./labs/LabsPage\";\r\nimport { NavigationPage } from \"./navigation/NavigationPage\";\r\nimport { LayoutPage } from \"./layout/LayoutPage\";\r\nimport { SurfacesPage } from \"./surfaces/SurfacesPage\";\r\nimport { UtilsPage } from \"./utils/UtilsPage\";\r\nimport { ContentRoute } from \"../../../_metronic/layout\";\r\n\r\nexport default function GoogleMaterialPage() {\r\n  return (\r\n    <Switch>\r\n      <Redirect\r\n        exact={true}\r\n        from=\"/google-material\"\r\n        to=\"/google-material/inputs/autocomplete\"\r\n      />\r\n      {/* Surfaces */}\r\n      <ContentRoute from=\"/google-material/surfaces\" component={SurfacesPage} />\r\n\r\n      {/* Layout */}\r\n      <ContentRoute from=\"/google-material/layout\" component={LayoutPage} />\r\n\r\n      {/* Inputs */}\r\n      <ContentRoute from=\"/google-material/inputs\" component={InputsPage} />\r\n      {/* Data Display */}\r\n      <ContentRoute\r\n        from=\"/google-material/data-displays\"\r\n        component={DataDisplaysPage}\r\n      />\r\n\r\n      {/* Navigation */}\r\n      <ContentRoute\r\n        from=\"/google-material/navigation\"\r\n        component={NavigationPage}\r\n      />\r\n\r\n      {/* Feedback */}\r\n      <ContentRoute from=\"/google-material/feedback\" component={FeedbackPage} />\r\n\r\n      {/* Utils */}\r\n      <ContentRoute from=\"/google-material/utils\" component={UtilsPage} />\r\n\r\n      {/* Lab */}\r\n      <ContentRoute from=\"/google-material/labs\" component={LabsPage} />\r\n    </Switch>\r\n  );\r\n}\r\n"],"sourceRoot":""}